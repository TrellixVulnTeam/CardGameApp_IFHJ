{"version":3,"sources":["./src/app/components/board/card/card.component.ts","./src/app/components/board/card/card.component.html","./src/app/shared/models/board.model.ts","./src/environments/environment.ts","./src/app/shared/models/deck.model.ts","./src/app/shared/models/card.model.ts","./src/app/components/not-found/not-found.component.ts","./src/app/components/not-found/not-found.component.html","./src/app/shared/models/player.model.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/shared/services/card.service.ts","./src/app/components/board/deck/deck.component.ts","./src/app/components/board/deck/deck.component.html","./src/app/components/board/board.component.ts","./src/app/components/board/board.component.html","./src/app/app-routing.module.ts","./src/app/components/board/player/player.component.ts","./src/app/components/board/player/player.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { Card } from 'src/app/shared/models/card.model';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.css']\n})\nexport class CardComponent implements OnInit {\n\n  // Initialize the required data\n  @Input()\n  card: Card;\n\n  @Input()\n  cardsInMiddle: Card[];\n\n  @Input()\n  renderOnlyStack: boolean;\n  \n  constructor() { }\n\n  ngOnInit(): void {\n\n    console.log('card: ', this.card);\n  }\n\n}\n","<!-- <div class=\"computer-deck deck\">{{card.suit}} - {{card.rank}} - {{card.value}}</div> -->\n\n<div *ngIf=\"!renderOnlyStack\" class=\"custom-flip-card flip-card\">\n    <div class=\"flip-card-inner\">\n      <div class=\"flip-card-front center\">\n        <h1 *ngIf=\"card.suit === 'SC'\">{{card.rank}}</h1>\n        <h1 *ngIf=\"card.suit !== 'SC'\" [ngClass]=\"card.suit === 'H' || card.suit === 'D'? 'text-danger' : 'black'\">{{card.rank}}{{card.suit}}</h1>\n      </div>\n      <div class=\"flip-card-back center\">\n        <h1 *ngIf=\"card.suit === 'SC'\">{{card.rank}}</h1>\n        <h1 *ngIf=\"card.suit !== 'SC'\" [ngClass]=\"card.suit === 'H' || card.suit === 'D'? 'text-danger' : 'black'\">{{card.rank}}{{card.suit}}</h1>\n      </div>\n    </div>\n</div>\n\n<div *ngIf=\"renderOnlyStack\" class=\"custom-flip-card flip-card\">\n  <div class=\"flip-card-inner text-sm center\">\n    <div class=\"flip-card-front\">\n      <p>{{cardsInMiddle.length}} Cards</p>\n    </div>\n    <div class=\"flip-card-back\">\n      <p>{{cardsInMiddle.length}} Cards</p>\n    </div>\n  </div>\n</div>\n","import { Card } from \"./card.model\";\nimport { Deck } from \"./deck.model\";\nimport { Player } from \"./player.model\";\n\nexport class Board {\n\n    //Note:: 13th March 2022\n    //The role of the board class is just to create an instnace of Board and give it to the caller for usage\n    //Board only can start a game with players data in place\n\n    // private CARDS_DEALT = 3;\n    private MAX_PLAYERS = 7;\n    private MIN_PLAYERS = 2;\n    private TOTAL_CARDS = 57;\n    private SLICE_START: number = 0;\n    //private SLICE_MIDDLE: number = 11;\n    private SLICE_OFFSET: number = 11;\n    private SLICE_END: number = this.SLICE_OFFSET;\n\n    public cardsInMiddle : Card[];\n    public players : Player[];\n    public deck: Deck;\n    \n    constructor() {\n        this.cardsInMiddle = [];\n        this.players = [];\n        this.deck = new Deck();\n    }\n\n    //onStartGame(playerOneName: string, playerTwoName: string){\n    onStartGame(playerNames: string[]) {\n\n        // this.players.push(new Player(playerOneName));\n        // this.players.push(new Player(playerTwoName));\n        for(let i = 0; i< playerNames.length; i ++){\n            this.players.push(new Player(playerNames[i]));\n        }\n\n        // this.deck = new Deck();\n        this.deck.createDeck();\n        this.deck.shuffleDeck();\n\n        // Hard-coded players cards here\n        // this.players[0].playerCards = this.deck.cards.slice(this.SLICE_START, this.SLICE_MIDDLE);\n        // this.players[1].playerCards = this.deck.cards.slice(this.SLICE_MIDDLE, this.SLICE_MIDDLE + this.SLICE_OFFSET);\n        // this.cardsInMiddle = this.deck.cards.slice(this.SLICE_END);\n        \n        // Dynamically players cards distribution done here\n        // this.players.length = 0; //Testing Purpose\n        for(let i = 0; i < this.players.length; i++){\n            this.players[i].playerCards = this.deck.cards.slice(this.SLICE_START, this.SLICE_END);\n            this.SLICE_START = this.SLICE_END;\n\n            // handling the slice_end for the last iteration so that can make use of it for cards in middle\n            if(i < this.players.length - 1)\n                this.SLICE_END = this.SLICE_END + this.SLICE_OFFSET;\n        }\n\n        this.cardsInMiddle = this.players.length <= 0 ? this.deck.cards.slice(0) : this.deck.cards.slice(this.SLICE_END);        \n    }\n\n}\n//         0   1  2\n// start   0   11 33 \n// end     11  22 44 ","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Card } from \"./card.model\";\n\nexport class Deck {\n\n\n    //Note:: 13th March 2022\n    //The role of the deck class is to create an instnace of Deck and give it to the caller for usage\n\n    cards : Card[];\n    \n    constructor() {\n        this.cards = [];    \n    }  \n\n    createDeck() : void {\n        // Pre-seed mock data \n        // let suits = ['clubs', 'diamonds', 'hearts', 'spades'];\n        // let ranks = ['ace', '2', '3', '4', '5', '6', '7', '8', '9', '10', 'jack', 'queen', 'king'];\n\n        // Here we are creating all the special cards\n        let specialSuits = ['SC']; \n        let specialRanks = ['4T', '2T', 'ST', 'PT', 'RT'];\n        // let specialValues = [15, 16, 17, 18, 19];\n        let specialValues = [1, 2, 3, 4, 5];\n        let scoreForEachSuit = 100;\n\n        for (let i = 0; i < specialSuits.length; i++) {\n\n            for (let j = 0; j < specialRanks.length; j++) {\n                let calcValue = scoreForEachSuit + specialValues[j];\n                this.cards.push(new Card(specialSuits[i], specialRanks[j], calcValue));\n            }\n            scoreForEachSuit += 100;\n        }\n\n        // Here we are creating all the standard cards \n        //let suits = ['♦', '♣', '♠', '♥']; \n        let suits = ['D', 'S', 'C', 'H']; \n        let ranks = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A'];\n        let values = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\n        scoreForEachSuit = 2200;\n\n        for (let i = 0; i < suits.length; i++) {\n\n            for (let j = 0; j < ranks.length; j++) {\n                let calcValue = scoreForEachSuit + values[j]; \n                //this.cards.push(new Card(suits[i], ranks[j],  values[j]));\n                this.cards.push(new Card(suits[i], ranks[j], calcValue));\n            }\n            scoreForEachSuit += 100;\n        }\n    }\n\n    // This will suffle the deck of cards\n    shuffleDeck() : void {\n        let randomIndex1, randomIndex2, tempIndex;\n        for (let i = 0; i < 1000; i++) {\n            randomIndex1 = Math.floor((Math.random() * this.cards.length));\n            randomIndex2 = Math.floor((Math.random() * this.cards.length));\n            tempIndex = this.cards[randomIndex1];\n            this.cards[randomIndex1] = this.cards[randomIndex2];\n            this.cards[randomIndex2] = tempIndex;\n        }\n    }\n\n    takeCard() : Card {\n        return this.cards.pop() as Card;\n    }\n\n}\n","export class Card {\n\n\n    //Note:: 13th March 2022\n    //The role of the card class is just to create an instnace of Card and give it to the caller for usage\n    //No other opeartion will be done here\n    suit: string;\n    rank: string;\n    value: number;\n\n    constructor(suit: string, rank: string, value: number) {\n        this.suit = suit;\n        this.rank = rank;\n        this.value = value;\n    }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container-fluid \">\n    <div class=\"row\">\n    \n        <div class=\"col-lg-12 alert alert-danger\">\n            <p class=\"text-danger\"><b>The page you are looking for is not found..!</b></p>\n        </div> \n        <div class=\"col\">\n            <button class=\"btn btn-sm btn-outline-primary\" routerLink=\"/board\">Go To HomePage</button>\n        </div>\n        \n    </div>\n</div>\n","import { Card } from \"./card.model\";\n\nexport class Player {\n\n    //Note:: 13th March 2022\n    //The role of the player class is just to create an instnace of Player and give it to the caller for usage\n\n    public playerName: string;\n    public playerCards: Card[];\n    public playerSortedCards: Card[];\n\n    constructor(name: string) {\n        this.playerName = name;\n        this.playerCards = [] as Card[];\n        this.playerSortedCards = [] as Card[];\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'RT-CardGameApp';\n}\n","<!-- <app-board></app-board> -->\n<router-outlet></router-outlet>\n\n<div class=\"m-3\">\n  <footer>\n    Made by | <b>Rajesh Thomas</b> | <a href=\"https://github.com/iamrajthomas\">iamrajthomas</a> | March 2022\n  </footer>\n</div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { ToastrModule } from 'ngx-toastr';\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BoardComponent } from './components/board/board.component';\nimport { DeckComponent } from './components/board/deck/deck.component';\nimport { CardComponent } from './components/board/card/card.component';\nimport { PlayerComponent } from './components/board/player/player.component';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BoardComponent,\n    DeckComponent,\n    CardComponent,\n    PlayerComponent,\n    NotFoundComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n\n    BrowserAnimationsModule,\n    ToastrModule.forRoot(),\n\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Card } from '../models/card.model';\nimport { HttpClient } from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CardService {\n\n  public cardList: Array<Card>;\n  //readonly baseURL = 'http://localhost:7799/api/Card/PostPrioritySortedCard';\n  //readonly baseURL = `${config.apiUrl}/Card/PostPrioritySortedCard`;\n  // readonly baseURL = `http://20.80.188.60/api/Card/PostPrioritySortedCard`;\n  \n  //readonly baseURL = `/api/Card/PostPrioritySortedCard`;\n  //readonly baseURL = `/api:80/Card/PostPrioritySortedCard`;\n\n  // This is for the Azure Deployed API URL -- Working fine!!!\n  readonly baseURL = `/API/api/Card/PostPrioritySortedCard`;\n\n  constructor(private http: HttpClient) { }\n  \n  postPrioritySortedCard(cards : Card[]) {\n    return this.http.post(this.baseURL, cards);\n  }\n\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Card } from 'src/app/shared/models/card.model';\nimport { Player } from 'src/app/shared/models/player.model';\n\n@Component({\n  selector: 'app-deck',\n  templateUrl: './deck.component.html',\n  styleUrls: ['./deck.component.css']\n})\nexport class DeckComponent implements OnInit {\n\n  // Initialize the required data\n  @Input()\n  players: Player[]\n\n  @Input()\n  cardsInMiddle: Card[]\n \n  @Input()\n  currentPlayer: number\n\n  @Output()\n  cardPlayed: EventEmitter<{[key: string]: number}> = new EventEmitter()\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  cardClicked(info: {[key: string]: number}) {\n    this.cardPlayed.emit(info);\n  }\n\n\n}\n","<div class=\"container-fluid d-flex justify-content-center\">\n  <div class=\"alert alert-success mr-1\" >\n    <div class=\"text-primary\"><b>TABLE CARDS (CARDS IN THE MIDDLE)</b></div>\n    <div *ngFor=\"let card of cardsInMiddle; let cardIndex = index;\" class=\"custom-inline\"> \n      <div *ngIf=\"cardIndex === 0\" class=\"col-md-12 alert\">\n        <div class=\"bg-successs text-successs\"></div>\n          <app-card *ngIf=\"cardIndex === 0\" [card]=\"card\" [cardsInMiddle]=\"cardsInMiddle\" [renderOnlyStack]=\"true\"></app-card>\n      </div>\n    </div>\n</div>\n\n<!-- <div class=\"alert alert-warning\">\n  <div class=\"text-secondary\"><b>PLAYERS [LIST OF PLAYERS DETAILS HERE]</b></div>\n  <span *ngFor=\"let player of players; let playerIndex = index\">\n      <div>{{playerIndex + 1 }} => {{player.playerName}} </div>\n      <div>{{player.playerCards.length}} </div>\n  </span>\n</div> -->\n\n<div class=\"container-fluid \">\n  <div class=\"row\">\n\n    <div class=\"col alert alert-info mr-1\">\n      <p class=\"text-danger\"><b>PLAYERS DISTRIBUTED CARDS [RANDOMLY GENERATED]</b></p>\n      <div *ngFor=\"let player of players; let playerIndex = index\">  \n        <div class=\"col-md-12 alert {{ playerIndex % 2 === currentPlayer ? 'alert-success' : 'alert-danger' }}\">\n          <div class=\"bg-successs text-successs\">[Player_{{ playerIndex + 1 }}] <b class=\"text-danger\">{{player.playerName}}</b></div>\n            <div *ngFor=\"let card of player.playerCards; let cardIndex = index\"\n              (click)=\"cardClicked({player: playerIndex, card: cardIndex})\" class=\"custom-inline\">\n                <span class=\"card-1 m-1\">\n                    <app-card [card]=\"card\"></app-card>\n                </span>  \n            </div>\n            <!-- <div *ngIf=\"playerIndex == currentPlayer\" >\n              <span class=\"label label-success\">Your turn!</span>\n            </div> -->\n        </div>   \n        \n      </div>\n    </div>  \n\n    <div class=\"col alert alert-primary mr-1\">\n      <div class=\"text-primary\"><b>PLAYERS SORTED CARDS [SORTED USING BACK-END API]</b></div>\n      <div *ngFor=\"let player of players; let playerIndex = index\">  \n        <div class=\"col-md-12 alert {{ playerIndex % 2 === currentPlayer ? 'alert-success' : 'alert-danger' }}\">\n          <div class=\"bg-successs text-successs\">[Player_{{ playerIndex + 1 }}] <b class=\"text-success\">{{player.playerName}}</b></div>\n            <div *ngFor=\"let card of player.playerSortedCards; let cardIndex = index\"\n              (click)=\"cardClicked({player: playerIndex, card: cardIndex})\" class=\"custom-inline\">\n                <span class=\"card-1 m-1\">\n                    <app-card [card]=\"card\"></app-card>\n                </span>  \n            </div>\n        </div>   \n        \n      </div>\n    </div>\n  </div>\n\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { Board } from 'src/app/shared/models/board.model';\nimport { Card } from 'src/app/shared/models/card.model';\nimport { Deck } from 'src/app/shared/models/deck.model';\nimport { Player } from 'src/app/shared/models/player.model';\nimport { CardService } from 'src/app/shared/services/card.service';\n\n@Component({\n  selector: 'app-board',\n  templateUrl: './board.component.html',\n  styleUrls: ['./board.component.css']\n})\nexport class BoardComponent implements OnInit, OnDestroy {\n\n  // Initialize the required data\n  // CONSTANTS\n  private MAX_PLAYERS = 7;\n  private MIN_PLAYERS = 3;\n  private CARDS_DEALT = 3;\n\n  // FLAG ASSETS\n  isGameStarted: boolean = true;\n  isGameStartedByPlayer: boolean = false;\n  isGameOver: boolean = false;\n  isPlayerCreated: boolean = false;\n  disableGameStartButton: boolean = true;\n\n  // GAME ASSETS\n  cardsInMiddle: Card[] = []\n  players: Player[] = []\n  currentPlayer: number\n  playerCount: any = this.MIN_PLAYERS;\n  direction: number = 1;\n  deck: Deck;\n\n  // FORM ASSETS\n  playerForm: FormGroup;\n  defaultPlayerForm: FormGroup;\n\n\n  // STATIC DATA\n  playerCountList: any[] = [\n    // { id: 2, displayName: 'Two' },\n    { id: 3, displayName: 'Three' },\n    // { id: 4, displayName: 'Four' },\n    // { id: 5, displayName: 'Five' }\n  ];\n\n  playerNameList: any[] = [];\n  \n  constructor(private fb: FormBuilder,\n    private _toastr: ToastrService, \n    private _cardService: CardService) { }\n\n\n  // Life Cycle \n  ngOnInit(): void {\n\n    this.playerForm = this.fb.group({\n      playerCount: [this.MIN_PLAYERS, Validators.required],\n      playerName1: ['RAJ THOMAS', Validators.required],\n      playerName2: ['FRIEND', Validators.required],\n      playerName3: ['NEW FRIEND', Validators.required],\n      // playerName4: ['NEW FRIEND', Validators.required],\n      // playerName5: ['NEW FRIEND', Validators.required],\n    });\n\n    this.defaultPlayerForm = this.playerForm.value;\n    \n  }\n\n  ngOnDestroy() : void {\n    this.onClickResetPlayerNames(); \n  }\n\n\n  // Invoker of the game\n  init(): void {\n    let board = new Board();\n\n    //board.onStartGame('TestPlayer1', 'TestPlayer2'); //this is hard-coded. Below code is somewhat dynamic but not fullylet \n\n    let displayPlayerNameList  = this.playerNameList.map(x => x.displayName);\n    //board.onStartGame(this.playerNameList[0].displayName, this.playerNameList[1].displayName);\n    board.onStartGame(displayPlayerNameList);\n\n    this.cardsInMiddle = board.cardsInMiddle;\n    this.players = board.players;\n    this.currentPlayer = 0;\n    \n    // hard-coded to get sorted cards for indiv players\n    //let secondPlayer = 1;\n    // let result = this.postPrioritySortedCard(this.currentPlayer, this.players[this.currentPlayer].playerCards);\n    // let result2 = this.postPrioritySortedCard(secondPlayer, this.players[secondPlayer].playerCards);\n\n    // dynamically players cards will be evaluated and dumped in the respective players array\n    for(let i = 0; i < this.players.length; i++){\n      this.postPrioritySortedCard(i, this.players[i].playerCards);\n    }\n\n  \n  }\n\n  // When user plays a card\n  cardPlayed(): void {\n    // write logic when a card is being played by the player \n    // This is not required at this point of time\n    // Out of scope for this POC\n  }\n\n  // Button click Event captured\n  onButtonClickStartGame(){\n    this.disableGameStartButton = true;\n    this.isGameStartedByPlayer = true;\n\n    this.init();\n  }\n\n  onButtonClickSortCard(value : number) : void {\n    // alert('API will be invoked for sorting the cards!!');\n\n    let playerIndex = value - 1;\n    if(playerIndex >= 0){\n      this.postPrioritySortedCard(playerIndex, this.players[playerIndex].playerCards);\n    }\n    else{\n      this._toastr.success('Operation Failed', 'No data found for which the cards can be done.');\n      // alert('No Player Found For Whom The Cards Can be sorted!!!');\n      return;\n    }\n  }\n\n  onButtonClickRemoveSortedCard(value : number) : void {\n    let playerIndex = value - 1;\n    if(playerIndex >= 0 && this.players[playerIndex].playerSortedCards.length !== 0){\n      this.players[playerIndex].playerSortedCards = [];\n\n      this._toastr.info('Operation Successful', `Sorted cards are removed for Player ${value}.`);\n    }\n    else{\n      this._toastr.info('Completed', 'Sorted Cards do not exist.');\n      // alert('No Player Found For Whom The sorted cards Can be removed.');\n      return;\n    }\n  }\n\n  onClickReShuffleCards() {\n    this.init();\n  }\n\n  // Dropdown events captured\n  onDropDownChangePlayerCount(e: any){\n    // console.log(e.target.value);\n  }\n\n  // Forms Events Captured\n  onReactiveFormSubmitCreatePlayer(){\n    // Player Reactive Form Submit\n    console.log(this.playerForm.value);\n    this.createPlayer(this.playerForm.value as Player);\n  }\n\n  onNgFormSubmitCreatePlayer(playerForm: NgForm){\n    // Player Ng Form Submit\n    console.log(playerForm.form.value);\n    this.createPlayer(playerForm.form.value as Player);\n  }\n\n  // Clean up code\n  onClickResetPlayerNames() {\n    //reseting the flags\n    this.isPlayerCreated =  false;\n    this.disableGameStartButton = true;  \n\n    // reseting the form with default values\n    // this.playerForm.reset();\n    this.playerForm.setValue(this.defaultPlayerForm);\n\n    // reseting the cards, players and assets\n    this.playerCount = this.MIN_PLAYERS;\n    this.playerNameList = [];\n    this.cardsInMiddle = [];\n    this.players = [];\n    this.currentPlayer = 1;\n\n    this._toastr.info('Reset completed', 'Game reset completed.');\n  }\n\n  // Player Events Captured When Emitted\n  whenAdded() : void {\n    if (this.playerCount < this.MAX_PLAYERS)\n      this.playerCount++;\n  }\n\n  whenRemoved() : void {\n    if (this.playerCount > this.MIN_PLAYERS)\n      this.playerCount--;\n  }\n\n  whenStarted() : void {\n    console.log(\"Starting\");\n    this.players = [];\n    this.cardsInMiddle = [];\n    this.currentPlayer = 1;\n    this.isGameOver = false;\n    this.direction = 1;\n\n    this.deck = new Deck()\n    // For each player\n    for (let i = 0; i < this.playerCount; i++) {\n      this.players[i].playerCards = []\n      // Take out 7 cards\n      for (let cardNum = 0; cardNum < this.CARDS_DEALT; cardNum++) {\n        this.players[i].playerCards[cardNum] = this.deck.takeCard();\n      }\n    }\n  }\n\n // This is to call service and in-turn invoke API\n  postPrioritySortedCard(playerIndex: number, cards : Card[]) {\n    this._cardService.postPrioritySortedCard(cards).subscribe(\n      res => {\n        this._toastr.success('API response successful', 'Cards sort completed successfully using API.');\n        this.players[playerIndex].playerSortedCards = res as Card[];\n      },\n      err => { \n        \n        this._toastr.error('Server Error', 'HttpErrorResponse: API Response Failed.');\n        console.error(err); \n      }\n    );\n  }\n\n  // create player\n  createPlayer(value: any) {\n    // this will create player\n    this.isPlayerCreated = true;\n    this.disableGameStartButton = false;\n\n    // this.playerNameList.push({ id: this.playerNameList.length + 1, displayName: value.playerName1 });\n    // this.playerNameList.push({ id: this.playerNameList.length + 1, displayName: value.playerName2 });\n\n    for (const property in value) {\n      if(property.toLowerCase().includes('playername'))\n        this.playerNameList.push({ id: this.playerNameList.length + 1, displayName: value[property] });\n    }\n\n    this._toastr.info('Players Created Successfully', 'Please click on \"Start Card Game\" button from the top section.');\n    // alert('Please click on \"Start Card Game\" button from the top section!');\n\n  }\n\n\n\n}\n","\n    <nav class=\"navbar navbar-expand-lg navbar-light sticky-top\" style=\"background-color: #e3f2fd;\">\n        <a class=\"navbar-brand m-1 p-1\" href=\"#\">Card Game</a>\n        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" \n                aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n        </button>\n        <div class=\"col mt-1\" *ngIf=\"isPlayerCreated\" >\n            <button [disabled]=\"isPlayerCreated && disableGameStartButton\" class=\"btn btn-sm btn-outline-success mr-2\" type=\"button\" \n                data-toggle=\"tooltip\" data-placement=\"top\" title=\"Start Card Game\" (click)=\"onButtonClickStartGame()\">Start Card Game</button>\n            <button class=\"btn btn-sm btn-outline-danger mr-2\" type=\"button\" (click)=\"onClickResetPlayerNames()\"\n                data-toggle=\"tooltip\" data-placement=\"top\" title=\"Reset/ Restart Game\">Reset/ Restart Game</button>\n            <button [disabled]=\"(isPlayerCreated && !disableGameStartButton)\" class=\"btn btn-sm btn-outline-info mr-2\" type=\"button\" (click)=\"onClickReShuffleCards()\"\n                data-toggle=\"tooltip\" data-placement=\"top\" title=\"Re-Shuffle Cards\">Re-Shuffle Cards</button>\n        </div>\n    </nav>\n\n    <!-- <div class=\"container-fluid float-left\">\n        <div class=\"row\">\n            \n            <div class=\"col-lg-12 col-md-12\"><h3>Board for the Card Game!!!</h3>\n                <div *ngIf=\"isPlayerCreated && !disableGameStartButton\" class=\"text-danger\">Please click on <b>\"Start Card Game\"</b> button from the top section!</div>\n            </div>\n        </div>\n    </div> -->\n\n    <div *ngIf=\"!isPlayerCreated\" class=\"container-fluid row\">\n        <form [formGroup]=\"playerForm\" (ngSubmit)=\"onReactiveFormSubmitCreatePlayer()\" novalidate>\n            <!-- <form #playerForm=\"ngForm\" (ngSubmit)=\"onNgFormSubmitCreatePlayer(playerForm)\" novalidate> -->\n            <div class=\"form-group col-lg-12 col-md-12\">\n                <label for=\"playerCountLabel\">Select the number of players:</label>\n                <!-- [playerCount: {{playerCount}}] -->\n                <select id=\"playerCount\" name=\"playerCount\" class=\"form-control\"  \n                        [(ngModel)] = \"playerCount\" [value]='playerCount' formControlName=\"playerCount\"\n                        (change)=\"onDropDownChangePlayerCount($event)\"\n                >\n                    <option [ngValue]=\"null\" disabled>Select the number of players</option>\n                    <option *ngFor=\"let p of playerCountList\" [value]=\"p.id\">{{p.displayName}}</option>\n                </select>\n            </div>\n            <div class=\"form-group col-lg-12 col-md-12\">\n                <label for=\"playerNameLabel\">Enter 1st Player Name: </label>\n                <input type=\"text\" id=\"playerName\" aria-describedby=\"playerName1Desc\" required minlength=\"3\" maxlength=\"15\" placeholder=\"Enter 1st Player Name\" name=\"playerName1\" class=\"form-control\" formControlName=\"playerName1\">\n                <!-- <small id=\"playerNameHelp\" class=\"form-text text-muted\">Please enter your name.</small> -->\n            </div>\n            <div class=\"form-group col-lg-12 col-md-12\">\n                <label for=\"playerNameLabel\">Enter 2nd Player Name: </label>\n                <input type=\"text\" id=\"playerName\" aria-describedby=\"playerName2Desc\" required minlength=\"3\" maxlength=\"15\" placeholder=\"Enter 2nd Player Name\" name=\"playerName2\" class=\"form-control\" formControlName=\"playerName2\">\n                <!-- <small id=\"playerNameHelp\" class=\"form-text text-muted\">Please enter your name.</small> -->\n            </div>\n            <div class=\"form-group col-lg-12 col-md-12\">\n                <label for=\"playerNameLabel\">Enter 3rd Player Name: </label>\n                <input type=\"text\" id=\"playerName\" aria-describedby=\"playerName3Desc\" required minlength=\"3\" maxlength=\"15\" placeholder=\"Enter 3rd Player Name\" name=\"playerName3\" class=\"form-control\" formControlName=\"playerName3\">\n                <!-- <small id=\"playerNameHelp\" class=\"form-text text-muted\">Please enter your name.</small> -->\n            </div>\n              \n            <div class=\"form-group col-md-6\">\n                <button type=\"submit\" class=\"btn btn-sm btn-outline-primary\" [disabled]=\"!playerForm.valid\"\n                data-toggle=\"tooltip\" data-placement=\"top\" title=\"Create Players\"\n                >Create Players</button>\n            </div>\n          </form>\n    </div>\n\n    <div *ngIf=\"isPlayerCreated\" class=\"container-fluid row\">\n        <form>\n            <div class=\"form-group col-lg-12 col-md-12\">\n                <div>Player Names Table:</div>\n                <table class=\"table table-sm table-bordered\" style=\"border: 1px solid lack\">\n                    <thead>\n                      <tr>\n                        <th scope=\"col\">#</th>\n                        <th scope=\"col\">Player Name</th>\n                        <th scope=\"col\">Action#1</th>\n                        <th scope=\"col\"># Action#2</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr *ngFor=\"let p of playerNameList; let playerIndex = index;\">\n                        <td scope=\"row\">{{p.id}}</td>\n                        <td>{{p.displayName}}</td>\n                        <td>\n                           <button [disabled]=\"!isGameStartedByPlayer || !(isPlayerCreated && disableGameStartButton)\" class=\"btn btn-sm btn-outline-primary mr-3\" type=\"button\" (click)=\"onButtonClickSortCard(p.id)\"> Click To Sort For [Player_{{p.id}}] {{p.playerName}}</button>\n                        </td>\n                        <td>\n                            <button [disabled]=\"!isGameStartedByPlayer || !(isPlayerCreated && disableGameStartButton)\" class=\"btn btn-sm btn-outline-primary mr-3\" type=\"button\" (click)=\"onButtonClickRemoveSortedCard(p.id)\"> Click To Erase Sorted Cards for [Player_{{p.id}}] {{p.playerName}}</button>\n                         </td>\n                      </tr>\n                      <tr>\n                    </tbody>\n                  </table>\n                  <!-- <button class=\"btn btn-outline-danger mr-3\" type=\"button\" (click)=\"onClickResetPlayerNames()\">Reset Players</button>\n                  <button [disabled]=\"isPlayerCreated && disableGameStartButton\" class=\"btn btn-success mr-3\" type=\"button\" (click)=\"onButtonClickStartGame()\">Start Card Game</button>\n                  <button [disabled]=\"!isGameStartedByPlayer\" class=\"btn btn-outline-primary mr-3\" type=\"button\" (click)=\"onButtonClickSortCard(1)\"> Click To Sort For 1st Player</button>\n                  <button [disabled]=\"!isGameStartedByPlayer\" class=\"btn btn-outline-primary mr-3\" type=\"button\" (click)=\"onButtonClickSortCard(2)\"> Click To Sort For 2nd Player</button> -->\n                </div>\n                \n          </form>\n    </div>\n\n    <div *ngIf=\"isPlayerCreated\" class=\"container-fluid row\">\n        <app-deck\n            [cardsInMiddle]=\"cardsInMiddle\"\n            [players]=\"players\"\n            [currentPlayer]=\"currentPlayer\"\n        \n            (cardPlayed)=\"cardPlayed()\">\n        </app-deck>\n    </div>\n\n    <!-- [playerSortedCards]=\"player1SortedCards\" -->","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { BoardComponent } from './components/board/board.component';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/board', pathMatch: 'full' },\n  { path: 'board', component: BoardComponent },\n  { path: '**', component: NotFoundComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-player',\n  templateUrl: './player.component.html',\n  styleUrls: ['./player.component.css']\n})\nexport class PlayerComponent implements OnInit {\n\n\n  // Note: For now, didn't  make use of this component\n  // Can be used this component to create/render Players and their assets in the game\n\n  @Input()\n  playerCount: number;\n\n  @Output()\n  adding: EventEmitter<void> = new EventEmitter<void>();\n\n  @Output()\n  removing: EventEmitter<void> = new EventEmitter<void>();\n\n  @Output()\n  starting: EventEmitter<void> = new EventEmitter<void>();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  onAdd() {\n    this.adding.emit();\n  }\n\n  onRemove() {\n    this.removing.emit();\n  }\n\n  onStart() {\n    this.starting.emit();\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-xs-3\">\n      <div class=\"btn-group\">\n        <input type=\"button\" (click)=\"onRemove()\" value=\"Remove -\" class=\"btn btn-sm btn-outline-danger\" />\n        <input type=\"button\" (click)=\"onAdd()\" value=\"Add +\" class=\"btn btn-sm btn-outline-success\" />\n      </div>\n    </div>\n    <div class=\"col-xs-2 col-xs-offset-2\">\n      <span class=\"bg-success text-success\">Players: {{ playerCount }}</span>\n    </div>\n      <div class=\"col-xs-1 col-xs-offset-3\">\n      <input type=\"button\" (click)=\"onStart()\" value=\"Start\" class=\"btn btn-sm btn-outline-primary\" />\n    </div>\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}