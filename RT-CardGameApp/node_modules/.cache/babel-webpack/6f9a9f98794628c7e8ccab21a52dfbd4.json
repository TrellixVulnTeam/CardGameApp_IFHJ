{"ast":null,"code":"import _createForOfIteratorHelper from \"C:/TFS/source/repos/CardGame/ASPNetCore/RT-CardGameApp/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _inherits from \"C:/TFS/source/repos/CardGame/ASPNetCore/RT-CardGameApp/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/TFS/source/repos/CardGame/ASPNetCore/RT-CardGameApp/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"C:/TFS/source/repos/CardGame/ASPNetCore/RT-CardGameApp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/TFS/source/repos/CardGame/ASPNetCore/RT-CardGameApp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport * as i0 from '@angular/core';\nimport { Directive, NgModule, InjectionToken, Injectable, Inject, SecurityContext, Component, HostBinding, HostListener } from '@angular/core';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { Subject } from 'rxjs';\nimport * as i3 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i2 from '@angular/platform-browser';\nvar _c0 = [\"toast-component\", \"\"];\n\nfunction Toast_button_0_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function Toast_button_0_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      var ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.remove();\n    });\n    i0.ɵɵelementStart(1, \"span\", 6);\n    i0.ɵɵtext(2, \"\\xD7\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction Toast_div_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"[\", ctx_r7.duplicatesCount + 1, \"]\");\n  }\n}\n\nfunction Toast_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵtemplate(2, Toast_div_1_ng_container_2_Template, 2, 1, \"ng-container\", 4);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r1.options.titleClass);\n    i0.ɵɵattribute(\"aria-label\", ctx_r1.title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.title, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.duplicatesCount);\n  }\n}\n\nfunction Toast_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 7);\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r2.options.messageClass);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r2.message, i0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction Toast_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r3.options.messageClass);\n    i0.ɵɵattribute(\"aria-label\", ctx_r3.message);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.message, \" \");\n  }\n}\n\nfunction Toast_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"div\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"width\", ctx_r4.width + \"%\");\n  }\n}\n\nfunction ToastNoAnimation_button_0_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function ToastNoAnimation_button_0_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      var ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.remove();\n    });\n    i0.ɵɵelementStart(1, \"span\", 6);\n    i0.ɵɵtext(2, \"\\xD7\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ToastNoAnimation_div_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"[\", ctx_r7.duplicatesCount + 1, \"]\");\n  }\n}\n\nfunction ToastNoAnimation_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵtemplate(2, ToastNoAnimation_div_1_ng_container_2_Template, 2, 1, \"ng-container\", 4);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r1.options.titleClass);\n    i0.ɵɵattribute(\"aria-label\", ctx_r1.title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.title, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.duplicatesCount);\n  }\n}\n\nfunction ToastNoAnimation_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 7);\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r2.options.messageClass);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r2.message, i0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction ToastNoAnimation_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r3.options.messageClass);\n    i0.ɵɵattribute(\"aria-label\", ctx_r3.message);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.message, \" \");\n  }\n}\n\nfunction ToastNoAnimation_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"div\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"width\", ctx_r4.width + \"%\");\n  }\n}\n\nvar ToastContainerDirective = /*#__PURE__*/function () {\n  function ToastContainerDirective(el) {\n    _classCallCheck(this, ToastContainerDirective);\n\n    this.el = el;\n  }\n\n  _createClass(ToastContainerDirective, [{\n    key: \"getContainerElement\",\n    value: function getContainerElement() {\n      return this.el.nativeElement;\n    }\n  }]);\n\n  return ToastContainerDirective;\n}();\n\nToastContainerDirective.ɵfac = i0.ɵɵngDeclareFactory({\n  minVersion: \"12.0.0\",\n  version: \"13.2.5\",\n  ngImport: i0,\n  type: ToastContainerDirective,\n  deps: [{\n    token: i0.ElementRef\n  }],\n  target: i0.ɵɵFactoryTarget.Directive\n});\nToastContainerDirective.ɵdir = i0.ɵɵdefineDirective({\n  type: ToastContainerDirective,\n  selectors: [[\"\", \"toastContainer\", \"\"]],\n  exportAs: [\"toastContainer\"]\n});\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"13.2.5\",\n  ngImport: i0,\n  type: ToastContainerDirective,\n  decorators: [{\n    type: Directive,\n    args: [{\n      selector: '[toastContainer]',\n      exportAs: 'toastContainer'\n    }]\n  }],\n  ctorParameters: function ctorParameters() {\n    return [{\n      type: i0.ElementRef\n    }];\n  }\n});\n\nvar ToastContainerModule = /*#__PURE__*/_createClass(function ToastContainerModule() {\n  _classCallCheck(this, ToastContainerModule);\n});\n\nToastContainerModule.ɵfac = i0.ɵɵngDeclareFactory({\n  minVersion: \"12.0.0\",\n  version: \"13.2.5\",\n  ngImport: i0,\n  type: ToastContainerModule,\n  deps: [],\n  target: i0.ɵɵFactoryTarget.NgModule\n});\nToastContainerModule.ɵmod = i0.ɵɵngDeclareNgModule({\n  minVersion: \"12.0.0\",\n  version: \"13.2.5\",\n  ngImport: i0,\n  type: ToastContainerModule,\n  declarations: [ToastContainerDirective],\n  exports: [ToastContainerDirective]\n});\nToastContainerModule.ɵinj = i0.ɵɵngDeclareInjector({\n  minVersion: \"12.0.0\",\n  version: \"13.2.5\",\n  ngImport: i0,\n  type: ToastContainerModule\n});\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"13.2.5\",\n  ngImport: i0,\n  type: ToastContainerModule,\n  decorators: [{\n    type: NgModule,\n    args: [{\n      declarations: [ToastContainerDirective],\n      exports: [ToastContainerDirective]\n    }]\n  }]\n});\n/**\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\n */\n\nvar ComponentPortal = /*#__PURE__*/function () {\n  function ComponentPortal(component, injector) {\n    _classCallCheck(this, ComponentPortal);\n\n    this.component = component;\n    this.injector = injector;\n  }\n  /** Attach this portal to a host. */\n\n\n  _createClass(ComponentPortal, [{\n    key: \"attach\",\n    value: function attach(host, newestOnTop) {\n      this._attachedHost = host;\n      return host.attach(this, newestOnTop);\n    }\n    /** Detach this portal from its host */\n\n  }, {\n    key: \"detach\",\n    value: function detach() {\n      var host = this._attachedHost;\n\n      if (host) {\n        this._attachedHost = undefined;\n        return host.detach();\n      }\n    }\n    /** Whether this portal is attached to a host. */\n\n  }, {\n    key: \"isAttached\",\n    get: function get() {\n      return this._attachedHost != null;\n    }\n    /**\n     * Sets the PortalHost reference without performing `attach()`. This is used directly by\n     * the PortalHost when it is performing an `attach()` or `detach()`.\n     */\n\n  }, {\n    key: \"setAttachedHost\",\n    value: function setAttachedHost(host) {\n      this._attachedHost = host;\n    }\n  }]);\n\n  return ComponentPortal;\n}();\n/**\n * Partial implementation of PortalHost that only deals with attaching a\n * ComponentPortal\n */\n\n\nvar BasePortalHost = /*#__PURE__*/function () {\n  function BasePortalHost() {\n    _classCallCheck(this, BasePortalHost);\n  }\n\n  _createClass(BasePortalHost, [{\n    key: \"attach\",\n    value: function attach(portal, newestOnTop) {\n      this._attachedPortal = portal;\n      return this.attachComponentPortal(portal, newestOnTop);\n    }\n  }, {\n    key: \"detach\",\n    value: function detach() {\n      if (this._attachedPortal) {\n        this._attachedPortal.setAttachedHost();\n      }\n\n      this._attachedPortal = undefined;\n\n      if (this._disposeFn) {\n        this._disposeFn();\n\n        this._disposeFn = undefined;\n      }\n    }\n  }, {\n    key: \"setDisposeFn\",\n    value: function setDisposeFn(fn) {\n      this._disposeFn = fn;\n    }\n  }]);\n\n  return BasePortalHost;\n}();\n/**\n * Everything a toast needs to launch\n */\n\n\nvar ToastPackage = /*#__PURE__*/function () {\n  function ToastPackage(toastId, config, message, title, toastType, toastRef) {\n    var _this = this;\n\n    _classCallCheck(this, ToastPackage);\n\n    this.toastId = toastId;\n    this.config = config;\n    this.message = message;\n    this.title = title;\n    this.toastType = toastType;\n    this.toastRef = toastRef;\n    this._onTap = new Subject();\n    this._onAction = new Subject();\n    this.toastRef.afterClosed().subscribe(function () {\n      _this._onAction.complete();\n\n      _this._onTap.complete();\n    });\n  }\n  /** Fired on click */\n\n\n  _createClass(ToastPackage, [{\n    key: \"triggerTap\",\n    value: function triggerTap() {\n      this._onTap.next();\n\n      if (this.config.tapToDismiss) {\n        this._onTap.complete();\n      }\n    }\n  }, {\n    key: \"onTap\",\n    value: function onTap() {\n      return this._onTap.asObservable();\n    }\n    /** available for use in custom toast */\n\n  }, {\n    key: \"triggerAction\",\n    value: function triggerAction(action) {\n      this._onAction.next(action);\n    }\n  }, {\n    key: \"onAction\",\n    value: function onAction() {\n      return this._onAction.asObservable();\n    }\n  }]);\n\n  return ToastPackage;\n}();\n\nvar DefaultNoComponentGlobalConfig = {\n  maxOpened: 0,\n  autoDismiss: false,\n  newestOnTop: true,\n  preventDuplicates: false,\n  countDuplicates: false,\n  resetTimeoutOnDuplicate: false,\n  includeTitleDuplicates: false,\n  iconClasses: {\n    error: 'toast-error',\n    info: 'toast-info',\n    success: 'toast-success',\n    warning: 'toast-warning'\n  },\n  // Individual\n  closeButton: false,\n  disableTimeOut: false,\n  timeOut: 5000,\n  extendedTimeOut: 1000,\n  enableHtml: false,\n  progressBar: false,\n  toastClass: 'ngx-toastr',\n  positionClass: 'toast-top-right',\n  titleClass: 'toast-title',\n  messageClass: 'toast-message',\n  easing: 'ease-in',\n  easeTime: 300,\n  tapToDismiss: true,\n  onActivateTick: false,\n  progressAnimation: 'decreasing',\n  payload: null\n};\nvar TOAST_CONFIG = new InjectionToken('ToastConfig');\n/**\n * Reference to a toast opened via the Toastr service.\n */\n\nvar ToastRef = /*#__PURE__*/function () {\n  function ToastRef(_overlayRef) {\n    _classCallCheck(this, ToastRef);\n\n    this._overlayRef = _overlayRef;\n    /** Count of duplicates of this toast */\n\n    this.duplicatesCount = 0;\n    /** Subject for notifying the user that the toast has finished closing. */\n\n    this._afterClosed = new Subject();\n    /** triggered when toast is activated */\n\n    this._activate = new Subject();\n    /** notifies the toast that it should close before the timeout */\n\n    this._manualClose = new Subject();\n    /** notifies the toast that it should reset the timeouts */\n\n    this._resetTimeout = new Subject();\n    /** notifies the toast that it should count a duplicate toast */\n\n    this._countDuplicate = new Subject();\n  }\n\n  _createClass(ToastRef, [{\n    key: \"manualClose\",\n    value: function manualClose() {\n      this._manualClose.next();\n\n      this._manualClose.complete();\n    }\n  }, {\n    key: \"manualClosed\",\n    value: function manualClosed() {\n      return this._manualClose.asObservable();\n    }\n  }, {\n    key: \"timeoutReset\",\n    value: function timeoutReset() {\n      return this._resetTimeout.asObservable();\n    }\n  }, {\n    key: \"countDuplicate\",\n    value: function countDuplicate() {\n      return this._countDuplicate.asObservable();\n    }\n    /**\n     * Close the toast.\n     */\n\n  }, {\n    key: \"close\",\n    value: function close() {\n      this._overlayRef.detach();\n\n      this._afterClosed.next();\n\n      this._manualClose.next();\n\n      this._afterClosed.complete();\n\n      this._manualClose.complete();\n\n      this._activate.complete();\n\n      this._resetTimeout.complete();\n\n      this._countDuplicate.complete();\n    }\n    /** Gets an observable that is notified when the toast is finished closing. */\n\n  }, {\n    key: \"afterClosed\",\n    value: function afterClosed() {\n      return this._afterClosed.asObservable();\n    }\n  }, {\n    key: \"isInactive\",\n    value: function isInactive() {\n      return this._activate.isStopped;\n    }\n  }, {\n    key: \"activate\",\n    value: function activate() {\n      this._activate.next();\n\n      this._activate.complete();\n    }\n    /** Gets an observable that is notified when the toast has started opening. */\n\n  }, {\n    key: \"afterActivate\",\n    value: function afterActivate() {\n      return this._activate.asObservable();\n    }\n    /** Reset the toast timouts and count duplicates */\n\n  }, {\n    key: \"onDuplicate\",\n    value: function onDuplicate(resetTimeout, countDuplicate) {\n      if (resetTimeout) {\n        this._resetTimeout.next();\n      }\n\n      if (countDuplicate) {\n        this._countDuplicate.next(++this.duplicatesCount);\n      }\n    }\n  }]);\n\n  return ToastRef;\n}();\n/** Custom injector type specifically for instantiating components with a toast. */\n\n\nvar ToastInjector = /*#__PURE__*/function () {\n  function ToastInjector(_toastPackage, _parentInjector) {\n    _classCallCheck(this, ToastInjector);\n\n    this._toastPackage = _toastPackage;\n    this._parentInjector = _parentInjector;\n  }\n\n  _createClass(ToastInjector, [{\n    key: \"get\",\n    value: function get(token, notFoundValue, flags) {\n      if (token === ToastPackage) {\n        return this._toastPackage;\n      }\n\n      return this._parentInjector.get(token, notFoundValue, flags);\n    }\n  }]);\n\n  return ToastInjector;\n}();\n/**\n * A PortalHost for attaching portals to an arbitrary DOM element outside of the Angular\n * application context.\n *\n * This is the only part of the portal core that directly touches the DOM.\n */\n\n\nvar DomPortalHost = /*#__PURE__*/function (_BasePortalHost) {\n  _inherits(DomPortalHost, _BasePortalHost);\n\n  var _super = _createSuper(DomPortalHost);\n\n  function DomPortalHost(_hostDomElement, _componentFactoryResolver, _appRef) {\n    var _this2;\n\n    _classCallCheck(this, DomPortalHost);\n\n    _this2 = _super.call(this);\n    _this2._hostDomElement = _hostDomElement;\n    _this2._componentFactoryResolver = _componentFactoryResolver;\n    _this2._appRef = _appRef;\n    return _this2;\n  }\n  /**\n   * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\n   * @param portal Portal to be attached\n   */\n\n\n  _createClass(DomPortalHost, [{\n    key: \"attachComponentPortal\",\n    value: function attachComponentPortal(portal, newestOnTop) {\n      var _this3 = this;\n\n      var componentFactory = this._componentFactoryResolver.resolveComponentFactory(portal.component);\n\n      var componentRef; // If the portal specifies a ViewContainerRef, we will use that as the attachment point\n      // for the component (in terms of Angular's component tree, not rendering).\n      // When the ViewContainerRef is missing, we use the factory to create the component directly\n      // and then manually attach the ChangeDetector for that component to the application (which\n      // happens automatically when using a ViewContainer).\n\n      componentRef = componentFactory.create(portal.injector); // When creating a component outside of a ViewContainer, we need to manually register\n      // its ChangeDetector with the application. This API is unfortunately not yet published\n      // in Angular core. The change detector must also be deregistered when the component\n      // is destroyed to prevent memory leaks.\n\n      this._appRef.attachView(componentRef.hostView);\n\n      this.setDisposeFn(function () {\n        _this3._appRef.detachView(componentRef.hostView);\n\n        componentRef.destroy();\n      }); // At this point the component has been instantiated, so we move it to the location in the DOM\n      // where we want it to be rendered.\n\n      if (newestOnTop) {\n        this._hostDomElement.insertBefore(this._getComponentRootNode(componentRef), this._hostDomElement.firstChild);\n      } else {\n        this._hostDomElement.appendChild(this._getComponentRootNode(componentRef));\n      }\n\n      return componentRef;\n    }\n    /** Gets the root HTMLElement for an instantiated component. */\n\n  }, {\n    key: \"_getComponentRootNode\",\n    value: function _getComponentRootNode(componentRef) {\n      return componentRef.hostView.rootNodes[0];\n    }\n  }]);\n\n  return DomPortalHost;\n}(BasePortalHost);\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\n\n\nvar OverlayRef = /*#__PURE__*/function () {\n  function OverlayRef(_portalHost) {\n    _classCallCheck(this, OverlayRef);\n\n    this._portalHost = _portalHost;\n  }\n\n  _createClass(OverlayRef, [{\n    key: \"attach\",\n    value: function attach(portal) {\n      var newestOnTop = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      return this._portalHost.attach(portal, newestOnTop);\n    }\n    /**\n     * Detaches an overlay from a portal.\n     * @returns Resolves when the overlay has been detached.\n     */\n\n  }, {\n    key: \"detach\",\n    value: function detach() {\n      return this._portalHost.detach();\n    }\n  }]);\n\n  return OverlayRef;\n}();\n/** Container inside which all toasts will render. */\n\n\nvar OverlayContainer = /*#__PURE__*/function () {\n  function OverlayContainer(_document) {\n    _classCallCheck(this, OverlayContainer);\n\n    this._document = _document;\n  }\n\n  _createClass(OverlayContainer, [{\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this._containerElement && this._containerElement.parentNode) {\n        this._containerElement.parentNode.removeChild(this._containerElement);\n      }\n    }\n    /**\n     * This method returns the overlay container element. It will lazily\n     * create the element the first time  it is called to facilitate using\n     * the container in non-browser environments.\n     * @returns the container element\n     */\n\n  }, {\n    key: \"getContainerElement\",\n    value: function getContainerElement() {\n      if (!this._containerElement) {\n        this._createContainer();\n      }\n\n      return this._containerElement;\n    }\n    /**\n     * Create the overlay container element, which is simply a div\n     * with the 'cdk-overlay-container' class on the document body.\n     */\n\n  }, {\n    key: \"_createContainer\",\n    value: function _createContainer() {\n      var container = this._document.createElement('div');\n\n      container.classList.add('overlay-container');\n\n      this._document.body.appendChild(container);\n\n      this._containerElement = container;\n    }\n  }]);\n\n  return OverlayContainer;\n}();\n\nOverlayContainer.ɵfac = i0.ɵɵngDeclareFactory({\n  minVersion: \"12.0.0\",\n  version: \"13.2.5\",\n  ngImport: i0,\n  type: OverlayContainer,\n  deps: [{\n    token: DOCUMENT\n  }],\n  target: i0.ɵɵFactoryTarget.Injectable\n});\nOverlayContainer.ɵprov = i0.ɵɵngDeclareInjectable({\n  minVersion: \"12.0.0\",\n  version: \"13.2.5\",\n  ngImport: i0,\n  type: OverlayContainer,\n  providedIn: 'root'\n});\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"13.2.5\",\n  ngImport: i0,\n  type: OverlayContainer,\n  decorators: [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }],\n  ctorParameters: function ctorParameters() {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }\n});\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\n\n/**\n * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\n * used as a low-level building building block for other components. Dialogs, tooltips, menus,\n * selects, etc. can all be built using overlays. The service should primarily be used by authors\n * of re-usable components rather than developers building end-user applications.\n *\n * An overlay *is* a PortalHost, so any kind of Portal can be loaded into one.\n */\n\nvar Overlay = /*#__PURE__*/function () {\n  function Overlay(_overlayContainer, _componentFactoryResolver, _appRef, _document) {\n    _classCallCheck(this, Overlay);\n\n    this._overlayContainer = _overlayContainer;\n    this._componentFactoryResolver = _componentFactoryResolver;\n    this._appRef = _appRef;\n    this._document = _document; // Namespace panes by overlay container\n\n    this._paneElements = new Map();\n  }\n  /**\n   * Creates an overlay.\n   * @returns A reference to the created overlay.\n   */\n\n\n  _createClass(Overlay, [{\n    key: \"create\",\n    value: function create(positionClass, overlayContainer) {\n      // get existing pane if possible\n      return this._createOverlayRef(this.getPaneElement(positionClass, overlayContainer));\n    }\n  }, {\n    key: \"getPaneElement\",\n    value: function getPaneElement() {\n      var positionClass = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var overlayContainer = arguments.length > 1 ? arguments[1] : undefined;\n\n      if (!this._paneElements.get(overlayContainer)) {\n        this._paneElements.set(overlayContainer, {});\n      }\n\n      if (!this._paneElements.get(overlayContainer)[positionClass]) {\n        this._paneElements.get(overlayContainer)[positionClass] = this._createPaneElement(positionClass, overlayContainer);\n      }\n\n      return this._paneElements.get(overlayContainer)[positionClass];\n    }\n    /**\n     * Creates the DOM element for an overlay and appends it to the overlay container.\n     * @returns Newly-created pane element\n     */\n\n  }, {\n    key: \"_createPaneElement\",\n    value: function _createPaneElement(positionClass, overlayContainer) {\n      var pane = this._document.createElement('div');\n\n      pane.id = 'toast-container';\n      pane.classList.add(positionClass);\n      pane.classList.add('toast-container');\n\n      if (!overlayContainer) {\n        this._overlayContainer.getContainerElement().appendChild(pane);\n      } else {\n        overlayContainer.getContainerElement().appendChild(pane);\n      }\n\n      return pane;\n    }\n    /**\n     * Create a DomPortalHost into which the overlay content can be loaded.\n     * @param pane The DOM element to turn into a portal host.\n     * @returns A portal host for the given DOM element.\n     */\n\n  }, {\n    key: \"_createPortalHost\",\n    value: function _createPortalHost(pane) {\n      return new DomPortalHost(pane, this._componentFactoryResolver, this._appRef);\n    }\n    /**\n     * Creates an OverlayRef for an overlay in the given DOM element.\n     * @param pane DOM element for the overlay\n     */\n\n  }, {\n    key: \"_createOverlayRef\",\n    value: function _createOverlayRef(pane) {\n      return new OverlayRef(this._createPortalHost(pane));\n    }\n  }]);\n\n  return Overlay;\n}();\n\nOverlay.ɵfac = i0.ɵɵngDeclareFactory({\n  minVersion: \"12.0.0\",\n  version: \"13.2.5\",\n  ngImport: i0,\n  type: Overlay,\n  deps: [{\n    token: OverlayContainer\n  }, {\n    token: i0.ComponentFactoryResolver\n  }, {\n    token: i0.ApplicationRef\n  }, {\n    token: DOCUMENT\n  }],\n  target: i0.ɵɵFactoryTarget.Injectable\n});\nOverlay.ɵprov = i0.ɵɵngDeclareInjectable({\n  minVersion: \"12.0.0\",\n  version: \"13.2.5\",\n  ngImport: i0,\n  type: Overlay,\n  providedIn: 'root'\n});\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"13.2.5\",\n  ngImport: i0,\n  type: Overlay,\n  decorators: [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }],\n  ctorParameters: function ctorParameters() {\n    return [{\n      type: OverlayContainer\n    }, {\n      type: i0.ComponentFactoryResolver\n    }, {\n      type: i0.ApplicationRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }\n});\n\nvar ToastrService = /*#__PURE__*/function () {\n  function ToastrService(token, overlay, _injector, sanitizer, ngZone) {\n    _classCallCheck(this, ToastrService);\n\n    this.overlay = overlay;\n    this._injector = _injector;\n    this.sanitizer = sanitizer;\n    this.ngZone = ngZone;\n    this.currentlyActive = 0;\n    this.toasts = [];\n    this.index = 0;\n    this.toastrConfig = Object.assign(Object.assign({}, token.default), token.config);\n\n    if (token.config.iconClasses) {\n      this.toastrConfig.iconClasses = Object.assign(Object.assign({}, token.default.iconClasses), token.config.iconClasses);\n    }\n  }\n  /** show toast */\n\n\n  _createClass(ToastrService, [{\n    key: \"show\",\n    value: function show(message, title) {\n      var override = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var type = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';\n      return this._preBuildNotification(type, message, title, this.applyConfig(override));\n    }\n    /** show successful toast */\n\n  }, {\n    key: \"success\",\n    value: function success(message, title) {\n      var override = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var type = this.toastrConfig.iconClasses.success || '';\n      return this._preBuildNotification(type, message, title, this.applyConfig(override));\n    }\n    /** show error toast */\n\n  }, {\n    key: \"error\",\n    value: function error(message, title) {\n      var override = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var type = this.toastrConfig.iconClasses.error || '';\n      return this._preBuildNotification(type, message, title, this.applyConfig(override));\n    }\n    /** show info toast */\n\n  }, {\n    key: \"info\",\n    value: function info(message, title) {\n      var override = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var type = this.toastrConfig.iconClasses.info || '';\n      return this._preBuildNotification(type, message, title, this.applyConfig(override));\n    }\n    /** show warning toast */\n\n  }, {\n    key: \"warning\",\n    value: function warning(message, title) {\n      var override = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var type = this.toastrConfig.iconClasses.warning || '';\n      return this._preBuildNotification(type, message, title, this.applyConfig(override));\n    }\n    /**\n     * Remove all or a single toast by id\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear(toastId) {\n      // Call every toastRef manualClose function\n      var _iterator = _createForOfIteratorHelper(this.toasts),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var toast = _step.value;\n\n          if (toastId !== undefined) {\n            if (toast.toastId === toastId) {\n              toast.toastRef.manualClose();\n              return;\n            }\n          } else {\n            toast.toastRef.manualClose();\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n    /**\n     * Remove and destroy a single toast by id\n     */\n\n  }, {\n    key: \"remove\",\n    value: function remove(toastId) {\n      var found = this._findToast(toastId);\n\n      if (!found) {\n        return false;\n      }\n\n      found.activeToast.toastRef.close();\n      this.toasts.splice(found.index, 1);\n      this.currentlyActive = this.currentlyActive - 1;\n\n      if (!this.toastrConfig.maxOpened || !this.toasts.length) {\n        return false;\n      }\n\n      if (this.currentlyActive < this.toastrConfig.maxOpened && this.toasts[this.currentlyActive]) {\n        var p = this.toasts[this.currentlyActive].toastRef;\n\n        if (!p.isInactive()) {\n          this.currentlyActive = this.currentlyActive + 1;\n          p.activate();\n        }\n      }\n\n      return true;\n    }\n    /**\n     * Determines if toast message is already shown\n     */\n\n  }, {\n    key: \"findDuplicate\",\n    value: function findDuplicate() {\n      var title = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var message = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n      var resetOnDuplicate = arguments.length > 2 ? arguments[2] : undefined;\n      var countDuplicates = arguments.length > 3 ? arguments[3] : undefined;\n      var includeTitleDuplicates = this.toastrConfig.includeTitleDuplicates;\n\n      var _iterator2 = _createForOfIteratorHelper(this.toasts),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var toast = _step2.value;\n          var hasDuplicateTitle = includeTitleDuplicates && toast.title === title;\n\n          if ((!includeTitleDuplicates || hasDuplicateTitle) && toast.message === message) {\n            toast.toastRef.onDuplicate(resetOnDuplicate, countDuplicates);\n            return toast;\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      return null;\n    }\n    /** create a clone of global config and apply individual settings */\n\n  }, {\n    key: \"applyConfig\",\n    value: function applyConfig() {\n      var override = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return Object.assign(Object.assign({}, this.toastrConfig), override);\n    }\n    /**\n     * Find toast object by id\n     */\n\n  }, {\n    key: \"_findToast\",\n    value: function _findToast(toastId) {\n      for (var i = 0; i < this.toasts.length; i++) {\n        if (this.toasts[i].toastId === toastId) {\n          return {\n            index: i,\n            activeToast: this.toasts[i]\n          };\n        }\n      }\n\n      return null;\n    }\n    /**\n     * Determines the need to run inside angular's zone then builds the toast\n     */\n\n  }, {\n    key: \"_preBuildNotification\",\n    value: function _preBuildNotification(toastType, message, title, config) {\n      var _this4 = this;\n\n      if (config.onActivateTick) {\n        return this.ngZone.run(function () {\n          return _this4._buildNotification(toastType, message, title, config);\n        });\n      }\n\n      return this._buildNotification(toastType, message, title, config);\n    }\n    /**\n     * Creates and attaches toast data to component\n     * returns the active toast, or in case preventDuplicates is enabled the original/non-duplicate active toast.\n     */\n\n  }, {\n    key: \"_buildNotification\",\n    value: function _buildNotification(toastType, message, title, config) {\n      if (!config.toastComponent) {\n        throw new Error('toastComponent required');\n      } // max opened and auto dismiss = true\n      // if timeout = 0 resetting it would result in setting this.hideTime = Date.now(). Hence, we only want to reset timeout if there is\n      // a timeout at all\n\n\n      var duplicate = this.findDuplicate(title, message, this.toastrConfig.resetTimeoutOnDuplicate && config.timeOut > 0, this.toastrConfig.countDuplicates);\n\n      if ((this.toastrConfig.includeTitleDuplicates && title || message) && this.toastrConfig.preventDuplicates && duplicate !== null) {\n        return duplicate;\n      }\n\n      this.previousToastMessage = message;\n      var keepInactive = false;\n\n      if (this.toastrConfig.maxOpened && this.currentlyActive >= this.toastrConfig.maxOpened) {\n        keepInactive = true;\n\n        if (this.toastrConfig.autoDismiss) {\n          this.clear(this.toasts[0].toastId);\n        }\n      }\n\n      var overlayRef = this.overlay.create(config.positionClass, this.overlayContainer);\n      this.index = this.index + 1;\n      var sanitizedMessage = message;\n\n      if (message && config.enableHtml) {\n        sanitizedMessage = this.sanitizer.sanitize(SecurityContext.HTML, message);\n      }\n\n      var toastRef = new ToastRef(overlayRef);\n      var toastPackage = new ToastPackage(this.index, config, sanitizedMessage, title, toastType, toastRef);\n      var toastInjector = new ToastInjector(toastPackage, this._injector);\n      var component = new ComponentPortal(config.toastComponent, toastInjector);\n      var portal = overlayRef.attach(component, this.toastrConfig.newestOnTop);\n      toastRef.componentInstance = portal.instance;\n      var ins = {\n        toastId: this.index,\n        title: title || '',\n        message: message || '',\n        toastRef: toastRef,\n        onShown: toastRef.afterActivate(),\n        onHidden: toastRef.afterClosed(),\n        onTap: toastPackage.onTap(),\n        onAction: toastPackage.onAction(),\n        portal: portal\n      };\n\n      if (!keepInactive) {\n        this.currentlyActive = this.currentlyActive + 1;\n        setTimeout(function () {\n          ins.toastRef.activate();\n        });\n      }\n\n      this.toasts.push(ins);\n      return ins;\n    }\n  }]);\n\n  return ToastrService;\n}();\n\nToastrService.ɵfac = i0.ɵɵngDeclareFactory({\n  minVersion: \"12.0.0\",\n  version: \"13.2.5\",\n  ngImport: i0,\n  type: ToastrService,\n  deps: [{\n    token: TOAST_CONFIG\n  }, {\n    token: Overlay\n  }, {\n    token: i0.Injector\n  }, {\n    token: i2.DomSanitizer\n  }, {\n    token: i0.NgZone\n  }],\n  target: i0.ɵɵFactoryTarget.Injectable\n});\nToastrService.ɵprov = i0.ɵɵngDeclareInjectable({\n  minVersion: \"12.0.0\",\n  version: \"13.2.5\",\n  ngImport: i0,\n  type: ToastrService,\n  providedIn: 'root'\n});\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"13.2.5\",\n  ngImport: i0,\n  type: ToastrService,\n  decorators: [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }],\n  ctorParameters: function ctorParameters() {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [TOAST_CONFIG]\n      }]\n    }, {\n      type: Overlay\n    }, {\n      type: i0.Injector\n    }, {\n      type: i2.DomSanitizer\n    }, {\n      type: i0.NgZone\n    }];\n  }\n});\n\nvar Toast = /*#__PURE__*/function () {\n  function Toast(toastrService, toastPackage, ngZone) {\n    var _this5 = this;\n\n    _classCallCheck(this, Toast);\n\n    this.toastrService = toastrService;\n    this.toastPackage = toastPackage;\n    this.ngZone = ngZone;\n    /** width of progress bar */\n\n    this.width = -1;\n    /** a combination of toast type and options.toastClass */\n\n    this.toastClasses = '';\n    /** controls animation */\n\n    this.state = {\n      value: 'inactive',\n      params: {\n        easeTime: this.toastPackage.config.easeTime,\n        easing: 'ease-in'\n      }\n    };\n    this.message = toastPackage.message;\n    this.title = toastPackage.title;\n    this.options = toastPackage.config;\n    this.originalTimeout = toastPackage.config.timeOut;\n    this.toastClasses = \"\".concat(toastPackage.toastType, \" \").concat(toastPackage.config.toastClass);\n    this.sub = toastPackage.toastRef.afterActivate().subscribe(function () {\n      _this5.activateToast();\n    });\n    this.sub1 = toastPackage.toastRef.manualClosed().subscribe(function () {\n      _this5.remove();\n    });\n    this.sub2 = toastPackage.toastRef.timeoutReset().subscribe(function () {\n      _this5.resetTimeout();\n    });\n    this.sub3 = toastPackage.toastRef.countDuplicate().subscribe(function (count) {\n      _this5.duplicatesCount = count;\n    });\n  }\n  /** hides component when waiting to be displayed */\n\n\n  _createClass(Toast, [{\n    key: \"displayStyle\",\n    get: function get() {\n      if (this.state.value === 'inactive') {\n        return 'none';\n      }\n\n      return;\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.sub.unsubscribe();\n      this.sub1.unsubscribe();\n      this.sub2.unsubscribe();\n      this.sub3.unsubscribe();\n      clearInterval(this.intervalId);\n      clearTimeout(this.timeout);\n    }\n    /**\n     * activates toast and sets timeout\n     */\n\n  }, {\n    key: \"activateToast\",\n    value: function activateToast() {\n      var _this6 = this;\n\n      this.state = Object.assign(Object.assign({}, this.state), {\n        value: 'active'\n      });\n\n      if (!(this.options.disableTimeOut === true || this.options.disableTimeOut === 'timeOut') && this.options.timeOut) {\n        this.outsideTimeout(function () {\n          return _this6.remove();\n        }, this.options.timeOut);\n        this.hideTime = new Date().getTime() + this.options.timeOut;\n\n        if (this.options.progressBar) {\n          this.outsideInterval(function () {\n            return _this6.updateProgress();\n          }, 10);\n        }\n      }\n    }\n    /**\n     * updates progress bar width\n     */\n\n  }, {\n    key: \"updateProgress\",\n    value: function updateProgress() {\n      if (this.width === 0 || this.width === 100 || !this.options.timeOut) {\n        return;\n      }\n\n      var now = new Date().getTime();\n      var remaining = this.hideTime - now;\n      this.width = remaining / this.options.timeOut * 100;\n\n      if (this.options.progressAnimation === 'increasing') {\n        this.width = 100 - this.width;\n      }\n\n      if (this.width <= 0) {\n        this.width = 0;\n      }\n\n      if (this.width >= 100) {\n        this.width = 100;\n      }\n    }\n  }, {\n    key: \"resetTimeout\",\n    value: function resetTimeout() {\n      var _this7 = this;\n\n      clearTimeout(this.timeout);\n      clearInterval(this.intervalId);\n      this.state = Object.assign(Object.assign({}, this.state), {\n        value: 'active'\n      });\n      this.outsideTimeout(function () {\n        return _this7.remove();\n      }, this.originalTimeout);\n      this.options.timeOut = this.originalTimeout;\n      this.hideTime = new Date().getTime() + (this.options.timeOut || 0);\n      this.width = -1;\n\n      if (this.options.progressBar) {\n        this.outsideInterval(function () {\n          return _this7.updateProgress();\n        }, 10);\n      }\n    }\n    /**\n     * tells toastrService to remove this toast after animation time\n     */\n\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      var _this8 = this;\n\n      if (this.state.value === 'removed') {\n        return;\n      }\n\n      clearTimeout(this.timeout);\n      this.state = Object.assign(Object.assign({}, this.state), {\n        value: 'removed'\n      });\n      this.outsideTimeout(function () {\n        return _this8.toastrService.remove(_this8.toastPackage.toastId);\n      }, +this.toastPackage.config.easeTime);\n    }\n  }, {\n    key: \"tapToast\",\n    value: function tapToast() {\n      if (this.state.value === 'removed') {\n        return;\n      }\n\n      this.toastPackage.triggerTap();\n\n      if (this.options.tapToDismiss) {\n        this.remove();\n      }\n    }\n  }, {\n    key: \"stickAround\",\n    value: function stickAround() {\n      if (this.state.value === 'removed') {\n        return;\n      }\n\n      clearTimeout(this.timeout);\n      this.options.timeOut = 0;\n      this.hideTime = 0; // disable progressBar\n\n      clearInterval(this.intervalId);\n      this.width = 0;\n    }\n  }, {\n    key: \"delayedHideToast\",\n    value: function delayedHideToast() {\n      var _this9 = this;\n\n      if (this.options.disableTimeOut === true || this.options.disableTimeOut === 'extendedTimeOut' || this.options.extendedTimeOut === 0 || this.state.value === 'removed') {\n        return;\n      }\n\n      this.outsideTimeout(function () {\n        return _this9.remove();\n      }, this.options.extendedTimeOut);\n      this.options.timeOut = this.options.extendedTimeOut;\n      this.hideTime = new Date().getTime() + (this.options.timeOut || 0);\n      this.width = -1;\n\n      if (this.options.progressBar) {\n        this.outsideInterval(function () {\n          return _this9.updateProgress();\n        }, 10);\n      }\n    }\n  }, {\n    key: \"outsideTimeout\",\n    value: function outsideTimeout(func, timeout) {\n      var _this10 = this;\n\n      if (this.ngZone) {\n        this.ngZone.runOutsideAngular(function () {\n          return _this10.timeout = setTimeout(function () {\n            return _this10.runInsideAngular(func);\n          }, timeout);\n        });\n      } else {\n        this.timeout = setTimeout(function () {\n          return func();\n        }, timeout);\n      }\n    }\n  }, {\n    key: \"outsideInterval\",\n    value: function outsideInterval(func, timeout) {\n      var _this11 = this;\n\n      if (this.ngZone) {\n        this.ngZone.runOutsideAngular(function () {\n          return _this11.intervalId = setInterval(function () {\n            return _this11.runInsideAngular(func);\n          }, timeout);\n        });\n      } else {\n        this.intervalId = setInterval(function () {\n          return func();\n        }, timeout);\n      }\n    }\n  }, {\n    key: \"runInsideAngular\",\n    value: function runInsideAngular(func) {\n      if (this.ngZone) {\n        this.ngZone.run(function () {\n          return func();\n        });\n      } else {\n        func();\n      }\n    }\n  }]);\n\n  return Toast;\n}();\n\nToast.ɵfac = i0.ɵɵngDeclareFactory({\n  minVersion: \"12.0.0\",\n  version: \"13.2.5\",\n  ngImport: i0,\n  type: Toast,\n  deps: [{\n    token: ToastrService\n  }, {\n    token: ToastPackage\n  }, {\n    token: i0.NgZone\n  }],\n  target: i0.ɵɵFactoryTarget.Component\n});\nToast.ɵcmp = i0.ɵɵdefineComponent({\n  type: Toast,\n  selectors: [[\"\", \"toast-component\", \"\"]],\n  hostVars: 5,\n  hostBindings: function Toast_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function Toast_click_HostBindingHandler() {\n        return ctx.tapToast();\n      })(\"mouseenter\", function Toast_mouseenter_HostBindingHandler() {\n        return ctx.stickAround();\n      })(\"mouseleave\", function Toast_mouseleave_HostBindingHandler() {\n        return ctx.delayedHideToast();\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵsyntheticHostProperty(\"@flyInOut\", ctx.state);\n      i0.ɵɵclassMap(ctx.toastClasses);\n      i0.ɵɵstyleProp(\"display\", ctx.displayStyle);\n    }\n  },\n  attrs: _c0,\n  decls: 5,\n  vars: 5,\n  consts: [[\"type\", \"button\", \"class\", \"toast-close-button\", \"aria-label\", \"Close\", 3, \"click\", 4, \"ngIf\"], [3, \"class\", 4, \"ngIf\"], [\"role\", \"alertdialog\", \"aria-live\", \"polite\", 3, \"class\", \"innerHTML\", 4, \"ngIf\"], [\"role\", \"alertdialog\", \"aria-live\", \"polite\", 3, \"class\", 4, \"ngIf\"], [4, \"ngIf\"], [\"type\", \"button\", \"aria-label\", \"Close\", 1, \"toast-close-button\", 3, \"click\"], [\"aria-hidden\", \"true\"], [\"role\", \"alertdialog\", \"aria-live\", \"polite\", 3, \"innerHTML\"], [\"role\", \"alertdialog\", \"aria-live\", \"polite\"], [1, \"toast-progress\"]],\n  template: function Toast_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, Toast_button_0_Template, 3, 0, \"button\", 0);\n      i0.ɵɵtemplate(1, Toast_div_1_Template, 3, 5, \"div\", 1);\n      i0.ɵɵtemplate(2, Toast_div_2_Template, 1, 3, \"div\", 2);\n      i0.ɵɵtemplate(3, Toast_div_3_Template, 2, 4, \"div\", 3);\n      i0.ɵɵtemplate(4, Toast_div_4_Template, 2, 2, \"div\", 4);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.options.closeButton);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.title);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.message && ctx.options.enableHtml);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.message && !ctx.options.enableHtml);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.options.progressBar);\n    }\n  },\n  directives: [i3.NgIf],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('flyInOut', [state('inactive', style({\n      opacity: 0\n    })), state('active', style({\n      opacity: 1\n    })), state('removed', style({\n      opacity: 0\n    })), transition('inactive => active', animate('{{ easeTime }}ms {{ easing }}')), transition('active => removed', animate('{{ easeTime }}ms {{ easing }}'))])]\n  }\n});\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"13.2.5\",\n  ngImport: i0,\n  type: Toast,\n  decorators: [{\n    type: Component,\n    args: [{\n      selector: '[toast-component]',\n      template: \"\\n  <button *ngIf=\\\"options.closeButton\\\" (click)=\\\"remove()\\\" type=\\\"button\\\" class=\\\"toast-close-button\\\" aria-label=\\\"Close\\\">\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\n  </button>\\n  <div *ngIf=\\\"title\\\" [class]=\\\"options.titleClass\\\" [attr.aria-label]=\\\"title\\\">\\n    {{ title }} <ng-container *ngIf=\\\"duplicatesCount\\\">[{{ duplicatesCount + 1 }}]</ng-container>\\n  </div>\\n  <div *ngIf=\\\"message && options.enableHtml\\\" role=\\\"alertdialog\\\" aria-live=\\\"polite\\\"\\n    [class]=\\\"options.messageClass\\\" [innerHTML]=\\\"message\\\">\\n  </div>\\n  <div *ngIf=\\\"message && !options.enableHtml\\\" role=\\\"alertdialog\\\" aria-live=\\\"polite\\\"\\n    [class]=\\\"options.messageClass\\\" [attr.aria-label]=\\\"message\\\">\\n    {{ message }}\\n  </div>\\n  <div *ngIf=\\\"options.progressBar\\\">\\n    <div class=\\\"toast-progress\\\" [style.width]=\\\"width + '%'\\\"></div>\\n  </div>\\n  \",\n      animations: [trigger('flyInOut', [state('inactive', style({\n        opacity: 0\n      })), state('active', style({\n        opacity: 1\n      })), state('removed', style({\n        opacity: 0\n      })), transition('inactive => active', animate('{{ easeTime }}ms {{ easing }}')), transition('active => removed', animate('{{ easeTime }}ms {{ easing }}'))])],\n      preserveWhitespaces: false\n    }]\n  }],\n  ctorParameters: function ctorParameters() {\n    return [{\n      type: ToastrService\n    }, {\n      type: ToastPackage\n    }, {\n      type: i0.NgZone\n    }];\n  },\n  propDecorators: {\n    toastClasses: [{\n      type: HostBinding,\n      args: ['class']\n    }],\n    state: [{\n      type: HostBinding,\n      args: ['@flyInOut']\n    }],\n    displayStyle: [{\n      type: HostBinding,\n      args: ['style.display']\n    }],\n    tapToast: [{\n      type: HostListener,\n      args: ['click']\n    }],\n    stickAround: [{\n      type: HostListener,\n      args: ['mouseenter']\n    }],\n    delayedHideToast: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  }\n});\nvar DefaultGlobalConfig = Object.assign(Object.assign({}, DefaultNoComponentGlobalConfig), {\n  toastComponent: Toast\n});\n\nvar ToastrModule = /*#__PURE__*/function () {\n  function ToastrModule() {\n    _classCallCheck(this, ToastrModule);\n  }\n\n  _createClass(ToastrModule, null, [{\n    key: \"forRoot\",\n    value: function forRoot() {\n      var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return {\n        ngModule: ToastrModule,\n        providers: [{\n          provide: TOAST_CONFIG,\n          useValue: {\n            default: DefaultGlobalConfig,\n            config: config\n          }\n        }]\n      };\n    }\n  }]);\n\n  return ToastrModule;\n}();\n\nToastrModule.ɵfac = i0.ɵɵngDeclareFactory({\n  minVersion: \"12.0.0\",\n  version: \"13.2.5\",\n  ngImport: i0,\n  type: ToastrModule,\n  deps: [],\n  target: i0.ɵɵFactoryTarget.NgModule\n});\nToastrModule.ɵmod = i0.ɵɵngDeclareNgModule({\n  minVersion: \"12.0.0\",\n  version: \"13.2.5\",\n  ngImport: i0,\n  type: ToastrModule,\n  declarations: [Toast],\n  imports: [CommonModule],\n  exports: [Toast]\n});\nToastrModule.ɵinj = i0.ɵɵngDeclareInjector({\n  minVersion: \"12.0.0\",\n  version: \"13.2.5\",\n  ngImport: i0,\n  type: ToastrModule,\n  imports: [[CommonModule]]\n});\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"13.2.5\",\n  ngImport: i0,\n  type: ToastrModule,\n  decorators: [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [Toast],\n      exports: [Toast],\n      entryComponents: [Toast]\n    }]\n  }]\n});\n\nvar ToastrComponentlessModule = /*#__PURE__*/function () {\n  function ToastrComponentlessModule() {\n    _classCallCheck(this, ToastrComponentlessModule);\n  }\n\n  _createClass(ToastrComponentlessModule, null, [{\n    key: \"forRoot\",\n    value: function forRoot() {\n      var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return {\n        ngModule: ToastrModule,\n        providers: [{\n          provide: TOAST_CONFIG,\n          useValue: {\n            default: DefaultNoComponentGlobalConfig,\n            config: config\n          }\n        }]\n      };\n    }\n  }]);\n\n  return ToastrComponentlessModule;\n}();\n\nToastrComponentlessModule.ɵfac = i0.ɵɵngDeclareFactory({\n  minVersion: \"12.0.0\",\n  version: \"13.2.5\",\n  ngImport: i0,\n  type: ToastrComponentlessModule,\n  deps: [],\n  target: i0.ɵɵFactoryTarget.NgModule\n});\nToastrComponentlessModule.ɵmod = i0.ɵɵngDeclareNgModule({\n  minVersion: \"12.0.0\",\n  version: \"13.2.5\",\n  ngImport: i0,\n  type: ToastrComponentlessModule,\n  imports: [CommonModule]\n});\nToastrComponentlessModule.ɵinj = i0.ɵɵngDeclareInjector({\n  minVersion: \"12.0.0\",\n  version: \"13.2.5\",\n  ngImport: i0,\n  type: ToastrComponentlessModule,\n  imports: [[CommonModule]]\n});\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"13.2.5\",\n  ngImport: i0,\n  type: ToastrComponentlessModule,\n  decorators: [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule]\n    }]\n  }]\n});\n\nvar ToastNoAnimation = /*#__PURE__*/function () {\n  function ToastNoAnimation(toastrService, toastPackage, appRef) {\n    var _this12 = this;\n\n    _classCallCheck(this, ToastNoAnimation);\n\n    this.toastrService = toastrService;\n    this.toastPackage = toastPackage;\n    this.appRef = appRef;\n    /** width of progress bar */\n\n    this.width = -1;\n    /** a combination of toast type and options.toastClass */\n\n    this.toastClasses = '';\n    /** controls animation */\n\n    this.state = 'inactive';\n    this.message = toastPackage.message;\n    this.title = toastPackage.title;\n    this.options = toastPackage.config;\n    this.originalTimeout = toastPackage.config.timeOut;\n    this.toastClasses = \"\".concat(toastPackage.toastType, \" \").concat(toastPackage.config.toastClass);\n    this.sub = toastPackage.toastRef.afterActivate().subscribe(function () {\n      _this12.activateToast();\n    });\n    this.sub1 = toastPackage.toastRef.manualClosed().subscribe(function () {\n      _this12.remove();\n    });\n    this.sub2 = toastPackage.toastRef.timeoutReset().subscribe(function () {\n      _this12.resetTimeout();\n    });\n    this.sub3 = toastPackage.toastRef.countDuplicate().subscribe(function (count) {\n      _this12.duplicatesCount = count;\n    });\n  }\n  /** hides component when waiting to be displayed */\n\n\n  _createClass(ToastNoAnimation, [{\n    key: \"displayStyle\",\n    get: function get() {\n      if (this.state === 'inactive') {\n        return 'none';\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.sub.unsubscribe();\n      this.sub1.unsubscribe();\n      this.sub2.unsubscribe();\n      this.sub3.unsubscribe();\n      clearInterval(this.intervalId);\n      clearTimeout(this.timeout);\n    }\n    /**\n     * activates toast and sets timeout\n     */\n\n  }, {\n    key: \"activateToast\",\n    value: function activateToast() {\n      var _this13 = this;\n\n      this.state = 'active';\n\n      if (!(this.options.disableTimeOut === true || this.options.disableTimeOut === 'timeOut') && this.options.timeOut) {\n        this.timeout = setTimeout(function () {\n          _this13.remove();\n        }, this.options.timeOut);\n        this.hideTime = new Date().getTime() + this.options.timeOut;\n\n        if (this.options.progressBar) {\n          this.intervalId = setInterval(function () {\n            return _this13.updateProgress();\n          }, 10);\n        }\n      }\n\n      if (this.options.onActivateTick) {\n        this.appRef.tick();\n      }\n    }\n    /**\n     * updates progress bar width\n     */\n\n  }, {\n    key: \"updateProgress\",\n    value: function updateProgress() {\n      if (this.width === 0 || this.width === 100 || !this.options.timeOut) {\n        return;\n      }\n\n      var now = new Date().getTime();\n      var remaining = this.hideTime - now;\n      this.width = remaining / this.options.timeOut * 100;\n\n      if (this.options.progressAnimation === 'increasing') {\n        this.width = 100 - this.width;\n      }\n\n      if (this.width <= 0) {\n        this.width = 0;\n      }\n\n      if (this.width >= 100) {\n        this.width = 100;\n      }\n    }\n  }, {\n    key: \"resetTimeout\",\n    value: function resetTimeout() {\n      var _this14 = this;\n\n      clearTimeout(this.timeout);\n      clearInterval(this.intervalId);\n      this.state = 'active';\n      this.options.timeOut = this.originalTimeout;\n      this.timeout = setTimeout(function () {\n        return _this14.remove();\n      }, this.originalTimeout);\n      this.hideTime = new Date().getTime() + (this.originalTimeout || 0);\n      this.width = -1;\n\n      if (this.options.progressBar) {\n        this.intervalId = setInterval(function () {\n          return _this14.updateProgress();\n        }, 10);\n      }\n    }\n    /**\n     * tells toastrService to remove this toast after animation time\n     */\n\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      var _this15 = this;\n\n      if (this.state === 'removed') {\n        return;\n      }\n\n      clearTimeout(this.timeout);\n      this.state = 'removed';\n      this.timeout = setTimeout(function () {\n        return _this15.toastrService.remove(_this15.toastPackage.toastId);\n      });\n    }\n  }, {\n    key: \"tapToast\",\n    value: function tapToast() {\n      if (this.state === 'removed') {\n        return;\n      }\n\n      this.toastPackage.triggerTap();\n\n      if (this.options.tapToDismiss) {\n        this.remove();\n      }\n    }\n  }, {\n    key: \"stickAround\",\n    value: function stickAround() {\n      if (this.state === 'removed') {\n        return;\n      }\n\n      clearTimeout(this.timeout);\n      this.options.timeOut = 0;\n      this.hideTime = 0; // disable progressBar\n\n      clearInterval(this.intervalId);\n      this.width = 0;\n    }\n  }, {\n    key: \"delayedHideToast\",\n    value: function delayedHideToast() {\n      var _this16 = this;\n\n      if (this.options.disableTimeOut === true || this.options.disableTimeOut === 'extendedTimeOut' || this.options.extendedTimeOut === 0 || this.state === 'removed') {\n        return;\n      }\n\n      this.timeout = setTimeout(function () {\n        return _this16.remove();\n      }, this.options.extendedTimeOut);\n      this.options.timeOut = this.options.extendedTimeOut;\n      this.hideTime = new Date().getTime() + (this.options.timeOut || 0);\n      this.width = -1;\n\n      if (this.options.progressBar) {\n        this.intervalId = setInterval(function () {\n          return _this16.updateProgress();\n        }, 10);\n      }\n    }\n  }]);\n\n  return ToastNoAnimation;\n}();\n\nToastNoAnimation.ɵfac = i0.ɵɵngDeclareFactory({\n  minVersion: \"12.0.0\",\n  version: \"13.2.5\",\n  ngImport: i0,\n  type: ToastNoAnimation,\n  deps: [{\n    token: ToastrService\n  }, {\n    token: ToastPackage\n  }, {\n    token: i0.ApplicationRef\n  }],\n  target: i0.ɵɵFactoryTarget.Component\n});\nToastNoAnimation.ɵcmp = i0.ɵɵdefineComponent({\n  type: ToastNoAnimation,\n  selectors: [[\"\", \"toast-component\", \"\"]],\n  hostVars: 4,\n  hostBindings: function ToastNoAnimation_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function ToastNoAnimation_click_HostBindingHandler() {\n        return ctx.tapToast();\n      })(\"mouseenter\", function ToastNoAnimation_mouseenter_HostBindingHandler() {\n        return ctx.stickAround();\n      })(\"mouseleave\", function ToastNoAnimation_mouseleave_HostBindingHandler() {\n        return ctx.delayedHideToast();\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassMap(ctx.toastClasses);\n      i0.ɵɵstyleProp(\"display\", ctx.displayStyle);\n    }\n  },\n  attrs: _c0,\n  decls: 5,\n  vars: 5,\n  consts: [[\"type\", \"button\", \"class\", \"toast-close-button\", \"aria-label\", \"Close\", 3, \"click\", 4, \"ngIf\"], [3, \"class\", 4, \"ngIf\"], [\"role\", \"alert\", \"aria-live\", \"polite\", 3, \"class\", \"innerHTML\", 4, \"ngIf\"], [\"role\", \"alert\", \"aria-live\", \"polite\", 3, \"class\", 4, \"ngIf\"], [4, \"ngIf\"], [\"type\", \"button\", \"aria-label\", \"Close\", 1, \"toast-close-button\", 3, \"click\"], [\"aria-hidden\", \"true\"], [\"role\", \"alert\", \"aria-live\", \"polite\", 3, \"innerHTML\"], [\"role\", \"alert\", \"aria-live\", \"polite\"], [1, \"toast-progress\"]],\n  template: function ToastNoAnimation_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, ToastNoAnimation_button_0_Template, 3, 0, \"button\", 0);\n      i0.ɵɵtemplate(1, ToastNoAnimation_div_1_Template, 3, 5, \"div\", 1);\n      i0.ɵɵtemplate(2, ToastNoAnimation_div_2_Template, 1, 3, \"div\", 2);\n      i0.ɵɵtemplate(3, ToastNoAnimation_div_3_Template, 2, 4, \"div\", 3);\n      i0.ɵɵtemplate(4, ToastNoAnimation_div_4_Template, 2, 2, \"div\", 4);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.options.closeButton);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.title);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.message && ctx.options.enableHtml);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.message && !ctx.options.enableHtml);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.options.progressBar);\n    }\n  },\n  directives: [i3.NgIf],\n  encapsulation: 2\n});\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"13.2.5\",\n  ngImport: i0,\n  type: ToastNoAnimation,\n  decorators: [{\n    type: Component,\n    args: [{\n      selector: '[toast-component]',\n      template: \"\\n  <button *ngIf=\\\"options.closeButton\\\" (click)=\\\"remove()\\\" type=\\\"button\\\" class=\\\"toast-close-button\\\" aria-label=\\\"Close\\\">\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\n  </button>\\n  <div *ngIf=\\\"title\\\" [class]=\\\"options.titleClass\\\" [attr.aria-label]=\\\"title\\\">\\n    {{ title }} <ng-container *ngIf=\\\"duplicatesCount\\\">[{{ duplicatesCount + 1 }}]</ng-container>\\n  </div>\\n  <div *ngIf=\\\"message && options.enableHtml\\\" role=\\\"alert\\\" aria-live=\\\"polite\\\"\\n    [class]=\\\"options.messageClass\\\" [innerHTML]=\\\"message\\\">\\n  </div>\\n  <div *ngIf=\\\"message && !options.enableHtml\\\" role=\\\"alert\\\" aria-live=\\\"polite\\\"\\n    [class]=\\\"options.messageClass\\\" [attr.aria-label]=\\\"message\\\">\\n    {{ message }}\\n  </div>\\n  <div *ngIf=\\\"options.progressBar\\\">\\n    <div class=\\\"toast-progress\\\" [style.width]=\\\"width + '%'\\\"></div>\\n  </div>\\n  \"\n    }]\n  }],\n  ctorParameters: function ctorParameters() {\n    return [{\n      type: ToastrService\n    }, {\n      type: ToastPackage\n    }, {\n      type: i0.ApplicationRef\n    }];\n  },\n  propDecorators: {\n    toastClasses: [{\n      type: HostBinding,\n      args: ['class']\n    }],\n    displayStyle: [{\n      type: HostBinding,\n      args: ['style.display']\n    }],\n    tapToast: [{\n      type: HostListener,\n      args: ['click']\n    }],\n    stickAround: [{\n      type: HostListener,\n      args: ['mouseenter']\n    }],\n    delayedHideToast: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  }\n});\nvar DefaultNoAnimationsGlobalConfig = Object.assign(Object.assign({}, DefaultNoComponentGlobalConfig), {\n  toastComponent: ToastNoAnimation\n});\n\nvar ToastNoAnimationModule = /*#__PURE__*/function () {\n  function ToastNoAnimationModule() {\n    _classCallCheck(this, ToastNoAnimationModule);\n  }\n\n  _createClass(ToastNoAnimationModule, null, [{\n    key: \"forRoot\",\n    value: function forRoot() {\n      var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return {\n        ngModule: ToastNoAnimationModule,\n        providers: [{\n          provide: TOAST_CONFIG,\n          useValue: {\n            default: DefaultNoAnimationsGlobalConfig,\n            config: config\n          }\n        }]\n      };\n    }\n  }]);\n\n  return ToastNoAnimationModule;\n}();\n\nToastNoAnimationModule.ɵfac = i0.ɵɵngDeclareFactory({\n  minVersion: \"12.0.0\",\n  version: \"13.2.5\",\n  ngImport: i0,\n  type: ToastNoAnimationModule,\n  deps: [],\n  target: i0.ɵɵFactoryTarget.NgModule\n});\nToastNoAnimationModule.ɵmod = i0.ɵɵngDeclareNgModule({\n  minVersion: \"12.0.0\",\n  version: \"13.2.5\",\n  ngImport: i0,\n  type: ToastNoAnimationModule,\n  declarations: [ToastNoAnimation],\n  imports: [CommonModule],\n  exports: [ToastNoAnimation]\n});\nToastNoAnimationModule.ɵinj = i0.ɵɵngDeclareInjector({\n  minVersion: \"12.0.0\",\n  version: \"13.2.5\",\n  ngImport: i0,\n  type: ToastNoAnimationModule,\n  imports: [[CommonModule]]\n});\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"13.2.5\",\n  ngImport: i0,\n  type: ToastNoAnimationModule,\n  decorators: [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [ToastNoAnimation],\n      exports: [ToastNoAnimation],\n      entryComponents: [ToastNoAnimation]\n    }]\n  }]\n});\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BasePortalHost, ComponentPortal, DefaultGlobalConfig, DefaultNoAnimationsGlobalConfig, DefaultNoComponentGlobalConfig, Overlay, OverlayContainer, OverlayRef, TOAST_CONFIG, Toast, ToastContainerDirective, ToastContainerModule, ToastInjector, ToastNoAnimation, ToastNoAnimationModule, ToastPackage, ToastRef, ToastrComponentlessModule, ToastrModule, ToastrService }; //# sourceMappingURL=ngx-toastr.mjs.map","map":{"version":3,"sources":["C:/TFS/source/repos/CardGame/ASPNetCore/RT-CardGameApp/node_modules/ngx-toastr/fesm2015/ngx-toastr.mjs"],"names":["i0","Directive","NgModule","InjectionToken","Injectable","Inject","SecurityContext","Component","HostBinding","HostListener","trigger","state","style","transition","animate","Subject","i3","DOCUMENT","CommonModule","i2","ToastContainerDirective","el","nativeElement","ɵfac","ɵɵngDeclareFactory","minVersion","version","ngImport","type","deps","token","ElementRef","target","ɵɵFactoryTarget","ɵdir","ɵɵngDeclareClassMetadata","decorators","args","selector","exportAs","ctorParameters","ToastContainerModule","ɵmod","ɵɵngDeclareNgModule","declarations","exports","ɵinj","ɵɵngDeclareInjector","ComponentPortal","component","injector","host","newestOnTop","_attachedHost","attach","undefined","detach","BasePortalHost","portal","_attachedPortal","attachComponentPortal","setAttachedHost","_disposeFn","fn","ToastPackage","toastId","config","message","title","toastType","toastRef","_onTap","_onAction","afterClosed","subscribe","complete","next","tapToDismiss","asObservable","action","DefaultNoComponentGlobalConfig","maxOpened","autoDismiss","preventDuplicates","countDuplicates","resetTimeoutOnDuplicate","includeTitleDuplicates","iconClasses","error","info","success","warning","closeButton","disableTimeOut","timeOut","extendedTimeOut","enableHtml","progressBar","toastClass","positionClass","titleClass","messageClass","easing","easeTime","onActivateTick","progressAnimation","payload","TOAST_CONFIG","ToastRef","_overlayRef","duplicatesCount","_afterClosed","_activate","_manualClose","_resetTimeout","_countDuplicate","isStopped","resetTimeout","countDuplicate","ToastInjector","_toastPackage","_parentInjector","notFoundValue","flags","get","DomPortalHost","_hostDomElement","_componentFactoryResolver","_appRef","componentFactory","resolveComponentFactory","componentRef","create","attachView","hostView","setDisposeFn","detachView","destroy","insertBefore","_getComponentRootNode","firstChild","appendChild","rootNodes","OverlayRef","_portalHost","OverlayContainer","_document","_containerElement","parentNode","removeChild","_createContainer","container","createElement","classList","add","body","ɵprov","ɵɵngDeclareInjectable","providedIn","Overlay","_overlayContainer","_paneElements","Map","overlayContainer","_createOverlayRef","getPaneElement","set","_createPaneElement","pane","id","getContainerElement","_createPortalHost","ComponentFactoryResolver","ApplicationRef","ToastrService","overlay","_injector","sanitizer","ngZone","currentlyActive","toasts","index","toastrConfig","Object","assign","default","override","_preBuildNotification","applyConfig","toast","manualClose","found","_findToast","activeToast","close","splice","length","p","isInactive","activate","resetOnDuplicate","hasDuplicateTitle","onDuplicate","i","run","_buildNotification","toastComponent","Error","duplicate","findDuplicate","previousToastMessage","keepInactive","clear","overlayRef","sanitizedMessage","sanitize","HTML","toastPackage","toastInjector","componentInstance","instance","ins","onShown","afterActivate","onHidden","onTap","onAction","setTimeout","push","Injector","DomSanitizer","NgZone","Toast","toastrService","width","toastClasses","value","params","options","originalTimeout","sub","activateToast","sub1","manualClosed","remove","sub2","timeoutReset","sub3","count","unsubscribe","clearInterval","intervalId","clearTimeout","timeout","outsideTimeout","hideTime","Date","getTime","outsideInterval","updateProgress","now","remaining","triggerTap","func","runOutsideAngular","runInsideAngular","setInterval","ɵcmp","NgIf","opacity","template","animations","preserveWhitespaces","propDecorators","displayStyle","tapToast","stickAround","delayedHideToast","DefaultGlobalConfig","ToastrModule","ngModule","providers","provide","useValue","imports","entryComponents","ToastrComponentlessModule","ToastNoAnimation","appRef","tick","DefaultNoAnimationsGlobalConfig","ToastNoAnimationModule"],"mappings":";;;;;AAAA,OAAO,KAAKA,EAAZ,MAAoB,eAApB;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,cAA9B,EAA8CC,UAA9C,EAA0DC,MAA1D,EAAkEC,eAAlE,EAAmFC,SAAnF,EAA8FC,WAA9F,EAA2GC,YAA3G,QAA+H,eAA/H;AACA,SAASC,OAAT,EAAkBC,KAAlB,EAAyBC,KAAzB,EAAgCC,UAAhC,EAA4CC,OAA5C,QAA2D,qBAA3D;AACA,SAASC,OAAT,QAAwB,MAAxB;AACA,OAAO,KAAKC,EAAZ,MAAoB,iBAApB;AACA,SAASC,QAAT,EAAmBC,YAAnB,QAAuC,iBAAvC;AACA,OAAO,KAAKC,EAAZ,MAAoB,2BAApB;;;;;cAWuMnB,E;;AAAAA,IAAAA,EA6wBrM,+B;AA7wBqMA,IAAAA,EA6wBjK;AA7wBiKA,MAAAA,EA6wBjK;AAAA,mBA7wBiKA,EA6wBjK;AAAA;AAAA,M;AA7wBiKA,IAAAA,EA8wBnM,6B;AA9wBmMA,IAAAA,EA8wB1K,kB;AA9wB0KA,IAAAA,EA8wBnK,e;AA9wBmKA,IAAAA,EA+wBrM,e;;;;;;AA/wBqMA,IAAAA,EAixBvL,2B;AAjxBuLA,IAAAA,EAixBjJ,U;AAjxBiJA,IAAAA,EAixBtH,wB;;;;iBAjxBsHA,E;AAAAA,IAAAA,EAixBjJ,a;AAjxBiJA,IAAAA,EAixBjJ,yD;;;;;;AAjxBiJA,IAAAA,EAgxBrM,yB;AAhxBqMA,IAAAA,EAixBnM,U;AAjxBmMA,IAAAA,EAixBvL,4E;AAjxBuLA,IAAAA,EAkxBrM,e;;;;iBAlxBqMA,E;AAAAA,IAAAA,EAgxBlL,sC;AAhxBkLA,IAAAA,EAgxBrJ,wC;AAhxBqJA,IAAAA,EAixBnM,a;AAjxBmMA,IAAAA,EAixBnM,2C;AAjxBmMA,IAAAA,EAixBxK,a;AAjxBwKA,IAAAA,EAixBxK,2C;;;;;;AAjxBwKA,IAAAA,EAmxBrM,uB;;;;iBAnxBqMA,E;AAAAA,IAAAA,EAoxBnM,wC;AApxBmMA,IAAAA,EAoxBpK,yCApxBoKA,EAoxBpK,gB;;;;;;AApxBoKA,IAAAA,EAsxBrM,4B;AAtxBqMA,IAAAA,EAwxBnM,U;AAxxBmMA,IAAAA,EAyxBrM,e;;;;iBAzxBqMA,E;AAAAA,IAAAA,EAuxBnM,wC;AAvxBmMA,IAAAA,EAuxBpK,0C;AAvxBoKA,IAAAA,EAwxBnM,a;AAxxBmMA,IAAAA,EAwxBnM,6C;;;;;;AAxxBmMA,IAAAA,EA0xBrM,yB;AA1xBqMA,IAAAA,EA2xBnM,uB;AA3xBmMA,IAAAA,EA4xBrM,e;;;;iBA5xBqMA,E;AAAAA,IAAAA,EA2xBvK,a;AA3xBuKA,IAAAA,EA2xBvK,yC;;;;;;cA3xBuKA,E;;AAAAA,IAAAA,EA+hCrM,+B;AA/hCqMA,IAAAA,EA+hCjK;AA/hCiKA,MAAAA,EA+hCjK;AAAA,mBA/hCiKA,EA+hCjK;AAAA;AAAA,M;AA/hCiKA,IAAAA,EAgiCnM,6B;AAhiCmMA,IAAAA,EAgiC1K,kB;AAhiC0KA,IAAAA,EAgiCnK,e;AAhiCmKA,IAAAA,EAiiCrM,e;;;;;;AAjiCqMA,IAAAA,EAmiCvL,2B;AAniCuLA,IAAAA,EAmiCjJ,U;AAniCiJA,IAAAA,EAmiCtH,wB;;;;iBAniCsHA,E;AAAAA,IAAAA,EAmiCjJ,a;AAniCiJA,IAAAA,EAmiCjJ,yD;;;;;;AAniCiJA,IAAAA,EAkiCrM,yB;AAliCqMA,IAAAA,EAmiCnM,U;AAniCmMA,IAAAA,EAmiCvL,uF;AAniCuLA,IAAAA,EAoiCrM,e;;;;iBApiCqMA,E;AAAAA,IAAAA,EAkiClL,sC;AAliCkLA,IAAAA,EAkiCrJ,wC;AAliCqJA,IAAAA,EAmiCnM,a;AAniCmMA,IAAAA,EAmiCnM,2C;AAniCmMA,IAAAA,EAmiCxK,a;AAniCwKA,IAAAA,EAmiCxK,2C;;;;;;AAniCwKA,IAAAA,EAqiCrM,uB;;;;iBAriCqMA,E;AAAAA,IAAAA,EAsiCnM,wC;AAtiCmMA,IAAAA,EAsiCpK,yCAtiCoKA,EAsiCpK,gB;;;;;;AAtiCoKA,IAAAA,EAwiCrM,4B;AAxiCqMA,IAAAA,EA0iCnM,U;AA1iCmMA,IAAAA,EA2iCrM,e;;;;iBA3iCqMA,E;AAAAA,IAAAA,EAyiCnM,wC;AAziCmMA,IAAAA,EAyiCpK,0C;AAziCoKA,IAAAA,EA0iCnM,a;AA1iCmMA,IAAAA,EA0iCnM,6C;;;;;;AA1iCmMA,IAAAA,EA4iCrM,yB;AA5iCqMA,IAAAA,EA6iCnM,uB;AA7iCmMA,IAAAA,EA8iCrM,e;;;;iBA9iCqMA,E;AAAAA,IAAAA,EA6iCvK,a;AA7iCuKA,IAAAA,EA6iCvK,yC;;;;IAtjC1BoB,uB;AACF,mCAAYC,EAAZ,EAAgB;AAAA;;AACZ,SAAKA,EAAL,GAAUA,EAAV;AACH;;;;WACD,+BAAsB;AAClB,aAAO,KAAKA,EAAL,CAAQC,aAAf;AACH;;;;;;AAELF,uBAAuB,CAACG,IAAxB,GAA+BvB,EAAE,CAACwB,kBAAH,CAAsB;AAAEC,EAAAA,UAAU,EAAE,QAAd;AAAwBC,EAAAA,OAAO,EAAE,QAAjC;AAA2CC,EAAAA,QAAQ,EAAE3B,EAArD;AAAyD4B,EAAAA,IAAI,EAAER,uBAA/D;AAAwFS,EAAAA,IAAI,EAAE,CAAC;AAAEC,IAAAA,KAAK,EAAE9B,EAAE,CAAC+B;AAAZ,GAAD,CAA9F;AAA0HC,EAAAA,MAAM,EAAEhC,EAAE,CAACiC,eAAH,CAAmBhC;AAArJ,CAAtB,CAA/B;AACAmB,uBAAuB,CAACc,IAAxB,GAAuMlC,EAAvM;AAAA,QAAwGoB,uBAAxG;AAAA;AAAA;AAAA;AACApB,EAAE,CAACmC,wBAAH,CAA4B;AAAEV,EAAAA,UAAU,EAAE,QAAd;AAAwBC,EAAAA,OAAO,EAAE,QAAjC;AAA2CC,EAAAA,QAAQ,EAAE3B,EAArD;AAAyD4B,EAAAA,IAAI,EAAER,uBAA/D;AAAwFgB,EAAAA,UAAU,EAAE,CAAC;AACrHR,IAAAA,IAAI,EAAE3B,SAD+G;AAErHoC,IAAAA,IAAI,EAAE,CAAC;AACCC,MAAAA,QAAQ,EAAE,kBADX;AAECC,MAAAA,QAAQ,EAAE;AAFX,KAAD;AAF+G,GAAD,CAApG;AAMhBC,EAAAA,cAAc,EAAE,0BAAY;AAAE,WAAO,CAAC;AAAEZ,MAAAA,IAAI,EAAE5B,EAAE,CAAC+B;AAAX,KAAD,CAAP;AAAmC;AANjD,CAA5B;;IAOMU,oB;;;;AAENA,oBAAoB,CAAClB,IAArB,GAA4BvB,EAAE,CAACwB,kBAAH,CAAsB;AAAEC,EAAAA,UAAU,EAAE,QAAd;AAAwBC,EAAAA,OAAO,EAAE,QAAjC;AAA2CC,EAAAA,QAAQ,EAAE3B,EAArD;AAAyD4B,EAAAA,IAAI,EAAEa,oBAA/D;AAAqFZ,EAAAA,IAAI,EAAE,EAA3F;AAA+FG,EAAAA,MAAM,EAAEhC,EAAE,CAACiC,eAAH,CAAmB/B;AAA1H,CAAtB,CAA5B;AACAuC,oBAAoB,CAACC,IAArB,GAA4B1C,EAAE,CAAC2C,mBAAH,CAAuB;AAAElB,EAAAA,UAAU,EAAE,QAAd;AAAwBC,EAAAA,OAAO,EAAE,QAAjC;AAA2CC,EAAAA,QAAQ,EAAE3B,EAArD;AAAyD4B,EAAAA,IAAI,EAAEa,oBAA/D;AAAqFG,EAAAA,YAAY,EAAE,CAACxB,uBAAD,CAAnG;AAA8HyB,EAAAA,OAAO,EAAE,CAACzB,uBAAD;AAAvI,CAAvB,CAA5B;AACAqB,oBAAoB,CAACK,IAArB,GAA4B9C,EAAE,CAAC+C,mBAAH,CAAuB;AAAEtB,EAAAA,UAAU,EAAE,QAAd;AAAwBC,EAAAA,OAAO,EAAE,QAAjC;AAA2CC,EAAAA,QAAQ,EAAE3B,EAArD;AAAyD4B,EAAAA,IAAI,EAAEa;AAA/D,CAAvB,CAA5B;AACAzC,EAAE,CAACmC,wBAAH,CAA4B;AAAEV,EAAAA,UAAU,EAAE,QAAd;AAAwBC,EAAAA,OAAO,EAAE,QAAjC;AAA2CC,EAAAA,QAAQ,EAAE3B,EAArD;AAAyD4B,EAAAA,IAAI,EAAEa,oBAA/D;AAAqFL,EAAAA,UAAU,EAAE,CAAC;AAClHR,IAAAA,IAAI,EAAE1B,QAD4G;AAElHmC,IAAAA,IAAI,EAAE,CAAC;AACCO,MAAAA,YAAY,EAAE,CAACxB,uBAAD,CADf;AAECyB,MAAAA,OAAO,EAAE,CAACzB,uBAAD;AAFV,KAAD;AAF4G,GAAD;AAAjG,CAA5B;AAQA;AACA;AACA;;IACM4B,e;AACF,2BAAYC,SAAZ,EAAuBC,QAAvB,EAAiC;AAAA;;AAC7B,SAAKD,SAAL,GAAiBA,SAAjB;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACH;AACD;;;;;WACA,gBAAOC,IAAP,EAAaC,WAAb,EAA0B;AACtB,WAAKC,aAAL,GAAqBF,IAArB;AACA,aAAOA,IAAI,CAACG,MAAL,CAAY,IAAZ,EAAkBF,WAAlB,CAAP;AACH;AACD;;;;WACA,kBAAS;AACL,UAAMD,IAAI,GAAG,KAAKE,aAAlB;;AACA,UAAIF,IAAJ,EAAU;AACN,aAAKE,aAAL,GAAqBE,SAArB;AACA,eAAOJ,IAAI,CAACK,MAAL,EAAP;AACH;AACJ;AACD;;;;SACA,eAAiB;AACb,aAAO,KAAKH,aAAL,IAAsB,IAA7B;AACH;AACD;AACJ;AACA;AACA;;;;WACI,yBAAgBF,IAAhB,EAAsB;AAClB,WAAKE,aAAL,GAAqBF,IAArB;AACH;;;;;AAEL;AACA;AACA;AACA;;;IACMM,c;;;;;;;WACF,gBAAOC,MAAP,EAAeN,WAAf,EAA4B;AACxB,WAAKO,eAAL,GAAuBD,MAAvB;AACA,aAAO,KAAKE,qBAAL,CAA2BF,MAA3B,EAAmCN,WAAnC,CAAP;AACH;;;WACD,kBAAS;AACL,UAAI,KAAKO,eAAT,EAA0B;AACtB,aAAKA,eAAL,CAAqBE,eAArB;AACH;;AACD,WAAKF,eAAL,GAAuBJ,SAAvB;;AACA,UAAI,KAAKO,UAAT,EAAqB;AACjB,aAAKA,UAAL;;AACA,aAAKA,UAAL,GAAkBP,SAAlB;AACH;AACJ;;;WACD,sBAAaQ,EAAb,EAAiB;AACb,WAAKD,UAAL,GAAkBC,EAAlB;AACH;;;;;AAGL;AACA;AACA;;;IACMC,Y;AACF,wBAAYC,OAAZ,EAAqBC,MAArB,EAA6BC,OAA7B,EAAsCC,KAAtC,EAA6CC,SAA7C,EAAwDC,QAAxD,EAAkE;AAAA;;AAAA;;AAC9D,SAAKL,OAAL,GAAeA,OAAf;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,OAAL,GAAeA,OAAf;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKC,MAAL,GAAc,IAAIxD,OAAJ,EAAd;AACA,SAAKyD,SAAL,GAAiB,IAAIzD,OAAJ,EAAjB;AACA,SAAKuD,QAAL,CAAcG,WAAd,GAA4BC,SAA5B,CAAsC,YAAM;AACxC,MAAA,KAAI,CAACF,SAAL,CAAeG,QAAf;;AACA,MAAA,KAAI,CAACJ,MAAL,CAAYI,QAAZ;AACH,KAHD;AAIH;AACD;;;;;WACA,sBAAa;AACT,WAAKJ,MAAL,CAAYK,IAAZ;;AACA,UAAI,KAAKV,MAAL,CAAYW,YAAhB,EAA8B;AAC1B,aAAKN,MAAL,CAAYI,QAAZ;AACH;AACJ;;;WACD,iBAAQ;AACJ,aAAO,KAAKJ,MAAL,CAAYO,YAAZ,EAAP;AACH;AACD;;;;WACA,uBAAcC,MAAd,EAAsB;AAClB,WAAKP,SAAL,CAAeI,IAAf,CAAoBG,MAApB;AACH;;;WACD,oBAAW;AACP,aAAO,KAAKP,SAAL,CAAeM,YAAf,EAAP;AACH;;;;;;AAEL,IAAME,8BAA8B,GAAG;AACnCC,EAAAA,SAAS,EAAE,CADwB;AAEnCC,EAAAA,WAAW,EAAE,KAFsB;AAGnC9B,EAAAA,WAAW,EAAE,IAHsB;AAInC+B,EAAAA,iBAAiB,EAAE,KAJgB;AAKnCC,EAAAA,eAAe,EAAE,KALkB;AAMnCC,EAAAA,uBAAuB,EAAE,KANU;AAOnCC,EAAAA,sBAAsB,EAAE,KAPW;AAQnCC,EAAAA,WAAW,EAAE;AACTC,IAAAA,KAAK,EAAE,aADE;AAETC,IAAAA,IAAI,EAAE,YAFG;AAGTC,IAAAA,OAAO,EAAE,eAHA;AAITC,IAAAA,OAAO,EAAE;AAJA,GARsB;AAcnC;AACAC,EAAAA,WAAW,EAAE,KAfsB;AAgBnCC,EAAAA,cAAc,EAAE,KAhBmB;AAiBnCC,EAAAA,OAAO,EAAE,IAjB0B;AAkBnCC,EAAAA,eAAe,EAAE,IAlBkB;AAmBnCC,EAAAA,UAAU,EAAE,KAnBuB;AAoBnCC,EAAAA,WAAW,EAAE,KApBsB;AAqBnCC,EAAAA,UAAU,EAAE,YArBuB;AAsBnCC,EAAAA,aAAa,EAAE,iBAtBoB;AAuBnCC,EAAAA,UAAU,EAAE,aAvBuB;AAwBnCC,EAAAA,YAAY,EAAE,eAxBqB;AAyBnCC,EAAAA,MAAM,EAAE,SAzB2B;AA0BnCC,EAAAA,QAAQ,EAAE,GA1ByB;AA2BnC1B,EAAAA,YAAY,EAAE,IA3BqB;AA4BnC2B,EAAAA,cAAc,EAAE,KA5BmB;AA6BnCC,EAAAA,iBAAiB,EAAE,YA7BgB;AA8BnCC,EAAAA,OAAO,EAAE;AA9B0B,CAAvC;AAgCA,IAAMC,YAAY,GAAG,IAAIxG,cAAJ,CAAmB,aAAnB,CAArB;AAEA;AACA;AACA;;IACMyG,Q;AACF,oBAAYC,WAAZ,EAAyB;AAAA;;AACrB,SAAKA,WAAL,GAAmBA,WAAnB;AACA;;AACA,SAAKC,eAAL,GAAuB,CAAvB;AACA;;AACA,SAAKC,YAAL,GAAoB,IAAIhG,OAAJ,EAApB;AACA;;AACA,SAAKiG,SAAL,GAAiB,IAAIjG,OAAJ,EAAjB;AACA;;AACA,SAAKkG,YAAL,GAAoB,IAAIlG,OAAJ,EAApB;AACA;;AACA,SAAKmG,aAAL,GAAqB,IAAInG,OAAJ,EAArB;AACA;;AACA,SAAKoG,eAAL,GAAuB,IAAIpG,OAAJ,EAAvB;AACH;;;;WACD,uBAAc;AACV,WAAKkG,YAAL,CAAkBrC,IAAlB;;AACA,WAAKqC,YAAL,CAAkBtC,QAAlB;AACH;;;WACD,wBAAe;AACX,aAAO,KAAKsC,YAAL,CAAkBnC,YAAlB,EAAP;AACH;;;WACD,wBAAe;AACX,aAAO,KAAKoC,aAAL,CAAmBpC,YAAnB,EAAP;AACH;;;WACD,0BAAiB;AACb,aAAO,KAAKqC,eAAL,CAAqBrC,YAArB,EAAP;AACH;AACD;AACJ;AACA;;;;WACI,iBAAQ;AACJ,WAAK+B,WAAL,CAAiBrD,MAAjB;;AACA,WAAKuD,YAAL,CAAkBnC,IAAlB;;AACA,WAAKqC,YAAL,CAAkBrC,IAAlB;;AACA,WAAKmC,YAAL,CAAkBpC,QAAlB;;AACA,WAAKsC,YAAL,CAAkBtC,QAAlB;;AACA,WAAKqC,SAAL,CAAerC,QAAf;;AACA,WAAKuC,aAAL,CAAmBvC,QAAnB;;AACA,WAAKwC,eAAL,CAAqBxC,QAArB;AACH;AACD;;;;WACA,uBAAc;AACV,aAAO,KAAKoC,YAAL,CAAkBjC,YAAlB,EAAP;AACH;;;WACD,sBAAa;AACT,aAAO,KAAKkC,SAAL,CAAeI,SAAtB;AACH;;;WACD,oBAAW;AACP,WAAKJ,SAAL,CAAepC,IAAf;;AACA,WAAKoC,SAAL,CAAerC,QAAf;AACH;AACD;;;;WACA,yBAAgB;AACZ,aAAO,KAAKqC,SAAL,CAAelC,YAAf,EAAP;AACH;AACD;;;;WACA,qBAAYuC,YAAZ,EAA0BC,cAA1B,EAA0C;AACtC,UAAID,YAAJ,EAAkB;AACd,aAAKH,aAAL,CAAmBtC,IAAnB;AACH;;AACD,UAAI0C,cAAJ,EAAoB;AAChB,aAAKH,eAAL,CAAqBvC,IAArB,CAA0B,EAAE,KAAKkC,eAAjC;AACH;AACJ;;;;;AAEL;;;IACMS,a;AACF,yBAAYC,aAAZ,EAA2BC,eAA3B,EAA4C;AAAA;;AACxC,SAAKD,aAAL,GAAqBA,aAArB;AACA,SAAKC,eAAL,GAAuBA,eAAvB;AACH;;;;WACD,aAAI3F,KAAJ,EAAW4F,aAAX,EAA0BC,KAA1B,EAAiC;AAC7B,UAAI7F,KAAK,KAAKkC,YAAd,EAA4B;AACxB,eAAO,KAAKwD,aAAZ;AACH;;AACD,aAAO,KAAKC,eAAL,CAAqBG,GAArB,CAAyB9F,KAAzB,EAAgC4F,aAAhC,EAA+CC,KAA/C,CAAP;AACH;;;;;AAGL;AACA;AACA;AACA;AACA;AACA;;;IACME,a;;;;;AACF,yBAAYC,eAAZ,EAA6BC,yBAA7B,EAAwDC,OAAxD,EAAiE;AAAA;;AAAA;;AAC7D;AACA,WAAKF,eAAL,GAAuBA,eAAvB;AACA,WAAKC,yBAAL,GAAiCA,yBAAjC;AACA,WAAKC,OAAL,GAAeA,OAAf;AAJ6D;AAKhE;AACD;AACJ;AACA;AACA;;;;;WACI,+BAAsBtE,MAAtB,EAA8BN,WAA9B,EAA2C;AAAA;;AACvC,UAAM6E,gBAAgB,GAAG,KAAKF,yBAAL,CAA+BG,uBAA/B,CAAuDxE,MAAM,CAACT,SAA9D,CAAzB;;AACA,UAAIkF,YAAJ,CAFuC,CAGvC;AACA;AACA;AACA;AACA;;AACAA,MAAAA,YAAY,GAAGF,gBAAgB,CAACG,MAAjB,CAAwB1E,MAAM,CAACR,QAA/B,CAAf,CARuC,CASvC;AACA;AACA;AACA;;AACA,WAAK8E,OAAL,CAAaK,UAAb,CAAwBF,YAAY,CAACG,QAArC;;AACA,WAAKC,YAAL,CAAkB,YAAM;AACpB,QAAA,MAAI,CAACP,OAAL,CAAaQ,UAAb,CAAwBL,YAAY,CAACG,QAArC;;AACAH,QAAAA,YAAY,CAACM,OAAb;AACH,OAHD,EAduC,CAkBvC;AACA;;AACA,UAAIrF,WAAJ,EAAiB;AACb,aAAK0E,eAAL,CAAqBY,YAArB,CAAkC,KAAKC,qBAAL,CAA2BR,YAA3B,CAAlC,EAA4E,KAAKL,eAAL,CAAqBc,UAAjG;AACH,OAFD,MAGK;AACD,aAAKd,eAAL,CAAqBe,WAArB,CAAiC,KAAKF,qBAAL,CAA2BR,YAA3B,CAAjC;AACH;;AACD,aAAOA,YAAP;AACH;AACD;;;;WACA,+BAAsBA,YAAtB,EAAoC;AAChC,aAAOA,YAAY,CAACG,QAAb,CAAsBQ,SAAtB,CAAgC,CAAhC,CAAP;AACH;;;;EA1CuBrF,c;AA6C5B;AACA;AACA;AACA;;;IACMsF,U;AACF,sBAAYC,WAAZ,EAAyB;AAAA;;AACrB,SAAKA,WAAL,GAAmBA,WAAnB;AACH;;;;WACD,gBAAOtF,MAAP,EAAmC;AAAA,UAApBN,WAAoB,uEAAN,IAAM;AAC/B,aAAO,KAAK4F,WAAL,CAAiB1F,MAAjB,CAAwBI,MAAxB,EAAgCN,WAAhC,CAAP;AACH;AACD;AACJ;AACA;AACA;;;;WACI,kBAAS;AACL,aAAO,KAAK4F,WAAL,CAAiBxF,MAAjB,EAAP;AACH;;;;;AAGL;;;IACMyF,gB;AACF,4BAAYC,SAAZ,EAAuB;AAAA;;AACnB,SAAKA,SAAL,GAAiBA,SAAjB;AACH;;;;WACD,uBAAc;AACV,UAAI,KAAKC,iBAAL,IAA0B,KAAKA,iBAAL,CAAuBC,UAArD,EAAiE;AAC7D,aAAKD,iBAAL,CAAuBC,UAAvB,CAAkCC,WAAlC,CAA8C,KAAKF,iBAAnD;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;AACA;;;;WACI,+BAAsB;AAClB,UAAI,CAAC,KAAKA,iBAAV,EAA6B;AACzB,aAAKG,gBAAL;AACH;;AACD,aAAO,KAAKH,iBAAZ;AACH;AACD;AACJ;AACA;AACA;;;;WACI,4BAAmB;AACf,UAAMI,SAAS,GAAG,KAAKL,SAAL,CAAeM,aAAf,CAA6B,KAA7B,CAAlB;;AACAD,MAAAA,SAAS,CAACE,SAAV,CAAoBC,GAApB,CAAwB,mBAAxB;;AACA,WAAKR,SAAL,CAAeS,IAAf,CAAoBd,WAApB,CAAgCU,SAAhC;;AACA,WAAKJ,iBAAL,GAAyBI,SAAzB;AACH;;;;;;AAELN,gBAAgB,CAAC1H,IAAjB,GAAwBvB,EAAE,CAACwB,kBAAH,CAAsB;AAAEC,EAAAA,UAAU,EAAE,QAAd;AAAwBC,EAAAA,OAAO,EAAE,QAAjC;AAA2CC,EAAAA,QAAQ,EAAE3B,EAArD;AAAyD4B,EAAAA,IAAI,EAAEqH,gBAA/D;AAAiFpH,EAAAA,IAAI,EAAE,CAAC;AAAEC,IAAAA,KAAK,EAAEb;AAAT,GAAD,CAAvF;AAA8Ge,EAAAA,MAAM,EAAEhC,EAAE,CAACiC,eAAH,CAAmB7B;AAAzI,CAAtB,CAAxB;AACA6I,gBAAgB,CAACW,KAAjB,GAAyB5J,EAAE,CAAC6J,qBAAH,CAAyB;AAAEpI,EAAAA,UAAU,EAAE,QAAd;AAAwBC,EAAAA,OAAO,EAAE,QAAjC;AAA2CC,EAAAA,QAAQ,EAAE3B,EAArD;AAAyD4B,EAAAA,IAAI,EAAEqH,gBAA/D;AAAiFa,EAAAA,UAAU,EAAE;AAA7F,CAAzB,CAAzB;AACA9J,EAAE,CAACmC,wBAAH,CAA4B;AAAEV,EAAAA,UAAU,EAAE,QAAd;AAAwBC,EAAAA,OAAO,EAAE,QAAjC;AAA2CC,EAAAA,QAAQ,EAAE3B,EAArD;AAAyD4B,EAAAA,IAAI,EAAEqH,gBAA/D;AAAiF7G,EAAAA,UAAU,EAAE,CAAC;AAC9GR,IAAAA,IAAI,EAAExB,UADwG;AAE9GiC,IAAAA,IAAI,EAAE,CAAC;AAAEyH,MAAAA,UAAU,EAAE;AAAd,KAAD;AAFwG,GAAD,CAA7F;AAGhBtH,EAAAA,cAAc,EAAE,0BAAY;AAChC,WAAO,CAAC;AAAEZ,MAAAA,IAAI,EAAE2B,SAAR;AAAmBnB,MAAAA,UAAU,EAAE,CAAC;AACxBR,QAAAA,IAAI,EAAEvB,MADkB;AAExBgC,QAAAA,IAAI,EAAE,CAACpB,QAAD;AAFkB,OAAD;AAA/B,KAAD,CAAP;AAIH;AARuB,CAA5B;AAUA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IACM8I,O;AACF,mBAAYC,iBAAZ,EAA+BjC,yBAA/B,EAA0DC,OAA1D,EAAmEkB,SAAnE,EAA8E;AAAA;;AAC1E,SAAKc,iBAAL,GAAyBA,iBAAzB;AACA,SAAKjC,yBAAL,GAAiCA,yBAAjC;AACA,SAAKC,OAAL,GAAeA,OAAf;AACA,SAAKkB,SAAL,GAAiBA,SAAjB,CAJ0E,CAK1E;;AACA,SAAKe,aAAL,GAAqB,IAAIC,GAAJ,EAArB;AACH;AACD;AACJ;AACA;AACA;;;;;WACI,gBAAO/D,aAAP,EAAsBgE,gBAAtB,EAAwC;AACpC;AACA,aAAO,KAAKC,iBAAL,CAAuB,KAAKC,cAAL,CAAoBlE,aAApB,EAAmCgE,gBAAnC,CAAvB,CAAP;AACH;;;WACD,0BAAqD;AAAA,UAAtChE,aAAsC,uEAAtB,EAAsB;AAAA,UAAlBgE,gBAAkB;;AACjD,UAAI,CAAC,KAAKF,aAAL,CAAmBrC,GAAnB,CAAuBuC,gBAAvB,CAAL,EAA+C;AAC3C,aAAKF,aAAL,CAAmBK,GAAnB,CAAuBH,gBAAvB,EAAyC,EAAzC;AACH;;AACD,UAAI,CAAC,KAAKF,aAAL,CAAmBrC,GAAnB,CAAuBuC,gBAAvB,EAAyChE,aAAzC,CAAL,EAA8D;AAC1D,aAAK8D,aAAL,CAAmBrC,GAAnB,CAAuBuC,gBAAvB,EAAyChE,aAAzC,IAA0D,KAAKoE,kBAAL,CAAwBpE,aAAxB,EAAuCgE,gBAAvC,CAA1D;AACH;;AACD,aAAO,KAAKF,aAAL,CAAmBrC,GAAnB,CAAuBuC,gBAAvB,EAAyChE,aAAzC,CAAP;AACH;AACD;AACJ;AACA;AACA;;;;WACI,4BAAmBA,aAAnB,EAAkCgE,gBAAlC,EAAoD;AAChD,UAAMK,IAAI,GAAG,KAAKtB,SAAL,CAAeM,aAAf,CAA6B,KAA7B,CAAb;;AACAgB,MAAAA,IAAI,CAACC,EAAL,GAAU,iBAAV;AACAD,MAAAA,IAAI,CAACf,SAAL,CAAeC,GAAf,CAAmBvD,aAAnB;AACAqE,MAAAA,IAAI,CAACf,SAAL,CAAeC,GAAf,CAAmB,iBAAnB;;AACA,UAAI,CAACS,gBAAL,EAAuB;AACnB,aAAKH,iBAAL,CAAuBU,mBAAvB,GAA6C7B,WAA7C,CAAyD2B,IAAzD;AACH,OAFD,MAGK;AACDL,QAAAA,gBAAgB,CAACO,mBAAjB,GAAuC7B,WAAvC,CAAmD2B,IAAnD;AACH;;AACD,aAAOA,IAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;;WACI,2BAAkBA,IAAlB,EAAwB;AACpB,aAAO,IAAI3C,aAAJ,CAAkB2C,IAAlB,EAAwB,KAAKzC,yBAA7B,EAAwD,KAAKC,OAA7D,CAAP;AACH;AACD;AACJ;AACA;AACA;;;;WACI,2BAAkBwC,IAAlB,EAAwB;AACpB,aAAO,IAAIzB,UAAJ,CAAe,KAAK4B,iBAAL,CAAuBH,IAAvB,CAAf,CAAP;AACH;;;;;;AAELT,OAAO,CAACxI,IAAR,GAAevB,EAAE,CAACwB,kBAAH,CAAsB;AAAEC,EAAAA,UAAU,EAAE,QAAd;AAAwBC,EAAAA,OAAO,EAAE,QAAjC;AAA2CC,EAAAA,QAAQ,EAAE3B,EAArD;AAAyD4B,EAAAA,IAAI,EAAEmI,OAA/D;AAAwElI,EAAAA,IAAI,EAAE,CAAC;AAAEC,IAAAA,KAAK,EAAEmH;AAAT,GAAD,EAA8B;AAAEnH,IAAAA,KAAK,EAAE9B,EAAE,CAAC4K;AAAZ,GAA9B,EAAsE;AAAE9I,IAAAA,KAAK,EAAE9B,EAAE,CAAC6K;AAAZ,GAAtE,EAAoG;AAAE/I,IAAAA,KAAK,EAAEb;AAAT,GAApG,CAA9E;AAAwMe,EAAAA,MAAM,EAAEhC,EAAE,CAACiC,eAAH,CAAmB7B;AAAnO,CAAtB,CAAf;AACA2J,OAAO,CAACH,KAAR,GAAgB5J,EAAE,CAAC6J,qBAAH,CAAyB;AAAEpI,EAAAA,UAAU,EAAE,QAAd;AAAwBC,EAAAA,OAAO,EAAE,QAAjC;AAA2CC,EAAAA,QAAQ,EAAE3B,EAArD;AAAyD4B,EAAAA,IAAI,EAAEmI,OAA/D;AAAwED,EAAAA,UAAU,EAAE;AAApF,CAAzB,CAAhB;AACA9J,EAAE,CAACmC,wBAAH,CAA4B;AAAEV,EAAAA,UAAU,EAAE,QAAd;AAAwBC,EAAAA,OAAO,EAAE,QAAjC;AAA2CC,EAAAA,QAAQ,EAAE3B,EAArD;AAAyD4B,EAAAA,IAAI,EAAEmI,OAA/D;AAAwE3H,EAAAA,UAAU,EAAE,CAAC;AACrGR,IAAAA,IAAI,EAAExB,UAD+F;AAErGiC,IAAAA,IAAI,EAAE,CAAC;AAAEyH,MAAAA,UAAU,EAAE;AAAd,KAAD;AAF+F,GAAD,CAApF;AAGhBtH,EAAAA,cAAc,EAAE,0BAAY;AAChC,WAAO,CAAC;AAAEZ,MAAAA,IAAI,EAAEqH;AAAR,KAAD,EAA6B;AAAErH,MAAAA,IAAI,EAAE5B,EAAE,CAAC4K;AAAX,KAA7B,EAAoE;AAAEhJ,MAAAA,IAAI,EAAE5B,EAAE,CAAC6K;AAAX,KAApE,EAAiG;AAAEjJ,MAAAA,IAAI,EAAE2B,SAAR;AAAmBnB,MAAAA,UAAU,EAAE,CAAC;AACxHR,QAAAA,IAAI,EAAEvB,MADkH;AAExHgC,QAAAA,IAAI,EAAE,CAACpB,QAAD;AAFkH,OAAD;AAA/B,KAAjG,CAAP;AAIH;AARuB,CAA5B;;IAUM6J,a;AACF,yBAAYhJ,KAAZ,EAAmBiJ,OAAnB,EAA4BC,SAA5B,EAAuCC,SAAvC,EAAkDC,MAAlD,EAA0D;AAAA;;AACtD,SAAKH,OAAL,GAAeA,OAAf;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,eAAL,GAAuB,CAAvB;AACA,SAAKC,MAAL,GAAc,EAAd;AACA,SAAKC,KAAL,GAAa,CAAb;AACA,SAAKC,YAAL,GAAoBC,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB1J,KAAK,CAAC2J,OAAxB,CAAd,EAAgD3J,KAAK,CAACoC,MAAtD,CAApB;;AACA,QAAIpC,KAAK,CAACoC,MAAN,CAAaqB,WAAjB,EAA8B;AAC1B,WAAK+F,YAAL,CAAkB/F,WAAlB,GAAgCgG,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB1J,KAAK,CAAC2J,OAAN,CAAclG,WAAhC,CAAd,EAA4DzD,KAAK,CAACoC,MAAN,CAAaqB,WAAzE,CAAhC;AACH;AACJ;AACD;;;;;WACA,cAAKpB,OAAL,EAAcC,KAAd,EAA+C;AAAA,UAA1BsH,QAA0B,uEAAf,EAAe;AAAA,UAAX9J,IAAW,uEAAJ,EAAI;AAC3C,aAAO,KAAK+J,qBAAL,CAA2B/J,IAA3B,EAAiCuC,OAAjC,EAA0CC,KAA1C,EAAiD,KAAKwH,WAAL,CAAiBF,QAAjB,CAAjD,CAAP;AACH;AACD;;;;WACA,iBAAQvH,OAAR,EAAiBC,KAAjB,EAAuC;AAAA,UAAfsH,QAAe,uEAAJ,EAAI;AACnC,UAAM9J,IAAI,GAAG,KAAK0J,YAAL,CAAkB/F,WAAlB,CAA8BG,OAA9B,IAAyC,EAAtD;AACA,aAAO,KAAKiG,qBAAL,CAA2B/J,IAA3B,EAAiCuC,OAAjC,EAA0CC,KAA1C,EAAiD,KAAKwH,WAAL,CAAiBF,QAAjB,CAAjD,CAAP;AACH;AACD;;;;WACA,eAAMvH,OAAN,EAAeC,KAAf,EAAqC;AAAA,UAAfsH,QAAe,uEAAJ,EAAI;AACjC,UAAM9J,IAAI,GAAG,KAAK0J,YAAL,CAAkB/F,WAAlB,CAA8BC,KAA9B,IAAuC,EAApD;AACA,aAAO,KAAKmG,qBAAL,CAA2B/J,IAA3B,EAAiCuC,OAAjC,EAA0CC,KAA1C,EAAiD,KAAKwH,WAAL,CAAiBF,QAAjB,CAAjD,CAAP;AACH;AACD;;;;WACA,cAAKvH,OAAL,EAAcC,KAAd,EAAoC;AAAA,UAAfsH,QAAe,uEAAJ,EAAI;AAChC,UAAM9J,IAAI,GAAG,KAAK0J,YAAL,CAAkB/F,WAAlB,CAA8BE,IAA9B,IAAsC,EAAnD;AACA,aAAO,KAAKkG,qBAAL,CAA2B/J,IAA3B,EAAiCuC,OAAjC,EAA0CC,KAA1C,EAAiD,KAAKwH,WAAL,CAAiBF,QAAjB,CAAjD,CAAP;AACH;AACD;;;;WACA,iBAAQvH,OAAR,EAAiBC,KAAjB,EAAuC;AAAA,UAAfsH,QAAe,uEAAJ,EAAI;AACnC,UAAM9J,IAAI,GAAG,KAAK0J,YAAL,CAAkB/F,WAAlB,CAA8BI,OAA9B,IAAyC,EAAtD;AACA,aAAO,KAAKgG,qBAAL,CAA2B/J,IAA3B,EAAiCuC,OAAjC,EAA0CC,KAA1C,EAAiD,KAAKwH,WAAL,CAAiBF,QAAjB,CAAjD,CAAP;AACH;AACD;AACJ;AACA;;;;WACI,eAAMzH,OAAN,EAAe;AACX;AADW,iDAES,KAAKmH,MAFd;AAAA;;AAAA;AAEX,4DAAiC;AAAA,cAAtBS,KAAsB;;AAC7B,cAAI5H,OAAO,KAAKV,SAAhB,EAA2B;AACvB,gBAAIsI,KAAK,CAAC5H,OAAN,KAAkBA,OAAtB,EAA+B;AAC3B4H,cAAAA,KAAK,CAACvH,QAAN,CAAewH,WAAf;AACA;AACH;AACJ,WALD,MAMK;AACDD,YAAAA,KAAK,CAACvH,QAAN,CAAewH,WAAf;AACH;AACJ;AAZU;AAAA;AAAA;AAAA;AAAA;AAad;AACD;AACJ;AACA;;;;WACI,gBAAO7H,OAAP,EAAgB;AACZ,UAAM8H,KAAK,GAAG,KAAKC,UAAL,CAAgB/H,OAAhB,CAAd;;AACA,UAAI,CAAC8H,KAAL,EAAY;AACR,eAAO,KAAP;AACH;;AACDA,MAAAA,KAAK,CAACE,WAAN,CAAkB3H,QAAlB,CAA2B4H,KAA3B;AACA,WAAKd,MAAL,CAAYe,MAAZ,CAAmBJ,KAAK,CAACV,KAAzB,EAAgC,CAAhC;AACA,WAAKF,eAAL,GAAuB,KAAKA,eAAL,GAAuB,CAA9C;;AACA,UAAI,CAAC,KAAKG,YAAL,CAAkBrG,SAAnB,IAAgC,CAAC,KAAKmG,MAAL,CAAYgB,MAAjD,EAAyD;AACrD,eAAO,KAAP;AACH;;AACD,UAAI,KAAKjB,eAAL,GAAuB,KAAKG,YAAL,CAAkBrG,SAAzC,IAAsD,KAAKmG,MAAL,CAAY,KAAKD,eAAjB,CAA1D,EAA6F;AACzF,YAAMkB,CAAC,GAAG,KAAKjB,MAAL,CAAY,KAAKD,eAAjB,EAAkC7G,QAA5C;;AACA,YAAI,CAAC+H,CAAC,CAACC,UAAF,EAAL,EAAqB;AACjB,eAAKnB,eAAL,GAAuB,KAAKA,eAAL,GAAuB,CAA9C;AACAkB,UAAAA,CAAC,CAACE,QAAF;AACH;AACJ;;AACD,aAAO,IAAP;AACH;AACD;AACJ;AACA;;;;WACI,yBAA2E;AAAA,UAA7DnI,KAA6D,uEAArD,EAAqD;AAAA,UAAjDD,OAAiD,uEAAvC,EAAuC;AAAA,UAAnCqI,gBAAmC;AAAA,UAAjBpH,eAAiB;AACvE,UAAQE,sBAAR,GAAmC,KAAKgG,YAAxC,CAAQhG,sBAAR;;AADuE,kDAEnD,KAAK8F,MAF8C;AAAA;;AAAA;AAEvE,+DAAiC;AAAA,cAAtBS,KAAsB;AAC7B,cAAMY,iBAAiB,GAAGnH,sBAAsB,IAAIuG,KAAK,CAACzH,KAAN,KAAgBA,KAApE;;AACA,cAAI,CAAC,CAACkB,sBAAD,IAA2BmH,iBAA5B,KAAkDZ,KAAK,CAAC1H,OAAN,KAAkBA,OAAxE,EAAiF;AAC7E0H,YAAAA,KAAK,CAACvH,QAAN,CAAeoI,WAAf,CAA2BF,gBAA3B,EAA6CpH,eAA7C;AACA,mBAAOyG,KAAP;AACH;AACJ;AARsE;AAAA;AAAA;AAAA;AAAA;;AASvE,aAAO,IAAP;AACH;AACD;;;;WACA,uBAA2B;AAAA,UAAfH,QAAe,uEAAJ,EAAI;AACvB,aAAOH,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKF,YAAvB,CAAd,EAAoDI,QAApD,CAAP;AACH;AACD;AACJ;AACA;;;;WACI,oBAAWzH,OAAX,EAAoB;AAChB,WAAK,IAAI0I,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKvB,MAAL,CAAYgB,MAAhC,EAAwCO,CAAC,EAAzC,EAA6C;AACzC,YAAI,KAAKvB,MAAL,CAAYuB,CAAZ,EAAe1I,OAAf,KAA2BA,OAA/B,EAAwC;AACpC,iBAAO;AAAEoH,YAAAA,KAAK,EAAEsB,CAAT;AAAYV,YAAAA,WAAW,EAAE,KAAKb,MAAL,CAAYuB,CAAZ;AAAzB,WAAP;AACH;AACJ;;AACD,aAAO,IAAP;AACH;AACD;AACJ;AACA;;;;WACI,+BAAsBtI,SAAtB,EAAiCF,OAAjC,EAA0CC,KAA1C,EAAiDF,MAAjD,EAAyD;AAAA;;AACrD,UAAIA,MAAM,CAACsC,cAAX,EAA2B;AACvB,eAAO,KAAK0E,MAAL,CAAY0B,GAAZ,CAAgB;AAAA,iBAAM,MAAI,CAACC,kBAAL,CAAwBxI,SAAxB,EAAmCF,OAAnC,EAA4CC,KAA5C,EAAmDF,MAAnD,CAAN;AAAA,SAAhB,CAAP;AACH;;AACD,aAAO,KAAK2I,kBAAL,CAAwBxI,SAAxB,EAAmCF,OAAnC,EAA4CC,KAA5C,EAAmDF,MAAnD,CAAP;AACH;AACD;AACJ;AACA;AACA;;;;WACI,4BAAmBG,SAAnB,EAA8BF,OAA9B,EAAuCC,KAAvC,EAA8CF,MAA9C,EAAsD;AAClD,UAAI,CAACA,MAAM,CAAC4I,cAAZ,EAA4B;AACxB,cAAM,IAAIC,KAAJ,CAAU,yBAAV,CAAN;AACH,OAHiD,CAIlD;AACA;AACA;;;AACA,UAAMC,SAAS,GAAG,KAAKC,aAAL,CAAmB7I,KAAnB,EAA0BD,OAA1B,EAAmC,KAAKmH,YAAL,CAAkBjG,uBAAlB,IAA6CnB,MAAM,CAAC4B,OAAP,GAAiB,CAAjG,EAAoG,KAAKwF,YAAL,CAAkBlG,eAAtH,CAAlB;;AACA,UAAI,CAAE,KAAKkG,YAAL,CAAkBhG,sBAAlB,IAA4ClB,KAA7C,IAAuDD,OAAxD,KACA,KAAKmH,YAAL,CAAkBnG,iBADlB,IAEA6H,SAAS,KAAK,IAFlB,EAEwB;AACpB,eAAOA,SAAP;AACH;;AACD,WAAKE,oBAAL,GAA4B/I,OAA5B;AACA,UAAIgJ,YAAY,GAAG,KAAnB;;AACA,UAAI,KAAK7B,YAAL,CAAkBrG,SAAlB,IAA+B,KAAKkG,eAAL,IAAwB,KAAKG,YAAL,CAAkBrG,SAA7E,EAAwF;AACpFkI,QAAAA,YAAY,GAAG,IAAf;;AACA,YAAI,KAAK7B,YAAL,CAAkBpG,WAAtB,EAAmC;AAC/B,eAAKkI,KAAL,CAAW,KAAKhC,MAAL,CAAY,CAAZ,EAAenH,OAA1B;AACH;AACJ;;AACD,UAAMoJ,UAAU,GAAG,KAAKtC,OAAL,CAAa3C,MAAb,CAAoBlE,MAAM,CAACiC,aAA3B,EAA0C,KAAKgE,gBAA/C,CAAnB;AACA,WAAKkB,KAAL,GAAa,KAAKA,KAAL,GAAa,CAA1B;AACA,UAAIiC,gBAAgB,GAAGnJ,OAAvB;;AACA,UAAIA,OAAO,IAAID,MAAM,CAAC8B,UAAtB,EAAkC;AAC9BsH,QAAAA,gBAAgB,GAAG,KAAKrC,SAAL,CAAesC,QAAf,CAAwBjN,eAAe,CAACkN,IAAxC,EAA8CrJ,OAA9C,CAAnB;AACH;;AACD,UAAMG,QAAQ,GAAG,IAAIsC,QAAJ,CAAayG,UAAb,CAAjB;AACA,UAAMI,YAAY,GAAG,IAAIzJ,YAAJ,CAAiB,KAAKqH,KAAtB,EAA6BnH,MAA7B,EAAqCoJ,gBAArC,EAAuDlJ,KAAvD,EAA8DC,SAA9D,EAAyEC,QAAzE,CAArB;AACA,UAAMoJ,aAAa,GAAG,IAAInG,aAAJ,CAAkBkG,YAAlB,EAAgC,KAAKzC,SAArC,CAAtB;AACA,UAAM/H,SAAS,GAAG,IAAID,eAAJ,CAAoBkB,MAAM,CAAC4I,cAA3B,EAA2CY,aAA3C,CAAlB;AACA,UAAMhK,MAAM,GAAG2J,UAAU,CAAC/J,MAAX,CAAkBL,SAAlB,EAA6B,KAAKqI,YAAL,CAAkBlI,WAA/C,CAAf;AACAkB,MAAAA,QAAQ,CAACqJ,iBAAT,GAA6BjK,MAAM,CAACkK,QAApC;AACA,UAAMC,GAAG,GAAG;AACR5J,QAAAA,OAAO,EAAE,KAAKoH,KADN;AAERjH,QAAAA,KAAK,EAAEA,KAAK,IAAI,EAFR;AAGRD,QAAAA,OAAO,EAAEA,OAAO,IAAI,EAHZ;AAIRG,QAAAA,QAAQ,EAARA,QAJQ;AAKRwJ,QAAAA,OAAO,EAAExJ,QAAQ,CAACyJ,aAAT,EALD;AAMRC,QAAAA,QAAQ,EAAE1J,QAAQ,CAACG,WAAT,EANF;AAORwJ,QAAAA,KAAK,EAAER,YAAY,CAACQ,KAAb,EAPC;AAQRC,QAAAA,QAAQ,EAAET,YAAY,CAACS,QAAb,EARF;AASRxK,QAAAA,MAAM,EAANA;AATQ,OAAZ;;AAWA,UAAI,CAACyJ,YAAL,EAAmB;AACf,aAAKhC,eAAL,GAAuB,KAAKA,eAAL,GAAuB,CAA9C;AACAgD,QAAAA,UAAU,CAAC,YAAM;AACbN,UAAAA,GAAG,CAACvJ,QAAJ,CAAaiI,QAAb;AACH,SAFS,CAAV;AAGH;;AACD,WAAKnB,MAAL,CAAYgD,IAAZ,CAAiBP,GAAjB;AACA,aAAOA,GAAP;AACH;;;;;;AAEL/C,aAAa,CAACvJ,IAAd,GAAqBvB,EAAE,CAACwB,kBAAH,CAAsB;AAAEC,EAAAA,UAAU,EAAE,QAAd;AAAwBC,EAAAA,OAAO,EAAE,QAAjC;AAA2CC,EAAAA,QAAQ,EAAE3B,EAArD;AAAyD4B,EAAAA,IAAI,EAAEkJ,aAA/D;AAA8EjJ,EAAAA,IAAI,EAAE,CAAC;AAAEC,IAAAA,KAAK,EAAE6E;AAAT,GAAD,EAA0B;AAAE7E,IAAAA,KAAK,EAAEiI;AAAT,GAA1B,EAA8C;AAAEjI,IAAAA,KAAK,EAAE9B,EAAE,CAACqO;AAAZ,GAA9C,EAAsE;AAAEvM,IAAAA,KAAK,EAAEX,EAAE,CAACmN;AAAZ,GAAtE,EAAkG;AAAExM,IAAAA,KAAK,EAAE9B,EAAE,CAACuO;AAAZ,GAAlG,CAApF;AAA6MvM,EAAAA,MAAM,EAAEhC,EAAE,CAACiC,eAAH,CAAmB7B;AAAxO,CAAtB,CAArB;AACA0K,aAAa,CAAClB,KAAd,GAAsB5J,EAAE,CAAC6J,qBAAH,CAAyB;AAAEpI,EAAAA,UAAU,EAAE,QAAd;AAAwBC,EAAAA,OAAO,EAAE,QAAjC;AAA2CC,EAAAA,QAAQ,EAAE3B,EAArD;AAAyD4B,EAAAA,IAAI,EAAEkJ,aAA/D;AAA8EhB,EAAAA,UAAU,EAAE;AAA1F,CAAzB,CAAtB;AACA9J,EAAE,CAACmC,wBAAH,CAA4B;AAAEV,EAAAA,UAAU,EAAE,QAAd;AAAwBC,EAAAA,OAAO,EAAE,QAAjC;AAA2CC,EAAAA,QAAQ,EAAE3B,EAArD;AAAyD4B,EAAAA,IAAI,EAAEkJ,aAA/D;AAA8E1I,EAAAA,UAAU,EAAE,CAAC;AAC3GR,IAAAA,IAAI,EAAExB,UADqG;AAE3GiC,IAAAA,IAAI,EAAE,CAAC;AAAEyH,MAAAA,UAAU,EAAE;AAAd,KAAD;AAFqG,GAAD,CAA1F;AAGhBtH,EAAAA,cAAc,EAAE,0BAAY;AAChC,WAAO,CAAC;AAAEZ,MAAAA,IAAI,EAAE2B,SAAR;AAAmBnB,MAAAA,UAAU,EAAE,CAAC;AACxBR,QAAAA,IAAI,EAAEvB,MADkB;AAExBgC,QAAAA,IAAI,EAAE,CAACsE,YAAD;AAFkB,OAAD;AAA/B,KAAD,EAGW;AAAE/E,MAAAA,IAAI,EAAEmI;AAAR,KAHX,EAG8B;AAAEnI,MAAAA,IAAI,EAAE5B,EAAE,CAACqO;AAAX,KAH9B,EAGqD;AAAEzM,MAAAA,IAAI,EAAET,EAAE,CAACmN;AAAX,KAHrD,EAGgF;AAAE1M,MAAAA,IAAI,EAAE5B,EAAE,CAACuO;AAAX,KAHhF,CAAP;AAIH;AARuB,CAA5B;;IAUMC,K;AACF,iBAAYC,aAAZ,EAA2BhB,YAA3B,EAAyCvC,MAAzC,EAAiD;AAAA;;AAAA;;AAC7C,SAAKuD,aAAL,GAAqBA,aAArB;AACA,SAAKhB,YAAL,GAAoBA,YAApB;AACA,SAAKvC,MAAL,GAAcA,MAAd;AACA;;AACA,SAAKwD,KAAL,GAAa,CAAC,CAAd;AACA;;AACA,SAAKC,YAAL,GAAoB,EAApB;AACA;;AACA,SAAKhO,KAAL,GAAa;AACTiO,MAAAA,KAAK,EAAE,UADE;AAETC,MAAAA,MAAM,EAAE;AACJtI,QAAAA,QAAQ,EAAE,KAAKkH,YAAL,CAAkBvJ,MAAlB,CAAyBqC,QAD/B;AAEJD,QAAAA,MAAM,EAAE;AAFJ;AAFC,KAAb;AAOA,SAAKnC,OAAL,GAAesJ,YAAY,CAACtJ,OAA5B;AACA,SAAKC,KAAL,GAAaqJ,YAAY,CAACrJ,KAA1B;AACA,SAAK0K,OAAL,GAAerB,YAAY,CAACvJ,MAA5B;AACA,SAAK6K,eAAL,GAAuBtB,YAAY,CAACvJ,MAAb,CAAoB4B,OAA3C;AACA,SAAK6I,YAAL,aAAuBlB,YAAY,CAACpJ,SAApC,cAAiDoJ,YAAY,CAACvJ,MAAb,CAAoBgC,UAArE;AACA,SAAK8I,GAAL,GAAWvB,YAAY,CAACnJ,QAAb,CAAsByJ,aAAtB,GAAsCrJ,SAAtC,CAAgD,YAAM;AAC7D,MAAA,MAAI,CAACuK,aAAL;AACH,KAFU,CAAX;AAGA,SAAKC,IAAL,GAAYzB,YAAY,CAACnJ,QAAb,CAAsB6K,YAAtB,GAAqCzK,SAArC,CAA+C,YAAM;AAC7D,MAAA,MAAI,CAAC0K,MAAL;AACH,KAFW,CAAZ;AAGA,SAAKC,IAAL,GAAY5B,YAAY,CAACnJ,QAAb,CAAsBgL,YAAtB,GAAqC5K,SAArC,CAA+C,YAAM;AAC7D,MAAA,MAAI,CAAC2C,YAAL;AACH,KAFW,CAAZ;AAGA,SAAKkI,IAAL,GAAY9B,YAAY,CAACnJ,QAAb,CAAsBgD,cAAtB,GAAuC5C,SAAvC,CAAiD,UAAA8K,KAAK,EAAI;AAClE,MAAA,MAAI,CAAC1I,eAAL,GAAuB0I,KAAvB;AACH,KAFW,CAAZ;AAGH;AACD;;;;;SACA,eAAmB;AACf,UAAI,KAAK7O,KAAL,CAAWiO,KAAX,KAAqB,UAAzB,EAAqC;AACjC,eAAO,MAAP;AACH;;AACD;AACH;;;WACD,uBAAc;AACV,WAAKI,GAAL,CAASS,WAAT;AACA,WAAKP,IAAL,CAAUO,WAAV;AACA,WAAKJ,IAAL,CAAUI,WAAV;AACA,WAAKF,IAAL,CAAUE,WAAV;AACAC,MAAAA,aAAa,CAAC,KAAKC,UAAN,CAAb;AACAC,MAAAA,YAAY,CAAC,KAAKC,OAAN,CAAZ;AACH;AACD;AACJ;AACA;;;;WACI,yBAAgB;AAAA;;AACZ,WAAKlP,KAAL,GAAa4K,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAK7K,KAAvB,CAAd,EAA6C;AAAEiO,QAAAA,KAAK,EAAE;AAAT,OAA7C,CAAb;;AACA,UAAI,EAAE,KAAKE,OAAL,CAAajJ,cAAb,KAAgC,IAAhC,IAAwC,KAAKiJ,OAAL,CAAajJ,cAAb,KAAgC,SAA1E,KAAwF,KAAKiJ,OAAL,CAAahJ,OAAzG,EAAkH;AAC9G,aAAKgK,cAAL,CAAoB;AAAA,iBAAM,MAAI,CAACV,MAAL,EAAN;AAAA,SAApB,EAAyC,KAAKN,OAAL,CAAahJ,OAAtD;AACA,aAAKiK,QAAL,GAAgB,IAAIC,IAAJ,GAAWC,OAAX,KAAuB,KAAKnB,OAAL,CAAahJ,OAApD;;AACA,YAAI,KAAKgJ,OAAL,CAAa7I,WAAjB,EAA8B;AAC1B,eAAKiK,eAAL,CAAqB;AAAA,mBAAM,MAAI,CAACC,cAAL,EAAN;AAAA,WAArB,EAAkD,EAAlD;AACH;AACJ;AACJ;AACD;AACJ;AACA;;;;WACI,0BAAiB;AACb,UAAI,KAAKzB,KAAL,KAAe,CAAf,IAAoB,KAAKA,KAAL,KAAe,GAAnC,IAA0C,CAAC,KAAKI,OAAL,CAAahJ,OAA5D,EAAqE;AACjE;AACH;;AACD,UAAMsK,GAAG,GAAG,IAAIJ,IAAJ,GAAWC,OAAX,EAAZ;AACA,UAAMI,SAAS,GAAG,KAAKN,QAAL,GAAgBK,GAAlC;AACA,WAAK1B,KAAL,GAAc2B,SAAS,GAAG,KAAKvB,OAAL,CAAahJ,OAA1B,GAAqC,GAAlD;;AACA,UAAI,KAAKgJ,OAAL,CAAarI,iBAAb,KAAmC,YAAvC,EAAqD;AACjD,aAAKiI,KAAL,GAAa,MAAM,KAAKA,KAAxB;AACH;;AACD,UAAI,KAAKA,KAAL,IAAc,CAAlB,EAAqB;AACjB,aAAKA,KAAL,GAAa,CAAb;AACH;;AACD,UAAI,KAAKA,KAAL,IAAc,GAAlB,EAAuB;AACnB,aAAKA,KAAL,GAAa,GAAb;AACH;AACJ;;;WACD,wBAAe;AAAA;;AACXkB,MAAAA,YAAY,CAAC,KAAKC,OAAN,CAAZ;AACAH,MAAAA,aAAa,CAAC,KAAKC,UAAN,CAAb;AACA,WAAKhP,KAAL,GAAa4K,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAK7K,KAAvB,CAAd,EAA6C;AAAEiO,QAAAA,KAAK,EAAE;AAAT,OAA7C,CAAb;AACA,WAAKkB,cAAL,CAAoB;AAAA,eAAM,MAAI,CAACV,MAAL,EAAN;AAAA,OAApB,EAAyC,KAAKL,eAA9C;AACA,WAAKD,OAAL,CAAahJ,OAAb,GAAuB,KAAKiJ,eAA5B;AACA,WAAKgB,QAAL,GAAgB,IAAIC,IAAJ,GAAWC,OAAX,MAAwB,KAAKnB,OAAL,CAAahJ,OAAb,IAAwB,CAAhD,CAAhB;AACA,WAAK4I,KAAL,GAAa,CAAC,CAAd;;AACA,UAAI,KAAKI,OAAL,CAAa7I,WAAjB,EAA8B;AAC1B,aAAKiK,eAAL,CAAqB;AAAA,iBAAM,MAAI,CAACC,cAAL,EAAN;AAAA,SAArB,EAAkD,EAAlD;AACH;AACJ;AACD;AACJ;AACA;;;;WACI,kBAAS;AAAA;;AACL,UAAI,KAAKxP,KAAL,CAAWiO,KAAX,KAAqB,SAAzB,EAAoC;AAChC;AACH;;AACDgB,MAAAA,YAAY,CAAC,KAAKC,OAAN,CAAZ;AACA,WAAKlP,KAAL,GAAa4K,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAK7K,KAAvB,CAAd,EAA6C;AAAEiO,QAAAA,KAAK,EAAE;AAAT,OAA7C,CAAb;AACA,WAAKkB,cAAL,CAAoB;AAAA,eAAM,MAAI,CAACrB,aAAL,CAAmBW,MAAnB,CAA0B,MAAI,CAAC3B,YAAL,CAAkBxJ,OAA5C,CAAN;AAAA,OAApB,EAAgF,CAAC,KAAKwJ,YAAL,CAAkBvJ,MAAlB,CAAyBqC,QAA1G;AACH;;;WACD,oBAAW;AACP,UAAI,KAAK5F,KAAL,CAAWiO,KAAX,KAAqB,SAAzB,EAAoC;AAChC;AACH;;AACD,WAAKnB,YAAL,CAAkB6C,UAAlB;;AACA,UAAI,KAAKxB,OAAL,CAAajK,YAAjB,EAA+B;AAC3B,aAAKuK,MAAL;AACH;AACJ;;;WACD,uBAAc;AACV,UAAI,KAAKzO,KAAL,CAAWiO,KAAX,KAAqB,SAAzB,EAAoC;AAChC;AACH;;AACDgB,MAAAA,YAAY,CAAC,KAAKC,OAAN,CAAZ;AACA,WAAKf,OAAL,CAAahJ,OAAb,GAAuB,CAAvB;AACA,WAAKiK,QAAL,GAAgB,CAAhB,CANU,CAOV;;AACAL,MAAAA,aAAa,CAAC,KAAKC,UAAN,CAAb;AACA,WAAKjB,KAAL,GAAa,CAAb;AACH;;;WACD,4BAAmB;AAAA;;AACf,UAAK,KAAKI,OAAL,CAAajJ,cAAb,KAAgC,IAAhC,IAAwC,KAAKiJ,OAAL,CAAajJ,cAAb,KAAgC,iBAAzE,IACA,KAAKiJ,OAAL,CAAa/I,eAAb,KAAiC,CADjC,IAEA,KAAKpF,KAAL,CAAWiO,KAAX,KAAqB,SAFzB,EAEoC;AAChC;AACH;;AACD,WAAKkB,cAAL,CAAoB;AAAA,eAAM,MAAI,CAACV,MAAL,EAAN;AAAA,OAApB,EAAyC,KAAKN,OAAL,CAAa/I,eAAtD;AACA,WAAK+I,OAAL,CAAahJ,OAAb,GAAuB,KAAKgJ,OAAL,CAAa/I,eAApC;AACA,WAAKgK,QAAL,GAAgB,IAAIC,IAAJ,GAAWC,OAAX,MAAwB,KAAKnB,OAAL,CAAahJ,OAAb,IAAwB,CAAhD,CAAhB;AACA,WAAK4I,KAAL,GAAa,CAAC,CAAd;;AACA,UAAI,KAAKI,OAAL,CAAa7I,WAAjB,EAA8B;AAC1B,aAAKiK,eAAL,CAAqB;AAAA,iBAAM,MAAI,CAACC,cAAL,EAAN;AAAA,SAArB,EAAkD,EAAlD;AACH;AACJ;;;WACD,wBAAeI,IAAf,EAAqBV,OAArB,EAA8B;AAAA;;AAC1B,UAAI,KAAK3E,MAAT,EAAiB;AACb,aAAKA,MAAL,CAAYsF,iBAAZ,CAA8B;AAAA,iBAAO,OAAI,CAACX,OAAL,GAAe1B,UAAU,CAAC;AAAA,mBAAM,OAAI,CAACsC,gBAAL,CAAsBF,IAAtB,CAAN;AAAA,WAAD,EAAoCV,OAApC,CAAhC;AAAA,SAA9B;AACH,OAFD,MAGK;AACD,aAAKA,OAAL,GAAe1B,UAAU,CAAC;AAAA,iBAAMoC,IAAI,EAAV;AAAA,SAAD,EAAeV,OAAf,CAAzB;AACH;AACJ;;;WACD,yBAAgBU,IAAhB,EAAsBV,OAAtB,EAA+B;AAAA;;AAC3B,UAAI,KAAK3E,MAAT,EAAiB;AACb,aAAKA,MAAL,CAAYsF,iBAAZ,CAA8B;AAAA,iBAAO,OAAI,CAACb,UAAL,GAAkBe,WAAW,CAAC;AAAA,mBAAM,OAAI,CAACD,gBAAL,CAAsBF,IAAtB,CAAN;AAAA,WAAD,EAAoCV,OAApC,CAApC;AAAA,SAA9B;AACH,OAFD,MAGK;AACD,aAAKF,UAAL,GAAkBe,WAAW,CAAC;AAAA,iBAAMH,IAAI,EAAV;AAAA,SAAD,EAAeV,OAAf,CAA7B;AACH;AACJ;;;WACD,0BAAiBU,IAAjB,EAAuB;AACnB,UAAI,KAAKrF,MAAT,EAAiB;AACb,aAAKA,MAAL,CAAY0B,GAAZ,CAAgB;AAAA,iBAAM2D,IAAI,EAAV;AAAA,SAAhB;AACH,OAFD,MAGK;AACDA,QAAAA,IAAI;AACP;AACJ;;;;;;AAEL/B,KAAK,CAACjN,IAAN,GAAavB,EAAE,CAACwB,kBAAH,CAAsB;AAAEC,EAAAA,UAAU,EAAE,QAAd;AAAwBC,EAAAA,OAAO,EAAE,QAAjC;AAA2CC,EAAAA,QAAQ,EAAE3B,EAArD;AAAyD4B,EAAAA,IAAI,EAAE4M,KAA/D;AAAsE3M,EAAAA,IAAI,EAAE,CAAC;AAAEC,IAAAA,KAAK,EAAEgJ;AAAT,GAAD,EAA2B;AAAEhJ,IAAAA,KAAK,EAAEkC;AAAT,GAA3B,EAAoD;AAAElC,IAAAA,KAAK,EAAE9B,EAAE,CAACuO;AAAZ,GAApD,CAA5E;AAAuJvM,EAAAA,MAAM,EAAEhC,EAAE,CAACiC,eAAH,CAAmB1B;AAAlL,CAAtB,CAAb;AACAiO,KAAK,CAACmC,IAAN,GA5wBuM3Q,EA4wBvM;AAAA,QAAsFwO,KAAtF;AAAA;AAAA;AAAA;AAAA;AA5wBuMxO,MAAAA,EA4wBvM;AAAA,eAAsF,cAAtF;AAAA;AAAA,eAAsF,iBAAtF;AAAA;AAAA,eAAsF,sBAAtF;AAAA;AAAA;;AAAA;AA5wBuMA,MAAAA,EA4wBvM;AA5wBuMA,MAAAA,EA4wBvM;AA5wBuMA,MAAAA,EA4wBvM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA5wBuMA,MAAAA,EA6wBrM,0DADF;AA5wBuMA,MAAAA,EAgxBrM,oDAJF;AA5wBuMA,MAAAA,EAmxBrM,oDAPF;AA5wBuMA,MAAAA,EAsxBrM,oDAVF;AA5wBuMA,MAAAA,EA0xBrM,oDAdF;AAAA;;AAAA;AA5wBuMA,MAAAA,EA6wB5L,4CADX;AA5wBuMA,MAAAA,EAgxB/L,aAJR;AA5wBuMA,MAAAA,EAgxB/L,8BAJR;AA5wBuMA,MAAAA,EAmxB/L,aAPR;AA5wBuMA,MAAAA,EAmxB/L,0DAPR;AA5wBuMA,MAAAA,EAsxB/L,aAVR;AA5wBuMA,MAAAA,EAsxB/L,2DAVR;AA5wBuMA,MAAAA,EA0xB/L,aAdR;AA5wBuMA,MAAAA,EA0xB/L,4CAdR;AAAA;AAAA;AAAA,eAiB0CgB,EAAE,CAAC4P,IAjB7C;AAAA;AAAA;AAAA,eAiBgI,CACxHlQ,OAAO,CAAC,UAAD,EAAa,CAChBC,KAAK,CAAC,UAAD,EAAaC,KAAK,CAAC;AAAEiQ,MAAAA,OAAO,EAAE;AAAX,KAAD,CAAlB,CADW,EAEhBlQ,KAAK,CAAC,QAAD,EAAWC,KAAK,CAAC;AAAEiQ,MAAAA,OAAO,EAAE;AAAX,KAAD,CAAhB,CAFW,EAGhBlQ,KAAK,CAAC,SAAD,EAAYC,KAAK,CAAC;AAAEiQ,MAAAA,OAAO,EAAE;AAAX,KAAD,CAAjB,CAHW,EAIhBhQ,UAAU,CAAC,oBAAD,EAAuBC,OAAO,CAAC,+BAAD,CAA9B,CAJM,EAKhBD,UAAU,CAAC,mBAAD,EAAsBC,OAAO,CAAC,+BAAD,CAA7B,CALM,CAAb,CADiH;AAjBhI;AAAA;AA0BAd,EAAE,CAACmC,wBAAH,CAA4B;AAAEV,EAAAA,UAAU,EAAE,QAAd;AAAwBC,EAAAA,OAAO,EAAE,QAAjC;AAA2CC,EAAAA,QAAQ,EAAE3B,EAArD;AAAyD4B,EAAAA,IAAI,EAAE4M,KAA/D;AAAsEpM,EAAAA,UAAU,EAAE,CAAC;AACnGR,IAAAA,IAAI,EAAErB,SAD6F;AAEnG8B,IAAAA,IAAI,EAAE,CAAC;AACCC,MAAAA,QAAQ,EAAE,mBADX;AAECwO,MAAAA,QAAQ,g2BAFT;AAoBCC,MAAAA,UAAU,EAAE,CACRrQ,OAAO,CAAC,UAAD,EAAa,CAChBC,KAAK,CAAC,UAAD,EAAaC,KAAK,CAAC;AAAEiQ,QAAAA,OAAO,EAAE;AAAX,OAAD,CAAlB,CADW,EAEhBlQ,KAAK,CAAC,QAAD,EAAWC,KAAK,CAAC;AAAEiQ,QAAAA,OAAO,EAAE;AAAX,OAAD,CAAhB,CAFW,EAGhBlQ,KAAK,CAAC,SAAD,EAAYC,KAAK,CAAC;AAAEiQ,QAAAA,OAAO,EAAE;AAAX,OAAD,CAAjB,CAHW,EAIhBhQ,UAAU,CAAC,oBAAD,EAAuBC,OAAO,CAAC,+BAAD,CAA9B,CAJM,EAKhBD,UAAU,CAAC,mBAAD,EAAsBC,OAAO,CAAC,+BAAD,CAA7B,CALM,CAAb,CADC,CApBb;AA6BCkQ,MAAAA,mBAAmB,EAAE;AA7BtB,KAAD;AAF6F,GAAD,CAAlF;AAiChBxO,EAAAA,cAAc,EAAE,0BAAY;AAAE,WAAO,CAAC;AAAEZ,MAAAA,IAAI,EAAEkJ;AAAR,KAAD,EAA0B;AAAElJ,MAAAA,IAAI,EAAEoC;AAAR,KAA1B,EAAkD;AAAEpC,MAAAA,IAAI,EAAE5B,EAAE,CAACuO;AAAX,KAAlD,CAAP;AAAgF,GAjC9F;AAiCgG0C,EAAAA,cAAc,EAAE;AAAEtC,IAAAA,YAAY,EAAE,CAAC;AAC7I/M,MAAAA,IAAI,EAAEpB,WADuI;AAE7I6B,MAAAA,IAAI,EAAE,CAAC,OAAD;AAFuI,KAAD,CAAhB;AAG5H1B,IAAAA,KAAK,EAAE,CAAC;AACRiB,MAAAA,IAAI,EAAEpB,WADE;AAER6B,MAAAA,IAAI,EAAE,CAAC,WAAD;AAFE,KAAD,CAHqH;AAM5H6O,IAAAA,YAAY,EAAE,CAAC;AACftP,MAAAA,IAAI,EAAEpB,WADS;AAEf6B,MAAAA,IAAI,EAAE,CAAC,eAAD;AAFS,KAAD,CAN8G;AAS5H8O,IAAAA,QAAQ,EAAE,CAAC;AACXvP,MAAAA,IAAI,EAAEnB,YADK;AAEX4B,MAAAA,IAAI,EAAE,CAAC,OAAD;AAFK,KAAD,CATkH;AAY5H+O,IAAAA,WAAW,EAAE,CAAC;AACdxP,MAAAA,IAAI,EAAEnB,YADQ;AAEd4B,MAAAA,IAAI,EAAE,CAAC,YAAD;AAFQ,KAAD,CAZ+G;AAe5HgP,IAAAA,gBAAgB,EAAE,CAAC;AACnBzP,MAAAA,IAAI,EAAEnB,YADa;AAEnB4B,MAAAA,IAAI,EAAE,CAAC,YAAD;AAFa,KAAD;AAf0G;AAjChH,CAA5B;AAqDA,IAAMiP,mBAAmB,GAAG/F,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBxG,8BAAlB,CAAd,EAAiE;AAAE8H,EAAAA,cAAc,EAAE0B;AAAlB,CAAjE,CAA5B;;IACM+C,Y;;;;;;;WACF,mBAA4B;AAAA,UAAbrN,MAAa,uEAAJ,EAAI;AACxB,aAAO;AACHsN,QAAAA,QAAQ,EAAED,YADP;AAEHE,QAAAA,SAAS,EAAE,CACP;AACIC,UAAAA,OAAO,EAAE/K,YADb;AAEIgL,UAAAA,QAAQ,EAAE;AACNlG,YAAAA,OAAO,EAAE6F,mBADH;AAENpN,YAAAA,MAAM,EAANA;AAFM;AAFd,SADO;AAFR,OAAP;AAYH;;;;;;AAELqN,YAAY,CAAChQ,IAAb,GAAoBvB,EAAE,CAACwB,kBAAH,CAAsB;AAAEC,EAAAA,UAAU,EAAE,QAAd;AAAwBC,EAAAA,OAAO,EAAE,QAAjC;AAA2CC,EAAAA,QAAQ,EAAE3B,EAArD;AAAyD4B,EAAAA,IAAI,EAAE2P,YAA/D;AAA6E1P,EAAAA,IAAI,EAAE,EAAnF;AAAuFG,EAAAA,MAAM,EAAEhC,EAAE,CAACiC,eAAH,CAAmB/B;AAAlH,CAAtB,CAApB;AACAqR,YAAY,CAAC7O,IAAb,GAAoB1C,EAAE,CAAC2C,mBAAH,CAAuB;AAAElB,EAAAA,UAAU,EAAE,QAAd;AAAwBC,EAAAA,OAAO,EAAE,QAAjC;AAA2CC,EAAAA,QAAQ,EAAE3B,EAArD;AAAyD4B,EAAAA,IAAI,EAAE2P,YAA/D;AAA6E3O,EAAAA,YAAY,EAAE,CAAC4L,KAAD,CAA3F;AAAoGoD,EAAAA,OAAO,EAAE,CAAC1Q,YAAD,CAA7G;AAA6H2B,EAAAA,OAAO,EAAE,CAAC2L,KAAD;AAAtI,CAAvB,CAApB;AACA+C,YAAY,CAACzO,IAAb,GAAoB9C,EAAE,CAAC+C,mBAAH,CAAuB;AAAEtB,EAAAA,UAAU,EAAE,QAAd;AAAwBC,EAAAA,OAAO,EAAE,QAAjC;AAA2CC,EAAAA,QAAQ,EAAE3B,EAArD;AAAyD4B,EAAAA,IAAI,EAAE2P,YAA/D;AAA6EK,EAAAA,OAAO,EAAE,CAAC,CAAC1Q,YAAD,CAAD;AAAtF,CAAvB,CAApB;AACAlB,EAAE,CAACmC,wBAAH,CAA4B;AAAEV,EAAAA,UAAU,EAAE,QAAd;AAAwBC,EAAAA,OAAO,EAAE,QAAjC;AAA2CC,EAAAA,QAAQ,EAAE3B,EAArD;AAAyD4B,EAAAA,IAAI,EAAE2P,YAA/D;AAA6EnP,EAAAA,UAAU,EAAE,CAAC;AAC1GR,IAAAA,IAAI,EAAE1B,QADoG;AAE1GmC,IAAAA,IAAI,EAAE,CAAC;AACCuP,MAAAA,OAAO,EAAE,CAAC1Q,YAAD,CADV;AAEC0B,MAAAA,YAAY,EAAE,CAAC4L,KAAD,CAFf;AAGC3L,MAAAA,OAAO,EAAE,CAAC2L,KAAD,CAHV;AAICqD,MAAAA,eAAe,EAAE,CAACrD,KAAD;AAJlB,KAAD;AAFoG,GAAD;AAAzF,CAA5B;;IASMsD,yB;;;;;;;WACF,mBAA4B;AAAA,UAAb5N,MAAa,uEAAJ,EAAI;AACxB,aAAO;AACHsN,QAAAA,QAAQ,EAAED,YADP;AAEHE,QAAAA,SAAS,EAAE,CACP;AACIC,UAAAA,OAAO,EAAE/K,YADb;AAEIgL,UAAAA,QAAQ,EAAE;AACNlG,YAAAA,OAAO,EAAEzG,8BADH;AAENd,YAAAA,MAAM,EAANA;AAFM;AAFd,SADO;AAFR,OAAP;AAYH;;;;;;AAEL4N,yBAAyB,CAACvQ,IAA1B,GAAiCvB,EAAE,CAACwB,kBAAH,CAAsB;AAAEC,EAAAA,UAAU,EAAE,QAAd;AAAwBC,EAAAA,OAAO,EAAE,QAAjC;AAA2CC,EAAAA,QAAQ,EAAE3B,EAArD;AAAyD4B,EAAAA,IAAI,EAAEkQ,yBAA/D;AAA0FjQ,EAAAA,IAAI,EAAE,EAAhG;AAAoGG,EAAAA,MAAM,EAAEhC,EAAE,CAACiC,eAAH,CAAmB/B;AAA/H,CAAtB,CAAjC;AACA4R,yBAAyB,CAACpP,IAA1B,GAAiC1C,EAAE,CAAC2C,mBAAH,CAAuB;AAAElB,EAAAA,UAAU,EAAE,QAAd;AAAwBC,EAAAA,OAAO,EAAE,QAAjC;AAA2CC,EAAAA,QAAQ,EAAE3B,EAArD;AAAyD4B,EAAAA,IAAI,EAAEkQ,yBAA/D;AAA0FF,EAAAA,OAAO,EAAE,CAAC1Q,YAAD;AAAnG,CAAvB,CAAjC;AACA4Q,yBAAyB,CAAChP,IAA1B,GAAiC9C,EAAE,CAAC+C,mBAAH,CAAuB;AAAEtB,EAAAA,UAAU,EAAE,QAAd;AAAwBC,EAAAA,OAAO,EAAE,QAAjC;AAA2CC,EAAAA,QAAQ,EAAE3B,EAArD;AAAyD4B,EAAAA,IAAI,EAAEkQ,yBAA/D;AAA0FF,EAAAA,OAAO,EAAE,CAAC,CAAC1Q,YAAD,CAAD;AAAnG,CAAvB,CAAjC;AACAlB,EAAE,CAACmC,wBAAH,CAA4B;AAAEV,EAAAA,UAAU,EAAE,QAAd;AAAwBC,EAAAA,OAAO,EAAE,QAAjC;AAA2CC,EAAAA,QAAQ,EAAE3B,EAArD;AAAyD4B,EAAAA,IAAI,EAAEkQ,yBAA/D;AAA0F1P,EAAAA,UAAU,EAAE,CAAC;AACvHR,IAAAA,IAAI,EAAE1B,QADiH;AAEvHmC,IAAAA,IAAI,EAAE,CAAC;AACCuP,MAAAA,OAAO,EAAE,CAAC1Q,YAAD;AADV,KAAD;AAFiH,GAAD;AAAtG,CAA5B;;IAOM6Q,gB;AACF,4BAAYtD,aAAZ,EAA2BhB,YAA3B,EAAyCuE,MAAzC,EAAiD;AAAA;;AAAA;;AAC7C,SAAKvD,aAAL,GAAqBA,aAArB;AACA,SAAKhB,YAAL,GAAoBA,YAApB;AACA,SAAKuE,MAAL,GAAcA,MAAd;AACA;;AACA,SAAKtD,KAAL,GAAa,CAAC,CAAd;AACA;;AACA,SAAKC,YAAL,GAAoB,EAApB;AACA;;AACA,SAAKhO,KAAL,GAAa,UAAb;AACA,SAAKwD,OAAL,GAAesJ,YAAY,CAACtJ,OAA5B;AACA,SAAKC,KAAL,GAAaqJ,YAAY,CAACrJ,KAA1B;AACA,SAAK0K,OAAL,GAAerB,YAAY,CAACvJ,MAA5B;AACA,SAAK6K,eAAL,GAAuBtB,YAAY,CAACvJ,MAAb,CAAoB4B,OAA3C;AACA,SAAK6I,YAAL,aAAuBlB,YAAY,CAACpJ,SAApC,cAAiDoJ,YAAY,CAACvJ,MAAb,CAAoBgC,UAArE;AACA,SAAK8I,GAAL,GAAWvB,YAAY,CAACnJ,QAAb,CAAsByJ,aAAtB,GAAsCrJ,SAAtC,CAAgD,YAAM;AAC7D,MAAA,OAAI,CAACuK,aAAL;AACH,KAFU,CAAX;AAGA,SAAKC,IAAL,GAAYzB,YAAY,CAACnJ,QAAb,CAAsB6K,YAAtB,GAAqCzK,SAArC,CAA+C,YAAM;AAC7D,MAAA,OAAI,CAAC0K,MAAL;AACH,KAFW,CAAZ;AAGA,SAAKC,IAAL,GAAY5B,YAAY,CAACnJ,QAAb,CAAsBgL,YAAtB,GAAqC5K,SAArC,CAA+C,YAAM;AAC7D,MAAA,OAAI,CAAC2C,YAAL;AACH,KAFW,CAAZ;AAGA,SAAKkI,IAAL,GAAY9B,YAAY,CAACnJ,QAAb,CAAsBgD,cAAtB,GAAuC5C,SAAvC,CAAiD,UAAA8K,KAAK,EAAI;AAClE,MAAA,OAAI,CAAC1I,eAAL,GAAuB0I,KAAvB;AACH,KAFW,CAAZ;AAGH;AACD;;;;;SACA,eAAmB;AACf,UAAI,KAAK7O,KAAL,KAAe,UAAnB,EAA+B;AAC3B,eAAO,MAAP;AACH;AACJ;;;WACD,uBAAc;AACV,WAAKqO,GAAL,CAASS,WAAT;AACA,WAAKP,IAAL,CAAUO,WAAV;AACA,WAAKJ,IAAL,CAAUI,WAAV;AACA,WAAKF,IAAL,CAAUE,WAAV;AACAC,MAAAA,aAAa,CAAC,KAAKC,UAAN,CAAb;AACAC,MAAAA,YAAY,CAAC,KAAKC,OAAN,CAAZ;AACH;AACD;AACJ;AACA;;;;WACI,yBAAgB;AAAA;;AACZ,WAAKlP,KAAL,GAAa,QAAb;;AACA,UAAI,EAAE,KAAKmO,OAAL,CAAajJ,cAAb,KAAgC,IAAhC,IAAwC,KAAKiJ,OAAL,CAAajJ,cAAb,KAAgC,SAA1E,KAAwF,KAAKiJ,OAAL,CAAahJ,OAAzG,EAAkH;AAC9G,aAAK+J,OAAL,GAAe1B,UAAU,CAAC,YAAM;AAC5B,UAAA,OAAI,CAACiB,MAAL;AACH,SAFwB,EAEtB,KAAKN,OAAL,CAAahJ,OAFS,CAAzB;AAGA,aAAKiK,QAAL,GAAgB,IAAIC,IAAJ,GAAWC,OAAX,KAAuB,KAAKnB,OAAL,CAAahJ,OAApD;;AACA,YAAI,KAAKgJ,OAAL,CAAa7I,WAAjB,EAA8B;AAC1B,eAAK0J,UAAL,GAAkBe,WAAW,CAAC;AAAA,mBAAM,OAAI,CAACP,cAAL,EAAN;AAAA,WAAD,EAA8B,EAA9B,CAA7B;AACH;AACJ;;AACD,UAAI,KAAKrB,OAAL,CAAatI,cAAjB,EAAiC;AAC7B,aAAKwL,MAAL,CAAYC,IAAZ;AACH;AACJ;AACD;AACJ;AACA;;;;WACI,0BAAiB;AACb,UAAI,KAAKvD,KAAL,KAAe,CAAf,IAAoB,KAAKA,KAAL,KAAe,GAAnC,IAA0C,CAAC,KAAKI,OAAL,CAAahJ,OAA5D,EAAqE;AACjE;AACH;;AACD,UAAMsK,GAAG,GAAG,IAAIJ,IAAJ,GAAWC,OAAX,EAAZ;AACA,UAAMI,SAAS,GAAG,KAAKN,QAAL,GAAgBK,GAAlC;AACA,WAAK1B,KAAL,GAAc2B,SAAS,GAAG,KAAKvB,OAAL,CAAahJ,OAA1B,GAAqC,GAAlD;;AACA,UAAI,KAAKgJ,OAAL,CAAarI,iBAAb,KAAmC,YAAvC,EAAqD;AACjD,aAAKiI,KAAL,GAAa,MAAM,KAAKA,KAAxB;AACH;;AACD,UAAI,KAAKA,KAAL,IAAc,CAAlB,EAAqB;AACjB,aAAKA,KAAL,GAAa,CAAb;AACH;;AACD,UAAI,KAAKA,KAAL,IAAc,GAAlB,EAAuB;AACnB,aAAKA,KAAL,GAAa,GAAb;AACH;AACJ;;;WACD,wBAAe;AAAA;;AACXkB,MAAAA,YAAY,CAAC,KAAKC,OAAN,CAAZ;AACAH,MAAAA,aAAa,CAAC,KAAKC,UAAN,CAAb;AACA,WAAKhP,KAAL,GAAa,QAAb;AACA,WAAKmO,OAAL,CAAahJ,OAAb,GAAuB,KAAKiJ,eAA5B;AACA,WAAKc,OAAL,GAAe1B,UAAU,CAAC;AAAA,eAAM,OAAI,CAACiB,MAAL,EAAN;AAAA,OAAD,EAAsB,KAAKL,eAA3B,CAAzB;AACA,WAAKgB,QAAL,GAAgB,IAAIC,IAAJ,GAAWC,OAAX,MAAwB,KAAKlB,eAAL,IAAwB,CAAhD,CAAhB;AACA,WAAKL,KAAL,GAAa,CAAC,CAAd;;AACA,UAAI,KAAKI,OAAL,CAAa7I,WAAjB,EAA8B;AAC1B,aAAK0J,UAAL,GAAkBe,WAAW,CAAC;AAAA,iBAAM,OAAI,CAACP,cAAL,EAAN;AAAA,SAAD,EAA8B,EAA9B,CAA7B;AACH;AACJ;AACD;AACJ;AACA;;;;WACI,kBAAS;AAAA;;AACL,UAAI,KAAKxP,KAAL,KAAe,SAAnB,EAA8B;AAC1B;AACH;;AACDiP,MAAAA,YAAY,CAAC,KAAKC,OAAN,CAAZ;AACA,WAAKlP,KAAL,GAAa,SAAb;AACA,WAAKkP,OAAL,GAAe1B,UAAU,CAAC;AAAA,eAAM,OAAI,CAACM,aAAL,CAAmBW,MAAnB,CAA0B,OAAI,CAAC3B,YAAL,CAAkBxJ,OAA5C,CAAN;AAAA,OAAD,CAAzB;AACH;;;WACD,oBAAW;AACP,UAAI,KAAKtD,KAAL,KAAe,SAAnB,EAA8B;AAC1B;AACH;;AACD,WAAK8M,YAAL,CAAkB6C,UAAlB;;AACA,UAAI,KAAKxB,OAAL,CAAajK,YAAjB,EAA+B;AAC3B,aAAKuK,MAAL;AACH;AACJ;;;WACD,uBAAc;AACV,UAAI,KAAKzO,KAAL,KAAe,SAAnB,EAA8B;AAC1B;AACH;;AACDiP,MAAAA,YAAY,CAAC,KAAKC,OAAN,CAAZ;AACA,WAAKf,OAAL,CAAahJ,OAAb,GAAuB,CAAvB;AACA,WAAKiK,QAAL,GAAgB,CAAhB,CANU,CAOV;;AACAL,MAAAA,aAAa,CAAC,KAAKC,UAAN,CAAb;AACA,WAAKjB,KAAL,GAAa,CAAb;AACH;;;WACD,4BAAmB;AAAA;;AACf,UAAK,KAAKI,OAAL,CAAajJ,cAAb,KAAgC,IAAhC,IAAwC,KAAKiJ,OAAL,CAAajJ,cAAb,KAAgC,iBAAzE,IACA,KAAKiJ,OAAL,CAAa/I,eAAb,KAAiC,CADjC,IAEA,KAAKpF,KAAL,KAAe,SAFnB,EAE8B;AAC1B;AACH;;AACD,WAAKkP,OAAL,GAAe1B,UAAU,CAAC;AAAA,eAAM,OAAI,CAACiB,MAAL,EAAN;AAAA,OAAD,EAAsB,KAAKN,OAAL,CAAa/I,eAAnC,CAAzB;AACA,WAAK+I,OAAL,CAAahJ,OAAb,GAAuB,KAAKgJ,OAAL,CAAa/I,eAApC;AACA,WAAKgK,QAAL,GAAgB,IAAIC,IAAJ,GAAWC,OAAX,MAAwB,KAAKnB,OAAL,CAAahJ,OAAb,IAAwB,CAAhD,CAAhB;AACA,WAAK4I,KAAL,GAAa,CAAC,CAAd;;AACA,UAAI,KAAKI,OAAL,CAAa7I,WAAjB,EAA8B;AAC1B,aAAK0J,UAAL,GAAkBe,WAAW,CAAC;AAAA,iBAAM,OAAI,CAACP,cAAL,EAAN;AAAA,SAAD,EAA8B,EAA9B,CAA7B;AACH;AACJ;;;;;;AAEL4B,gBAAgB,CAACxQ,IAAjB,GAAwBvB,EAAE,CAACwB,kBAAH,CAAsB;AAAEC,EAAAA,UAAU,EAAE,QAAd;AAAwBC,EAAAA,OAAO,EAAE,QAAjC;AAA2CC,EAAAA,QAAQ,EAAE3B,EAArD;AAAyD4B,EAAAA,IAAI,EAAEmQ,gBAA/D;AAAiFlQ,EAAAA,IAAI,EAAE,CAAC;AAAEC,IAAAA,KAAK,EAAEgJ;AAAT,GAAD,EAA2B;AAAEhJ,IAAAA,KAAK,EAAEkC;AAAT,GAA3B,EAAoD;AAAElC,IAAAA,KAAK,EAAE9B,EAAE,CAAC6K;AAAZ,GAApD,CAAvF;AAA0K7I,EAAAA,MAAM,EAAEhC,EAAE,CAACiC,eAAH,CAAmB1B;AAArM,CAAtB,CAAxB;AACAwR,gBAAgB,CAACpB,IAAjB,GA9hCuM3Q,EA8hCvM;AAAA,QAAiG+R,gBAAjG;AAAA;AAAA;AAAA;AAAA;AA9hCuM/R,MAAAA,EA8hCvM;AAAA,eAAiG,cAAjG;AAAA;AAAA,eAAiG,iBAAjG;AAAA;AAAA,eAAiG,sBAAjG;AAAA;AAAA;;AAAA;AA9hCuMA,MAAAA,EA8hCvM;AA9hCuMA,MAAAA,EA8hCvM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA9hCuMA,MAAAA,EA+hCrM,qEADF;AA9hCuMA,MAAAA,EAkiCrM,+DAJF;AA9hCuMA,MAAAA,EAqiCrM,+DAPF;AA9hCuMA,MAAAA,EAwiCrM,+DAVF;AA9hCuMA,MAAAA,EA4iCrM,+DAdF;AAAA;;AAAA;AA9hCuMA,MAAAA,EA+hC5L,4CADX;AA9hCuMA,MAAAA,EAkiC/L,aAJR;AA9hCuMA,MAAAA,EAkiC/L,8BAJR;AA9hCuMA,MAAAA,EAqiC/L,aAPR;AA9hCuMA,MAAAA,EAqiC/L,0DAPR;AA9hCuMA,MAAAA,EAwiC/L,aAVR;AA9hCuMA,MAAAA,EAwiC/L,2DAVR;AA9hCuMA,MAAAA,EA4iC/L,aAdR;AA9hCuMA,MAAAA,EA4iC/L,4CAdR;AAAA;AAAA;AAAA,eAiB0CgB,EAAE,CAAC4P,IAjB7C;AAAA;AAAA;AAkBA5Q,EAAE,CAACmC,wBAAH,CAA4B;AAAEV,EAAAA,UAAU,EAAE,QAAd;AAAwBC,EAAAA,OAAO,EAAE,QAAjC;AAA2CC,EAAAA,QAAQ,EAAE3B,EAArD;AAAyD4B,EAAAA,IAAI,EAAEmQ,gBAA/D;AAAiF3P,EAAAA,UAAU,EAAE,CAAC;AAC9GR,IAAAA,IAAI,EAAErB,SADwG;AAE9G8B,IAAAA,IAAI,EAAE,CAAC;AACCC,MAAAA,QAAQ,EAAE,mBADX;AAECwO,MAAAA,QAAQ;AAFT,KAAD;AAFwG,GAAD,CAA7F;AAuBhBtO,EAAAA,cAAc,EAAE,0BAAY;AAAE,WAAO,CAAC;AAAEZ,MAAAA,IAAI,EAAEkJ;AAAR,KAAD,EAA0B;AAAElJ,MAAAA,IAAI,EAAEoC;AAAR,KAA1B,EAAkD;AAAEpC,MAAAA,IAAI,EAAE5B,EAAE,CAAC6K;AAAX,KAAlD,CAAP;AAAwF,GAvBtG;AAuBwGoG,EAAAA,cAAc,EAAE;AAAEtC,IAAAA,YAAY,EAAE,CAAC;AACrJ/M,MAAAA,IAAI,EAAEpB,WAD+I;AAErJ6B,MAAAA,IAAI,EAAE,CAAC,OAAD;AAF+I,KAAD,CAAhB;AAGpI6O,IAAAA,YAAY,EAAE,CAAC;AACftP,MAAAA,IAAI,EAAEpB,WADS;AAEf6B,MAAAA,IAAI,EAAE,CAAC,eAAD;AAFS,KAAD,CAHsH;AAMpI8O,IAAAA,QAAQ,EAAE,CAAC;AACXvP,MAAAA,IAAI,EAAEnB,YADK;AAEX4B,MAAAA,IAAI,EAAE,CAAC,OAAD;AAFK,KAAD,CAN0H;AASpI+O,IAAAA,WAAW,EAAE,CAAC;AACdxP,MAAAA,IAAI,EAAEnB,YADQ;AAEd4B,MAAAA,IAAI,EAAE,CAAC,YAAD;AAFQ,KAAD,CATuH;AAYpIgP,IAAAA,gBAAgB,EAAE,CAAC;AACnBzP,MAAAA,IAAI,EAAEnB,YADa;AAEnB4B,MAAAA,IAAI,EAAE,CAAC,YAAD;AAFa,KAAD;AAZkH;AAvBxH,CAA5B;AAuCA,IAAM6P,+BAA+B,GAAG3G,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBxG,8BAAlB,CAAd,EAAiE;AAAE8H,EAAAA,cAAc,EAAEiF;AAAlB,CAAjE,CAAxC;;IACMI,sB;;;;;;;WACF,mBAA4B;AAAA,UAAbjO,MAAa,uEAAJ,EAAI;AACxB,aAAO;AACHsN,QAAAA,QAAQ,EAAEW,sBADP;AAEHV,QAAAA,SAAS,EAAE,CACP;AACIC,UAAAA,OAAO,EAAE/K,YADb;AAEIgL,UAAAA,QAAQ,EAAE;AACNlG,YAAAA,OAAO,EAAEyG,+BADH;AAENhO,YAAAA,MAAM,EAANA;AAFM;AAFd,SADO;AAFR,OAAP;AAYH;;;;;;AAELiO,sBAAsB,CAAC5Q,IAAvB,GAA8BvB,EAAE,CAACwB,kBAAH,CAAsB;AAAEC,EAAAA,UAAU,EAAE,QAAd;AAAwBC,EAAAA,OAAO,EAAE,QAAjC;AAA2CC,EAAAA,QAAQ,EAAE3B,EAArD;AAAyD4B,EAAAA,IAAI,EAAEuQ,sBAA/D;AAAuFtQ,EAAAA,IAAI,EAAE,EAA7F;AAAiGG,EAAAA,MAAM,EAAEhC,EAAE,CAACiC,eAAH,CAAmB/B;AAA5H,CAAtB,CAA9B;AACAiS,sBAAsB,CAACzP,IAAvB,GAA8B1C,EAAE,CAAC2C,mBAAH,CAAuB;AAAElB,EAAAA,UAAU,EAAE,QAAd;AAAwBC,EAAAA,OAAO,EAAE,QAAjC;AAA2CC,EAAAA,QAAQ,EAAE3B,EAArD;AAAyD4B,EAAAA,IAAI,EAAEuQ,sBAA/D;AAAuFvP,EAAAA,YAAY,EAAE,CAACmP,gBAAD,CAArG;AAAyHH,EAAAA,OAAO,EAAE,CAAC1Q,YAAD,CAAlI;AAAkJ2B,EAAAA,OAAO,EAAE,CAACkP,gBAAD;AAA3J,CAAvB,CAA9B;AACAI,sBAAsB,CAACrP,IAAvB,GAA8B9C,EAAE,CAAC+C,mBAAH,CAAuB;AAAEtB,EAAAA,UAAU,EAAE,QAAd;AAAwBC,EAAAA,OAAO,EAAE,QAAjC;AAA2CC,EAAAA,QAAQ,EAAE3B,EAArD;AAAyD4B,EAAAA,IAAI,EAAEuQ,sBAA/D;AAAuFP,EAAAA,OAAO,EAAE,CAAC,CAAC1Q,YAAD,CAAD;AAAhG,CAAvB,CAA9B;AACAlB,EAAE,CAACmC,wBAAH,CAA4B;AAAEV,EAAAA,UAAU,EAAE,QAAd;AAAwBC,EAAAA,OAAO,EAAE,QAAjC;AAA2CC,EAAAA,QAAQ,EAAE3B,EAArD;AAAyD4B,EAAAA,IAAI,EAAEuQ,sBAA/D;AAAuF/P,EAAAA,UAAU,EAAE,CAAC;AACpHR,IAAAA,IAAI,EAAE1B,QAD8G;AAEpHmC,IAAAA,IAAI,EAAE,CAAC;AACCuP,MAAAA,OAAO,EAAE,CAAC1Q,YAAD,CADV;AAEC0B,MAAAA,YAAY,EAAE,CAACmP,gBAAD,CAFf;AAGClP,MAAAA,OAAO,EAAE,CAACkP,gBAAD,CAHV;AAICF,MAAAA,eAAe,EAAE,CAACE,gBAAD;AAJlB,KAAD;AAF8G,GAAD;AAAnG,CAA5B;AAUA;AACA;AACA;;AAEA,SAAStO,cAAT,EAAyBT,eAAzB,EAA0CsO,mBAA1C,EAA+DY,+BAA/D,EAAgGlN,8BAAhG,EAAgI+E,OAAhI,EAAyId,gBAAzI,EAA2JF,UAA3J,EAAuKpC,YAAvK,EAAqL6H,KAArL,EAA4LpN,uBAA5L,EAAqNqB,oBAArN,EAA2O8E,aAA3O,EAA0PwK,gBAA1P,EAA4QI,sBAA5Q,EAAoSnO,YAApS,EAAkT4C,QAAlT,EAA4TkL,yBAA5T,EAAuVP,YAAvV,EAAqWzG,aAArW,G,CACA","sourcesContent":["import * as i0 from '@angular/core';\nimport { Directive, NgModule, InjectionToken, Injectable, Inject, SecurityContext, Component, HostBinding, HostListener } from '@angular/core';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { Subject } from 'rxjs';\nimport * as i3 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i2 from '@angular/platform-browser';\n\nclass ToastContainerDirective {\n    constructor(el) {\n        this.el = el;\n    }\n    getContainerElement() {\n        return this.el.nativeElement;\n    }\n}\nToastContainerDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.5\", ngImport: i0, type: ToastContainerDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nToastContainerDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.5\", type: ToastContainerDirective, selector: \"[toastContainer]\", exportAs: [\"toastContainer\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.5\", ngImport: i0, type: ToastContainerDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[toastContainer]',\n                    exportAs: 'toastContainer',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; } });\nclass ToastContainerModule {\n}\nToastContainerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.5\", ngImport: i0, type: ToastContainerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nToastContainerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.2.5\", ngImport: i0, type: ToastContainerModule, declarations: [ToastContainerDirective], exports: [ToastContainerDirective] });\nToastContainerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.2.5\", ngImport: i0, type: ToastContainerModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.5\", ngImport: i0, type: ToastContainerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [ToastContainerDirective],\n                    exports: [ToastContainerDirective],\n                }]\n        }] });\n\n/**\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\n */\nclass ComponentPortal {\n    constructor(component, injector) {\n        this.component = component;\n        this.injector = injector;\n    }\n    /** Attach this portal to a host. */\n    attach(host, newestOnTop) {\n        this._attachedHost = host;\n        return host.attach(this, newestOnTop);\n    }\n    /** Detach this portal from its host */\n    detach() {\n        const host = this._attachedHost;\n        if (host) {\n            this._attachedHost = undefined;\n            return host.detach();\n        }\n    }\n    /** Whether this portal is attached to a host. */\n    get isAttached() {\n        return this._attachedHost != null;\n    }\n    /**\n     * Sets the PortalHost reference without performing `attach()`. This is used directly by\n     * the PortalHost when it is performing an `attach()` or `detach()`.\n     */\n    setAttachedHost(host) {\n        this._attachedHost = host;\n    }\n}\n/**\n * Partial implementation of PortalHost that only deals with attaching a\n * ComponentPortal\n */\nclass BasePortalHost {\n    attach(portal, newestOnTop) {\n        this._attachedPortal = portal;\n        return this.attachComponentPortal(portal, newestOnTop);\n    }\n    detach() {\n        if (this._attachedPortal) {\n            this._attachedPortal.setAttachedHost();\n        }\n        this._attachedPortal = undefined;\n        if (this._disposeFn) {\n            this._disposeFn();\n            this._disposeFn = undefined;\n        }\n    }\n    setDisposeFn(fn) {\n        this._disposeFn = fn;\n    }\n}\n\n/**\n * Everything a toast needs to launch\n */\nclass ToastPackage {\n    constructor(toastId, config, message, title, toastType, toastRef) {\n        this.toastId = toastId;\n        this.config = config;\n        this.message = message;\n        this.title = title;\n        this.toastType = toastType;\n        this.toastRef = toastRef;\n        this._onTap = new Subject();\n        this._onAction = new Subject();\n        this.toastRef.afterClosed().subscribe(() => {\n            this._onAction.complete();\n            this._onTap.complete();\n        });\n    }\n    /** Fired on click */\n    triggerTap() {\n        this._onTap.next();\n        if (this.config.tapToDismiss) {\n            this._onTap.complete();\n        }\n    }\n    onTap() {\n        return this._onTap.asObservable();\n    }\n    /** available for use in custom toast */\n    triggerAction(action) {\n        this._onAction.next(action);\n    }\n    onAction() {\n        return this._onAction.asObservable();\n    }\n}\nconst DefaultNoComponentGlobalConfig = {\n    maxOpened: 0,\n    autoDismiss: false,\n    newestOnTop: true,\n    preventDuplicates: false,\n    countDuplicates: false,\n    resetTimeoutOnDuplicate: false,\n    includeTitleDuplicates: false,\n    iconClasses: {\n        error: 'toast-error',\n        info: 'toast-info',\n        success: 'toast-success',\n        warning: 'toast-warning',\n    },\n    // Individual\n    closeButton: false,\n    disableTimeOut: false,\n    timeOut: 5000,\n    extendedTimeOut: 1000,\n    enableHtml: false,\n    progressBar: false,\n    toastClass: 'ngx-toastr',\n    positionClass: 'toast-top-right',\n    titleClass: 'toast-title',\n    messageClass: 'toast-message',\n    easing: 'ease-in',\n    easeTime: 300,\n    tapToDismiss: true,\n    onActivateTick: false,\n    progressAnimation: 'decreasing',\n    payload: null\n};\nconst TOAST_CONFIG = new InjectionToken('ToastConfig');\n\n/**\n * Reference to a toast opened via the Toastr service.\n */\nclass ToastRef {\n    constructor(_overlayRef) {\n        this._overlayRef = _overlayRef;\n        /** Count of duplicates of this toast */\n        this.duplicatesCount = 0;\n        /** Subject for notifying the user that the toast has finished closing. */\n        this._afterClosed = new Subject();\n        /** triggered when toast is activated */\n        this._activate = new Subject();\n        /** notifies the toast that it should close before the timeout */\n        this._manualClose = new Subject();\n        /** notifies the toast that it should reset the timeouts */\n        this._resetTimeout = new Subject();\n        /** notifies the toast that it should count a duplicate toast */\n        this._countDuplicate = new Subject();\n    }\n    manualClose() {\n        this._manualClose.next();\n        this._manualClose.complete();\n    }\n    manualClosed() {\n        return this._manualClose.asObservable();\n    }\n    timeoutReset() {\n        return this._resetTimeout.asObservable();\n    }\n    countDuplicate() {\n        return this._countDuplicate.asObservable();\n    }\n    /**\n     * Close the toast.\n     */\n    close() {\n        this._overlayRef.detach();\n        this._afterClosed.next();\n        this._manualClose.next();\n        this._afterClosed.complete();\n        this._manualClose.complete();\n        this._activate.complete();\n        this._resetTimeout.complete();\n        this._countDuplicate.complete();\n    }\n    /** Gets an observable that is notified when the toast is finished closing. */\n    afterClosed() {\n        return this._afterClosed.asObservable();\n    }\n    isInactive() {\n        return this._activate.isStopped;\n    }\n    activate() {\n        this._activate.next();\n        this._activate.complete();\n    }\n    /** Gets an observable that is notified when the toast has started opening. */\n    afterActivate() {\n        return this._activate.asObservable();\n    }\n    /** Reset the toast timouts and count duplicates */\n    onDuplicate(resetTimeout, countDuplicate) {\n        if (resetTimeout) {\n            this._resetTimeout.next();\n        }\n        if (countDuplicate) {\n            this._countDuplicate.next(++this.duplicatesCount);\n        }\n    }\n}\n/** Custom injector type specifically for instantiating components with a toast. */\nclass ToastInjector {\n    constructor(_toastPackage, _parentInjector) {\n        this._toastPackage = _toastPackage;\n        this._parentInjector = _parentInjector;\n    }\n    get(token, notFoundValue, flags) {\n        if (token === ToastPackage) {\n            return this._toastPackage;\n        }\n        return this._parentInjector.get(token, notFoundValue, flags);\n    }\n}\n\n/**\n * A PortalHost for attaching portals to an arbitrary DOM element outside of the Angular\n * application context.\n *\n * This is the only part of the portal core that directly touches the DOM.\n */\nclass DomPortalHost extends BasePortalHost {\n    constructor(_hostDomElement, _componentFactoryResolver, _appRef) {\n        super();\n        this._hostDomElement = _hostDomElement;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._appRef = _appRef;\n    }\n    /**\n     * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\n     * @param portal Portal to be attached\n     */\n    attachComponentPortal(portal, newestOnTop) {\n        const componentFactory = this._componentFactoryResolver.resolveComponentFactory(portal.component);\n        let componentRef;\n        // If the portal specifies a ViewContainerRef, we will use that as the attachment point\n        // for the component (in terms of Angular's component tree, not rendering).\n        // When the ViewContainerRef is missing, we use the factory to create the component directly\n        // and then manually attach the ChangeDetector for that component to the application (which\n        // happens automatically when using a ViewContainer).\n        componentRef = componentFactory.create(portal.injector);\n        // When creating a component outside of a ViewContainer, we need to manually register\n        // its ChangeDetector with the application. This API is unfortunately not yet published\n        // in Angular core. The change detector must also be deregistered when the component\n        // is destroyed to prevent memory leaks.\n        this._appRef.attachView(componentRef.hostView);\n        this.setDisposeFn(() => {\n            this._appRef.detachView(componentRef.hostView);\n            componentRef.destroy();\n        });\n        // At this point the component has been instantiated, so we move it to the location in the DOM\n        // where we want it to be rendered.\n        if (newestOnTop) {\n            this._hostDomElement.insertBefore(this._getComponentRootNode(componentRef), this._hostDomElement.firstChild);\n        }\n        else {\n            this._hostDomElement.appendChild(this._getComponentRootNode(componentRef));\n        }\n        return componentRef;\n    }\n    /** Gets the root HTMLElement for an instantiated component. */\n    _getComponentRootNode(componentRef) {\n        return componentRef.hostView.rootNodes[0];\n    }\n}\n\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\nclass OverlayRef {\n    constructor(_portalHost) {\n        this._portalHost = _portalHost;\n    }\n    attach(portal, newestOnTop = true) {\n        return this._portalHost.attach(portal, newestOnTop);\n    }\n    /**\n     * Detaches an overlay from a portal.\n     * @returns Resolves when the overlay has been detached.\n     */\n    detach() {\n        return this._portalHost.detach();\n    }\n}\n\n/** Container inside which all toasts will render. */\nclass OverlayContainer {\n    constructor(_document) {\n        this._document = _document;\n    }\n    ngOnDestroy() {\n        if (this._containerElement && this._containerElement.parentNode) {\n            this._containerElement.parentNode.removeChild(this._containerElement);\n        }\n    }\n    /**\n     * This method returns the overlay container element. It will lazily\n     * create the element the first time  it is called to facilitate using\n     * the container in non-browser environments.\n     * @returns the container element\n     */\n    getContainerElement() {\n        if (!this._containerElement) {\n            this._createContainer();\n        }\n        return this._containerElement;\n    }\n    /**\n     * Create the overlay container element, which is simply a div\n     * with the 'cdk-overlay-container' class on the document body.\n     */\n    _createContainer() {\n        const container = this._document.createElement('div');\n        container.classList.add('overlay-container');\n        this._document.body.appendChild(container);\n        this._containerElement = container;\n    }\n}\nOverlayContainer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.5\", ngImport: i0, type: OverlayContainer, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nOverlayContainer.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.2.5\", ngImport: i0, type: OverlayContainer, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.5\", ngImport: i0, type: OverlayContainer, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    } });\n\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/**\n * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\n * used as a low-level building building block for other components. Dialogs, tooltips, menus,\n * selects, etc. can all be built using overlays. The service should primarily be used by authors\n * of re-usable components rather than developers building end-user applications.\n *\n * An overlay *is* a PortalHost, so any kind of Portal can be loaded into one.\n */\nclass Overlay {\n    constructor(_overlayContainer, _componentFactoryResolver, _appRef, _document) {\n        this._overlayContainer = _overlayContainer;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._appRef = _appRef;\n        this._document = _document;\n        // Namespace panes by overlay container\n        this._paneElements = new Map();\n    }\n    /**\n     * Creates an overlay.\n     * @returns A reference to the created overlay.\n     */\n    create(positionClass, overlayContainer) {\n        // get existing pane if possible\n        return this._createOverlayRef(this.getPaneElement(positionClass, overlayContainer));\n    }\n    getPaneElement(positionClass = '', overlayContainer) {\n        if (!this._paneElements.get(overlayContainer)) {\n            this._paneElements.set(overlayContainer, {});\n        }\n        if (!this._paneElements.get(overlayContainer)[positionClass]) {\n            this._paneElements.get(overlayContainer)[positionClass] = this._createPaneElement(positionClass, overlayContainer);\n        }\n        return this._paneElements.get(overlayContainer)[positionClass];\n    }\n    /**\n     * Creates the DOM element for an overlay and appends it to the overlay container.\n     * @returns Newly-created pane element\n     */\n    _createPaneElement(positionClass, overlayContainer) {\n        const pane = this._document.createElement('div');\n        pane.id = 'toast-container';\n        pane.classList.add(positionClass);\n        pane.classList.add('toast-container');\n        if (!overlayContainer) {\n            this._overlayContainer.getContainerElement().appendChild(pane);\n        }\n        else {\n            overlayContainer.getContainerElement().appendChild(pane);\n        }\n        return pane;\n    }\n    /**\n     * Create a DomPortalHost into which the overlay content can be loaded.\n     * @param pane The DOM element to turn into a portal host.\n     * @returns A portal host for the given DOM element.\n     */\n    _createPortalHost(pane) {\n        return new DomPortalHost(pane, this._componentFactoryResolver, this._appRef);\n    }\n    /**\n     * Creates an OverlayRef for an overlay in the given DOM element.\n     * @param pane DOM element for the overlay\n     */\n    _createOverlayRef(pane) {\n        return new OverlayRef(this._createPortalHost(pane));\n    }\n}\nOverlay.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.5\", ngImport: i0, type: Overlay, deps: [{ token: OverlayContainer }, { token: i0.ComponentFactoryResolver }, { token: i0.ApplicationRef }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nOverlay.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.2.5\", ngImport: i0, type: Overlay, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.5\", ngImport: i0, type: Overlay, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: OverlayContainer }, { type: i0.ComponentFactoryResolver }, { type: i0.ApplicationRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    } });\n\nclass ToastrService {\n    constructor(token, overlay, _injector, sanitizer, ngZone) {\n        this.overlay = overlay;\n        this._injector = _injector;\n        this.sanitizer = sanitizer;\n        this.ngZone = ngZone;\n        this.currentlyActive = 0;\n        this.toasts = [];\n        this.index = 0;\n        this.toastrConfig = Object.assign(Object.assign({}, token.default), token.config);\n        if (token.config.iconClasses) {\n            this.toastrConfig.iconClasses = Object.assign(Object.assign({}, token.default.iconClasses), token.config.iconClasses);\n        }\n    }\n    /** show toast */\n    show(message, title, override = {}, type = '') {\n        return this._preBuildNotification(type, message, title, this.applyConfig(override));\n    }\n    /** show successful toast */\n    success(message, title, override = {}) {\n        const type = this.toastrConfig.iconClasses.success || '';\n        return this._preBuildNotification(type, message, title, this.applyConfig(override));\n    }\n    /** show error toast */\n    error(message, title, override = {}) {\n        const type = this.toastrConfig.iconClasses.error || '';\n        return this._preBuildNotification(type, message, title, this.applyConfig(override));\n    }\n    /** show info toast */\n    info(message, title, override = {}) {\n        const type = this.toastrConfig.iconClasses.info || '';\n        return this._preBuildNotification(type, message, title, this.applyConfig(override));\n    }\n    /** show warning toast */\n    warning(message, title, override = {}) {\n        const type = this.toastrConfig.iconClasses.warning || '';\n        return this._preBuildNotification(type, message, title, this.applyConfig(override));\n    }\n    /**\n     * Remove all or a single toast by id\n     */\n    clear(toastId) {\n        // Call every toastRef manualClose function\n        for (const toast of this.toasts) {\n            if (toastId !== undefined) {\n                if (toast.toastId === toastId) {\n                    toast.toastRef.manualClose();\n                    return;\n                }\n            }\n            else {\n                toast.toastRef.manualClose();\n            }\n        }\n    }\n    /**\n     * Remove and destroy a single toast by id\n     */\n    remove(toastId) {\n        const found = this._findToast(toastId);\n        if (!found) {\n            return false;\n        }\n        found.activeToast.toastRef.close();\n        this.toasts.splice(found.index, 1);\n        this.currentlyActive = this.currentlyActive - 1;\n        if (!this.toastrConfig.maxOpened || !this.toasts.length) {\n            return false;\n        }\n        if (this.currentlyActive < this.toastrConfig.maxOpened && this.toasts[this.currentlyActive]) {\n            const p = this.toasts[this.currentlyActive].toastRef;\n            if (!p.isInactive()) {\n                this.currentlyActive = this.currentlyActive + 1;\n                p.activate();\n            }\n        }\n        return true;\n    }\n    /**\n     * Determines if toast message is already shown\n     */\n    findDuplicate(title = '', message = '', resetOnDuplicate, countDuplicates) {\n        const { includeTitleDuplicates } = this.toastrConfig;\n        for (const toast of this.toasts) {\n            const hasDuplicateTitle = includeTitleDuplicates && toast.title === title;\n            if ((!includeTitleDuplicates || hasDuplicateTitle) && toast.message === message) {\n                toast.toastRef.onDuplicate(resetOnDuplicate, countDuplicates);\n                return toast;\n            }\n        }\n        return null;\n    }\n    /** create a clone of global config and apply individual settings */\n    applyConfig(override = {}) {\n        return Object.assign(Object.assign({}, this.toastrConfig), override);\n    }\n    /**\n     * Find toast object by id\n     */\n    _findToast(toastId) {\n        for (let i = 0; i < this.toasts.length; i++) {\n            if (this.toasts[i].toastId === toastId) {\n                return { index: i, activeToast: this.toasts[i] };\n            }\n        }\n        return null;\n    }\n    /**\n     * Determines the need to run inside angular's zone then builds the toast\n     */\n    _preBuildNotification(toastType, message, title, config) {\n        if (config.onActivateTick) {\n            return this.ngZone.run(() => this._buildNotification(toastType, message, title, config));\n        }\n        return this._buildNotification(toastType, message, title, config);\n    }\n    /**\n     * Creates and attaches toast data to component\n     * returns the active toast, or in case preventDuplicates is enabled the original/non-duplicate active toast.\n     */\n    _buildNotification(toastType, message, title, config) {\n        if (!config.toastComponent) {\n            throw new Error('toastComponent required');\n        }\n        // max opened and auto dismiss = true\n        // if timeout = 0 resetting it would result in setting this.hideTime = Date.now(). Hence, we only want to reset timeout if there is\n        // a timeout at all\n        const duplicate = this.findDuplicate(title, message, this.toastrConfig.resetTimeoutOnDuplicate && config.timeOut > 0, this.toastrConfig.countDuplicates);\n        if (((this.toastrConfig.includeTitleDuplicates && title) || message) &&\n            this.toastrConfig.preventDuplicates &&\n            duplicate !== null) {\n            return duplicate;\n        }\n        this.previousToastMessage = message;\n        let keepInactive = false;\n        if (this.toastrConfig.maxOpened && this.currentlyActive >= this.toastrConfig.maxOpened) {\n            keepInactive = true;\n            if (this.toastrConfig.autoDismiss) {\n                this.clear(this.toasts[0].toastId);\n            }\n        }\n        const overlayRef = this.overlay.create(config.positionClass, this.overlayContainer);\n        this.index = this.index + 1;\n        let sanitizedMessage = message;\n        if (message && config.enableHtml) {\n            sanitizedMessage = this.sanitizer.sanitize(SecurityContext.HTML, message);\n        }\n        const toastRef = new ToastRef(overlayRef);\n        const toastPackage = new ToastPackage(this.index, config, sanitizedMessage, title, toastType, toastRef);\n        const toastInjector = new ToastInjector(toastPackage, this._injector);\n        const component = new ComponentPortal(config.toastComponent, toastInjector);\n        const portal = overlayRef.attach(component, this.toastrConfig.newestOnTop);\n        toastRef.componentInstance = portal.instance;\n        const ins = {\n            toastId: this.index,\n            title: title || '',\n            message: message || '',\n            toastRef,\n            onShown: toastRef.afterActivate(),\n            onHidden: toastRef.afterClosed(),\n            onTap: toastPackage.onTap(),\n            onAction: toastPackage.onAction(),\n            portal,\n        };\n        if (!keepInactive) {\n            this.currentlyActive = this.currentlyActive + 1;\n            setTimeout(() => {\n                ins.toastRef.activate();\n            });\n        }\n        this.toasts.push(ins);\n        return ins;\n    }\n}\nToastrService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.5\", ngImport: i0, type: ToastrService, deps: [{ token: TOAST_CONFIG }, { token: Overlay }, { token: i0.Injector }, { token: i2.DomSanitizer }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable });\nToastrService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.2.5\", ngImport: i0, type: ToastrService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.5\", ngImport: i0, type: ToastrService, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [TOAST_CONFIG]\n                    }] }, { type: Overlay }, { type: i0.Injector }, { type: i2.DomSanitizer }, { type: i0.NgZone }];\n    } });\n\nclass Toast {\n    constructor(toastrService, toastPackage, ngZone) {\n        this.toastrService = toastrService;\n        this.toastPackage = toastPackage;\n        this.ngZone = ngZone;\n        /** width of progress bar */\n        this.width = -1;\n        /** a combination of toast type and options.toastClass */\n        this.toastClasses = '';\n        /** controls animation */\n        this.state = {\n            value: 'inactive',\n            params: {\n                easeTime: this.toastPackage.config.easeTime,\n                easing: 'ease-in'\n            }\n        };\n        this.message = toastPackage.message;\n        this.title = toastPackage.title;\n        this.options = toastPackage.config;\n        this.originalTimeout = toastPackage.config.timeOut;\n        this.toastClasses = `${toastPackage.toastType} ${toastPackage.config.toastClass}`;\n        this.sub = toastPackage.toastRef.afterActivate().subscribe(() => {\n            this.activateToast();\n        });\n        this.sub1 = toastPackage.toastRef.manualClosed().subscribe(() => {\n            this.remove();\n        });\n        this.sub2 = toastPackage.toastRef.timeoutReset().subscribe(() => {\n            this.resetTimeout();\n        });\n        this.sub3 = toastPackage.toastRef.countDuplicate().subscribe(count => {\n            this.duplicatesCount = count;\n        });\n    }\n    /** hides component when waiting to be displayed */\n    get displayStyle() {\n        if (this.state.value === 'inactive') {\n            return 'none';\n        }\n        return;\n    }\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n        this.sub1.unsubscribe();\n        this.sub2.unsubscribe();\n        this.sub3.unsubscribe();\n        clearInterval(this.intervalId);\n        clearTimeout(this.timeout);\n    }\n    /**\n     * activates toast and sets timeout\n     */\n    activateToast() {\n        this.state = Object.assign(Object.assign({}, this.state), { value: 'active' });\n        if (!(this.options.disableTimeOut === true || this.options.disableTimeOut === 'timeOut') && this.options.timeOut) {\n            this.outsideTimeout(() => this.remove(), this.options.timeOut);\n            this.hideTime = new Date().getTime() + this.options.timeOut;\n            if (this.options.progressBar) {\n                this.outsideInterval(() => this.updateProgress(), 10);\n            }\n        }\n    }\n    /**\n     * updates progress bar width\n     */\n    updateProgress() {\n        if (this.width === 0 || this.width === 100 || !this.options.timeOut) {\n            return;\n        }\n        const now = new Date().getTime();\n        const remaining = this.hideTime - now;\n        this.width = (remaining / this.options.timeOut) * 100;\n        if (this.options.progressAnimation === 'increasing') {\n            this.width = 100 - this.width;\n        }\n        if (this.width <= 0) {\n            this.width = 0;\n        }\n        if (this.width >= 100) {\n            this.width = 100;\n        }\n    }\n    resetTimeout() {\n        clearTimeout(this.timeout);\n        clearInterval(this.intervalId);\n        this.state = Object.assign(Object.assign({}, this.state), { value: 'active' });\n        this.outsideTimeout(() => this.remove(), this.originalTimeout);\n        this.options.timeOut = this.originalTimeout;\n        this.hideTime = new Date().getTime() + (this.options.timeOut || 0);\n        this.width = -1;\n        if (this.options.progressBar) {\n            this.outsideInterval(() => this.updateProgress(), 10);\n        }\n    }\n    /**\n     * tells toastrService to remove this toast after animation time\n     */\n    remove() {\n        if (this.state.value === 'removed') {\n            return;\n        }\n        clearTimeout(this.timeout);\n        this.state = Object.assign(Object.assign({}, this.state), { value: 'removed' });\n        this.outsideTimeout(() => this.toastrService.remove(this.toastPackage.toastId), +this.toastPackage.config.easeTime);\n    }\n    tapToast() {\n        if (this.state.value === 'removed') {\n            return;\n        }\n        this.toastPackage.triggerTap();\n        if (this.options.tapToDismiss) {\n            this.remove();\n        }\n    }\n    stickAround() {\n        if (this.state.value === 'removed') {\n            return;\n        }\n        clearTimeout(this.timeout);\n        this.options.timeOut = 0;\n        this.hideTime = 0;\n        // disable progressBar\n        clearInterval(this.intervalId);\n        this.width = 0;\n    }\n    delayedHideToast() {\n        if ((this.options.disableTimeOut === true || this.options.disableTimeOut === 'extendedTimeOut') ||\n            this.options.extendedTimeOut === 0 ||\n            this.state.value === 'removed') {\n            return;\n        }\n        this.outsideTimeout(() => this.remove(), this.options.extendedTimeOut);\n        this.options.timeOut = this.options.extendedTimeOut;\n        this.hideTime = new Date().getTime() + (this.options.timeOut || 0);\n        this.width = -1;\n        if (this.options.progressBar) {\n            this.outsideInterval(() => this.updateProgress(), 10);\n        }\n    }\n    outsideTimeout(func, timeout) {\n        if (this.ngZone) {\n            this.ngZone.runOutsideAngular(() => (this.timeout = setTimeout(() => this.runInsideAngular(func), timeout)));\n        }\n        else {\n            this.timeout = setTimeout(() => func(), timeout);\n        }\n    }\n    outsideInterval(func, timeout) {\n        if (this.ngZone) {\n            this.ngZone.runOutsideAngular(() => (this.intervalId = setInterval(() => this.runInsideAngular(func), timeout)));\n        }\n        else {\n            this.intervalId = setInterval(() => func(), timeout);\n        }\n    }\n    runInsideAngular(func) {\n        if (this.ngZone) {\n            this.ngZone.run(() => func());\n        }\n        else {\n            func();\n        }\n    }\n}\nToast.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.5\", ngImport: i0, type: Toast, deps: [{ token: ToastrService }, { token: ToastPackage }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nToast.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.5\", type: Toast, selector: \"[toast-component]\", host: { listeners: { \"click\": \"tapToast()\", \"mouseenter\": \"stickAround()\", \"mouseleave\": \"delayedHideToast()\" }, properties: { \"class\": \"this.toastClasses\", \"@flyInOut\": \"this.state\", \"style.display\": \"this.displayStyle\" } }, ngImport: i0, template: `\n  <button *ngIf=\"options.closeButton\" (click)=\"remove()\" type=\"button\" class=\"toast-close-button\" aria-label=\"Close\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n  <div *ngIf=\"title\" [class]=\"options.titleClass\" [attr.aria-label]=\"title\">\n    {{ title }} <ng-container *ngIf=\"duplicatesCount\">[{{ duplicatesCount + 1 }}]</ng-container>\n  </div>\n  <div *ngIf=\"message && options.enableHtml\" role=\"alertdialog\" aria-live=\"polite\"\n    [class]=\"options.messageClass\" [innerHTML]=\"message\">\n  </div>\n  <div *ngIf=\"message && !options.enableHtml\" role=\"alertdialog\" aria-live=\"polite\"\n    [class]=\"options.messageClass\" [attr.aria-label]=\"message\">\n    {{ message }}\n  </div>\n  <div *ngIf=\"options.progressBar\">\n    <div class=\"toast-progress\" [style.width]=\"width + '%'\"></div>\n  </div>\n  `, isInline: true, directives: [{ type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], animations: [\n        trigger('flyInOut', [\n            state('inactive', style({ opacity: 0 })),\n            state('active', style({ opacity: 1 })),\n            state('removed', style({ opacity: 0 })),\n            transition('inactive => active', animate('{{ easeTime }}ms {{ easing }}')),\n            transition('active => removed', animate('{{ easeTime }}ms {{ easing }}'))\n        ])\n    ] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.5\", ngImport: i0, type: Toast, decorators: [{\n            type: Component,\n            args: [{\n                    selector: '[toast-component]',\n                    template: `\n  <button *ngIf=\"options.closeButton\" (click)=\"remove()\" type=\"button\" class=\"toast-close-button\" aria-label=\"Close\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n  <div *ngIf=\"title\" [class]=\"options.titleClass\" [attr.aria-label]=\"title\">\n    {{ title }} <ng-container *ngIf=\"duplicatesCount\">[{{ duplicatesCount + 1 }}]</ng-container>\n  </div>\n  <div *ngIf=\"message && options.enableHtml\" role=\"alertdialog\" aria-live=\"polite\"\n    [class]=\"options.messageClass\" [innerHTML]=\"message\">\n  </div>\n  <div *ngIf=\"message && !options.enableHtml\" role=\"alertdialog\" aria-live=\"polite\"\n    [class]=\"options.messageClass\" [attr.aria-label]=\"message\">\n    {{ message }}\n  </div>\n  <div *ngIf=\"options.progressBar\">\n    <div class=\"toast-progress\" [style.width]=\"width + '%'\"></div>\n  </div>\n  `,\n                    animations: [\n                        trigger('flyInOut', [\n                            state('inactive', style({ opacity: 0 })),\n                            state('active', style({ opacity: 1 })),\n                            state('removed', style({ opacity: 0 })),\n                            transition('inactive => active', animate('{{ easeTime }}ms {{ easing }}')),\n                            transition('active => removed', animate('{{ easeTime }}ms {{ easing }}'))\n                        ])\n                    ],\n                    preserveWhitespaces: false\n                }]\n        }], ctorParameters: function () { return [{ type: ToastrService }, { type: ToastPackage }, { type: i0.NgZone }]; }, propDecorators: { toastClasses: [{\n                type: HostBinding,\n                args: ['class']\n            }], state: [{\n                type: HostBinding,\n                args: ['@flyInOut']\n            }], displayStyle: [{\n                type: HostBinding,\n                args: ['style.display']\n            }], tapToast: [{\n                type: HostListener,\n                args: ['click']\n            }], stickAround: [{\n                type: HostListener,\n                args: ['mouseenter']\n            }], delayedHideToast: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nconst DefaultGlobalConfig = Object.assign(Object.assign({}, DefaultNoComponentGlobalConfig), { toastComponent: Toast });\nclass ToastrModule {\n    static forRoot(config = {}) {\n        return {\n            ngModule: ToastrModule,\n            providers: [\n                {\n                    provide: TOAST_CONFIG,\n                    useValue: {\n                        default: DefaultGlobalConfig,\n                        config,\n                    },\n                },\n            ],\n        };\n    }\n}\nToastrModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.5\", ngImport: i0, type: ToastrModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nToastrModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.2.5\", ngImport: i0, type: ToastrModule, declarations: [Toast], imports: [CommonModule], exports: [Toast] });\nToastrModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.2.5\", ngImport: i0, type: ToastrModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.5\", ngImport: i0, type: ToastrModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [Toast],\n                    exports: [Toast],\n                    entryComponents: [Toast],\n                }]\n        }] });\nclass ToastrComponentlessModule {\n    static forRoot(config = {}) {\n        return {\n            ngModule: ToastrModule,\n            providers: [\n                {\n                    provide: TOAST_CONFIG,\n                    useValue: {\n                        default: DefaultNoComponentGlobalConfig,\n                        config,\n                    },\n                },\n            ],\n        };\n    }\n}\nToastrComponentlessModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.5\", ngImport: i0, type: ToastrComponentlessModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nToastrComponentlessModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.2.5\", ngImport: i0, type: ToastrComponentlessModule, imports: [CommonModule] });\nToastrComponentlessModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.2.5\", ngImport: i0, type: ToastrComponentlessModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.5\", ngImport: i0, type: ToastrComponentlessModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                }]\n        }] });\n\nclass ToastNoAnimation {\n    constructor(toastrService, toastPackage, appRef) {\n        this.toastrService = toastrService;\n        this.toastPackage = toastPackage;\n        this.appRef = appRef;\n        /** width of progress bar */\n        this.width = -1;\n        /** a combination of toast type and options.toastClass */\n        this.toastClasses = '';\n        /** controls animation */\n        this.state = 'inactive';\n        this.message = toastPackage.message;\n        this.title = toastPackage.title;\n        this.options = toastPackage.config;\n        this.originalTimeout = toastPackage.config.timeOut;\n        this.toastClasses = `${toastPackage.toastType} ${toastPackage.config.toastClass}`;\n        this.sub = toastPackage.toastRef.afterActivate().subscribe(() => {\n            this.activateToast();\n        });\n        this.sub1 = toastPackage.toastRef.manualClosed().subscribe(() => {\n            this.remove();\n        });\n        this.sub2 = toastPackage.toastRef.timeoutReset().subscribe(() => {\n            this.resetTimeout();\n        });\n        this.sub3 = toastPackage.toastRef.countDuplicate().subscribe(count => {\n            this.duplicatesCount = count;\n        });\n    }\n    /** hides component when waiting to be displayed */\n    get displayStyle() {\n        if (this.state === 'inactive') {\n            return 'none';\n        }\n    }\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n        this.sub1.unsubscribe();\n        this.sub2.unsubscribe();\n        this.sub3.unsubscribe();\n        clearInterval(this.intervalId);\n        clearTimeout(this.timeout);\n    }\n    /**\n     * activates toast and sets timeout\n     */\n    activateToast() {\n        this.state = 'active';\n        if (!(this.options.disableTimeOut === true || this.options.disableTimeOut === 'timeOut') && this.options.timeOut) {\n            this.timeout = setTimeout(() => {\n                this.remove();\n            }, this.options.timeOut);\n            this.hideTime = new Date().getTime() + this.options.timeOut;\n            if (this.options.progressBar) {\n                this.intervalId = setInterval(() => this.updateProgress(), 10);\n            }\n        }\n        if (this.options.onActivateTick) {\n            this.appRef.tick();\n        }\n    }\n    /**\n     * updates progress bar width\n     */\n    updateProgress() {\n        if (this.width === 0 || this.width === 100 || !this.options.timeOut) {\n            return;\n        }\n        const now = new Date().getTime();\n        const remaining = this.hideTime - now;\n        this.width = (remaining / this.options.timeOut) * 100;\n        if (this.options.progressAnimation === 'increasing') {\n            this.width = 100 - this.width;\n        }\n        if (this.width <= 0) {\n            this.width = 0;\n        }\n        if (this.width >= 100) {\n            this.width = 100;\n        }\n    }\n    resetTimeout() {\n        clearTimeout(this.timeout);\n        clearInterval(this.intervalId);\n        this.state = 'active';\n        this.options.timeOut = this.originalTimeout;\n        this.timeout = setTimeout(() => this.remove(), this.originalTimeout);\n        this.hideTime = new Date().getTime() + (this.originalTimeout || 0);\n        this.width = -1;\n        if (this.options.progressBar) {\n            this.intervalId = setInterval(() => this.updateProgress(), 10);\n        }\n    }\n    /**\n     * tells toastrService to remove this toast after animation time\n     */\n    remove() {\n        if (this.state === 'removed') {\n            return;\n        }\n        clearTimeout(this.timeout);\n        this.state = 'removed';\n        this.timeout = setTimeout(() => this.toastrService.remove(this.toastPackage.toastId));\n    }\n    tapToast() {\n        if (this.state === 'removed') {\n            return;\n        }\n        this.toastPackage.triggerTap();\n        if (this.options.tapToDismiss) {\n            this.remove();\n        }\n    }\n    stickAround() {\n        if (this.state === 'removed') {\n            return;\n        }\n        clearTimeout(this.timeout);\n        this.options.timeOut = 0;\n        this.hideTime = 0;\n        // disable progressBar\n        clearInterval(this.intervalId);\n        this.width = 0;\n    }\n    delayedHideToast() {\n        if ((this.options.disableTimeOut === true || this.options.disableTimeOut === 'extendedTimeOut') ||\n            this.options.extendedTimeOut === 0 ||\n            this.state === 'removed') {\n            return;\n        }\n        this.timeout = setTimeout(() => this.remove(), this.options.extendedTimeOut);\n        this.options.timeOut = this.options.extendedTimeOut;\n        this.hideTime = new Date().getTime() + (this.options.timeOut || 0);\n        this.width = -1;\n        if (this.options.progressBar) {\n            this.intervalId = setInterval(() => this.updateProgress(), 10);\n        }\n    }\n}\nToastNoAnimation.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.5\", ngImport: i0, type: ToastNoAnimation, deps: [{ token: ToastrService }, { token: ToastPackage }, { token: i0.ApplicationRef }], target: i0.ɵɵFactoryTarget.Component });\nToastNoAnimation.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.5\", type: ToastNoAnimation, selector: \"[toast-component]\", host: { listeners: { \"click\": \"tapToast()\", \"mouseenter\": \"stickAround()\", \"mouseleave\": \"delayedHideToast()\" }, properties: { \"class\": \"this.toastClasses\", \"style.display\": \"this.displayStyle\" } }, ngImport: i0, template: `\n  <button *ngIf=\"options.closeButton\" (click)=\"remove()\" type=\"button\" class=\"toast-close-button\" aria-label=\"Close\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n  <div *ngIf=\"title\" [class]=\"options.titleClass\" [attr.aria-label]=\"title\">\n    {{ title }} <ng-container *ngIf=\"duplicatesCount\">[{{ duplicatesCount + 1 }}]</ng-container>\n  </div>\n  <div *ngIf=\"message && options.enableHtml\" role=\"alert\" aria-live=\"polite\"\n    [class]=\"options.messageClass\" [innerHTML]=\"message\">\n  </div>\n  <div *ngIf=\"message && !options.enableHtml\" role=\"alert\" aria-live=\"polite\"\n    [class]=\"options.messageClass\" [attr.aria-label]=\"message\">\n    {{ message }}\n  </div>\n  <div *ngIf=\"options.progressBar\">\n    <div class=\"toast-progress\" [style.width]=\"width + '%'\"></div>\n  </div>\n  `, isInline: true, directives: [{ type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.5\", ngImport: i0, type: ToastNoAnimation, decorators: [{\n            type: Component,\n            args: [{\n                    selector: '[toast-component]',\n                    template: `\n  <button *ngIf=\"options.closeButton\" (click)=\"remove()\" type=\"button\" class=\"toast-close-button\" aria-label=\"Close\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n  <div *ngIf=\"title\" [class]=\"options.titleClass\" [attr.aria-label]=\"title\">\n    {{ title }} <ng-container *ngIf=\"duplicatesCount\">[{{ duplicatesCount + 1 }}]</ng-container>\n  </div>\n  <div *ngIf=\"message && options.enableHtml\" role=\"alert\" aria-live=\"polite\"\n    [class]=\"options.messageClass\" [innerHTML]=\"message\">\n  </div>\n  <div *ngIf=\"message && !options.enableHtml\" role=\"alert\" aria-live=\"polite\"\n    [class]=\"options.messageClass\" [attr.aria-label]=\"message\">\n    {{ message }}\n  </div>\n  <div *ngIf=\"options.progressBar\">\n    <div class=\"toast-progress\" [style.width]=\"width + '%'\"></div>\n  </div>\n  `,\n                }]\n        }], ctorParameters: function () { return [{ type: ToastrService }, { type: ToastPackage }, { type: i0.ApplicationRef }]; }, propDecorators: { toastClasses: [{\n                type: HostBinding,\n                args: ['class']\n            }], displayStyle: [{\n                type: HostBinding,\n                args: ['style.display']\n            }], tapToast: [{\n                type: HostListener,\n                args: ['click']\n            }], stickAround: [{\n                type: HostListener,\n                args: ['mouseenter']\n            }], delayedHideToast: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\nconst DefaultNoAnimationsGlobalConfig = Object.assign(Object.assign({}, DefaultNoComponentGlobalConfig), { toastComponent: ToastNoAnimation });\nclass ToastNoAnimationModule {\n    static forRoot(config = {}) {\n        return {\n            ngModule: ToastNoAnimationModule,\n            providers: [\n                {\n                    provide: TOAST_CONFIG,\n                    useValue: {\n                        default: DefaultNoAnimationsGlobalConfig,\n                        config,\n                    },\n                },\n            ],\n        };\n    }\n}\nToastNoAnimationModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.5\", ngImport: i0, type: ToastNoAnimationModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nToastNoAnimationModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.2.5\", ngImport: i0, type: ToastNoAnimationModule, declarations: [ToastNoAnimation], imports: [CommonModule], exports: [ToastNoAnimation] });\nToastNoAnimationModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.2.5\", ngImport: i0, type: ToastNoAnimationModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.5\", ngImport: i0, type: ToastNoAnimationModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [ToastNoAnimation],\n                    exports: [ToastNoAnimation],\n                    entryComponents: [ToastNoAnimation],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BasePortalHost, ComponentPortal, DefaultGlobalConfig, DefaultNoAnimationsGlobalConfig, DefaultNoComponentGlobalConfig, Overlay, OverlayContainer, OverlayRef, TOAST_CONFIG, Toast, ToastContainerDirective, ToastContainerModule, ToastInjector, ToastNoAnimation, ToastNoAnimationModule, ToastPackage, ToastRef, ToastrComponentlessModule, ToastrModule, ToastrService };\n//# sourceMappingURL=ngx-toastr.mjs.map\n"]},"metadata":{},"sourceType":"module"}